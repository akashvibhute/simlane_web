[INFO][m Initializing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO][m Initializing environment for https://github.com/adamchainz/django-upgrade.
[INFO][m Initializing environment for https://github.com/astral-sh/ruff-pre-commit.
[INFO][m Initializing environment for https://github.com/Riverside-Healthcare/djLint.
[INFO][m Installing environment for https://github.com/pre-commit/pre-commit-hooks.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/adamchainz/django-upgrade.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/astral-sh/ruff-pre-commit.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
[INFO][m Installing environment for https://github.com/Riverside-Healthcare/djLint.
[INFO][m Once installed this environment will be reused.
[INFO][m This may take a few minutes...
trim trailing whitespace.................................................[41mFailed[m
[2m- hook id: trailing-whitespace[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

Fixing simlane/static/css/tailwind.css
Fixing simlane/templates/sim/profiles/search_to_link.html
Fixing simlane/sim/views.py
Fixing simlane/templates/cotton/skeleton_card.html
Fixing simlane/teams/management/commands/create_test_participation.py
Fixing config/settings/unfold.py
Fixing simlane/templates/sim/tracks/layout_detail.html
Fixing simlane/api/schemas/events.py
Fixing simlane/templates/teams/club_event_signup_edit.html
Fixing simlane/templates/sim/components/refresh_status.html
Fixing simlane/templates/sim/profiles/search_results_partial.html
Fixing simlane/core/management/commands/cache_management.py
Fixing simlane/sim/utils/__init__.py
Fixing config/settings/base.py
Fixing simlane/teams/utils.py
Fixing simlane/templates/sim/cars/list_partial.html
Fixing simlane/templates/sim/tracks/detail.html
Fixing simlane/core/cache_utils.py
Fixing simlane/core/search.py
Fixing simlane/templates/sim/tracks/tracks_list_partial.html
Fixing simlane/static/js/components/team-formation.js
Fixing simlane/sim/utils/result_processing.py
Fixing simlane/teams/models.py
Fixing simlane/teams/forms.py
Fixing simlane/iracing/management/commands/fetch_iracing_events.py
Fixing simlane/sim/management/commands/load_iracing_data.py
Fixing simlane/templates/sim/profiles/link_confirm.html
Fixing simlane/templates/cotton/skeleton_image.html
Fixing simlane/templates/teams/invitation_response.html
Fixing simlane/sim/middleware.py
Fixing simlane/iracing/tasks.py
Fixing simlane/templates/components/footer.html
Fixing simlane/templates/teams/team_formation_dashboard.html
Fixing simlane/templates/cotton/car_category_badge.html
Fixing simlane/templates/admin/index.html
Fixing simlane/templates/cotton/car_class_badge.html
Fixing simlane/templates/users/profile/profile_content_partial.html
Fixing simlane/templates/sim/events/upcoming_list.html
Fixing simlane/iracing/iracing_api_client.py
Fixing simlane/templates/sim/profiles/list.html
Fixing simlane/iracing/management/commands/test_iracing_session.py
Fixing simlane/static/js/components/availability-calendar.js
Fixing simlane/templates/cotton/skeleton_text.html
Fixing simlane/templates/sim/profiles/link_confirm_partial.html
Fixing simlane/templates/teams/club_dashboard_events_tab_partial.html
Fixing simlane/templates/teams/club_create.html
Fixing simlane/static/js/event-signup.js
Fixing simlane/core/management/commands/create_base_seed_data.py
Fixing simlane/templates/teams/event_signup_create_enhanced.html
Fixing simlane/sim/consumers.py
Fixing simlane/static/js/availability/calendar-init.js
Fixing simlane/core/models.py
Fixing simlane/templates/sim/profiles/search_results.html
Fixing simlane/sim/management/commands/load_car_classes.py
Fixing justfile
Fixing simlane/iracing/services.py
Fixing simlane/templates/teams/club_event_signups.html
Fixing webpack/common.config.js
Fixing simlane/api/routers/events.py
Fixing simlane/iracing/management/commands/test_completed_events_check.py
Fixing simlane/templates/teams/club_update.html
Fixing simlane/templates/sim/cars/cars_list_partial.html
Fixing simlane/templates/teams/club_event_signups_partial.html
Fixing simlane/templates/sim/events/list.html
Fixing simlane/templates/teams/club_event_signup_detail.html
Fixing simlane/templates/teams/club_events_list_partial.html
Fixing simlane/templates/sim/profiles/list_partial.html
Fixing simlane/templates/teams/club_event_signup_create.html
Fixing simlane/templates/sim/events/events_list_partial.html
Fixing simlane/templates/sim/events/detail.html
Fixing simlane/static/js/ws.js
Fixing simlane/templates/sim/profiles/simulator_list.html
Fixing simlane/templates/sim/events/list_partial.html
Fixing simlane/templates/cotton/car_class_card.html
Fixing simlane/core/middleware.py
Fixing simlane/iracing/management/commands/test_fetch_results.py
Fixing simlane/templates/components/search_component.html
Fixing simlane/templates/teams/club_event_signup_bulk_create.html
Fixing simlane/templates/core/search/search_page.html
Fixing simlane/templates/sim/tracks/list.html
Fixing simlane/sim/models.py
Fixing simlane/templates/sim/events/dropdown_results_partial.html
Fixing simlane/sim/admin.py
Fixing simlane/api/middleware.py
Fixing simlane/templates/teams/request_join_club.html
Fixing simlane/templates/sim/profiles/profiles_results_partial.html
Fixing simlane/core/views.py
Fixing simlane/core/admin.py
Fixing simlane/templates/teams/partials/participant_list.html
Fixing simlane/iracing/management/commands/test_fetch_user_races.py
Fixing simlane/teams/views.py
Fixing simlane/teams/admin.py
Fixing simlane/templates/teams/club_dashboard_events_section.html
Fixing simlane/templates/sim/dashboard/home.html
Fixing simlane/templates/sim/cars/detail.html
Fixing simlane/users/views.py
Fixing simlane/templates/cotton/skeleton_circle.html
Fixing simlane/templates/sim/tracks/list_partial.html
Fixing .cursorrules
Fixing simlane/static/js/team-formation.js
Fixing simlane/teams/services.py
Fixing simlane/core/management/commands/debug_car_data.py
Fixing simlane/templates/core/search/search_results_partial.html
Fixing simlane/templates/teams/partials/team_suggestions.html
Fixing simlane/iracing/auto_create.py
Fixing simlane/static/js/project.js
Fixing simlane/teams/urls.py
Fixing simlane/core/management/commands/debug_categories.py
Fixing simlane/templates/sim/profiles/search_to_link_partial.html
Fixing simlane/templates/cotton/skeleton_grid.html
Fixing simlane/templates/teams/browse_clubs.html
Fixing simlane/sim/utils/image_downloader.py
Fixing simlane/core/management/commands/test_search.py
Fixing simlane/templates/sim/profiles/detail.html
Fixing simlane/templates/components/navbar.html
Fixing simlane/templates/sim/cars/list.html

fix end of files.........................................................[41mFailed[m
[2m- hook id: end-of-file-fixer[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

Fixing simlane/templates/sim/profiles/search_to_link.html
Fixing simlane/sim/views.py
Fixing simlane/templates/cotton/skeleton_card.html
Fixing simlane/teams/management/commands/create_test_participation.py
Fixing config/settings/unfold.py
Fixing simlane/templates/sim/tracks/layout_detail.html
Fixing simlane/templates/teams/club_event_signup_edit.html
Fixing simlane/templates/sim/components/refresh_status.html
Fixing simlane/templates/sim/profiles/search_results_partial.html
Fixing simlane/core/management/commands/cache_management.py
Fixing simlane/sim/utils/__init__.py
Fixing config/settings/base.py
Fixing simlane/templates/sim/cars/list_partial.html
Fixing simlane/templates/sim/tracks/detail.html
Fixing simlane/core/cache_utils.py
Fixing simlane/core/search.py
Fixing simlane/templates/sim/tracks/tracks_list_partial.html
Fixing simlane/static/js/components/team-formation.js
Fixing simlane/sim/utils/result_processing.py
Fixing simlane/teams/models.py
Fixing simlane/iracing/management/commands/fetch_iracing_events.py
Fixing simlane/sim/management/commands/load_iracing_data.py
Fixing simlane/templates/sim/profiles/link_confirm.html
Fixing simlane/templates/cotton/skeleton_image.html
Fixing simlane/templates/teams/invitation_response.html
Fixing simlane/sim/middleware.py
Fixing simlane/templates/teams/team_formation_dashboard.html
Fixing simlane/templates/cotton/car_category_badge.html
Fixing simlane/templates/admin/index.html
Fixing simlane/templates/cotton/car_class_badge.html
Fixing simlane/templates/users/profile/profile_content_partial.html
Fixing simlane/templates/sim/events/upcoming_list.html
Fixing simlane/iracing/iracing_api_client.py
Fixing simlane/templates/sim/profiles/list.html
Fixing simlane/iracing/management/commands/test_iracing_session.py
Fixing simlane/static/js/components/availability-calendar.js
Fixing simlane/templates/cotton/skeleton_text.html
Fixing simlane/templates/sim/profiles/link_confirm_partial.html
Fixing simlane/templates/teams/club_dashboard_events_tab_partial.html
Fixing simlane/static/js/event-signup.js
Fixing simlane/core/management/commands/create_base_seed_data.py
Fixing simlane/templates/teams/event_signup_create_enhanced.html
Fixing simlane/sim/consumers.py
Fixing simlane/static/js/availability/calendar-init.js
Fixing simlane/templates/sim/profiles/search_results.html
Fixing simlane/sim/management/commands/load_car_classes.py
Fixing simlane/templates/teams/club_event_signups.html
Fixing simlane/iracing/management/commands/test_completed_events_check.py
Fixing simlane/templates/sim/cars/cars_list_partial.html
Fixing simlane/templates/teams/club_event_signups_partial.html
Fixing simlane/templates/sim/events/list.html
Fixing simlane/templates/teams/club_event_signup_detail.html
Fixing simlane/templates/teams/club_events_list_partial.html
Fixing simlane/templates/sim/profiles/list_partial.html
Fixing docker-compose.full.yml
Fixing simlane/templates/teams/club_event_signup_create.html
Fixing simlane/templates/sim/events/events_list_partial.html
Fixing simlane/templates/sim/events/detail.html
Fixing simlane/static/js/ws.js
Fixing simlane/templates/sim/profiles/simulator_list.html
Fixing simlane/templates/sim/events/list_partial.html
Fixing simlane/templates/cotton/car_class_card.html
Fixing simlane/iracing/management/commands/test_fetch_results.py
Fixing .vscode/settings.json
Fixing simlane/templates/components/search_component.html
Fixing simlane/templates/teams/club_event_signup_bulk_create.html
Fixing simlane/templates/core/search/search_page.html
Fixing simlane/templates/sim/tracks/list.html
Fixing simlane/templates/sim/events/dropdown_results_partial.html
Fixing simlane/api/middleware.py
Fixing simlane/templates/teams/request_join_club.html
Fixing simlane/templates/sim/profiles/profiles_results_partial.html
Fixing simlane/templates/teams/partials/participant_list.html
Fixing simlane/iracing/management/commands/test_fetch_user_races.py
Fixing simlane/templates/teams/club_dashboard_events_section.html
Fixing simlane/templates/sim/dashboard/home.html
Fixing simlane/templates/sim/cars/detail.html
Fixing simlane/templates/cotton/skeleton_circle.html
Fixing simlane/templates/sim/tracks/list_partial.html
Fixing simlane/static/js/team-formation.js
Fixing simlane/core/management/commands/debug_car_data.py
Fixing simlane/templates/core/search/search_results_partial.html
Fixing simlane/templates/teams/partials/team_suggestions.html
Fixing simlane/iracing/auto_create.py
Fixing simlane/core/management/commands/debug_categories.py
Fixing simlane/templates/sim/profiles/search_to_link_partial.html
Fixing simlane/templates/cotton/skeleton_grid.html
Fixing simlane/templates/teams/browse_clubs.html
Fixing simlane/sim/utils/image_downloader.py
Fixing simlane/core/management/commands/test_search.py
Fixing simlane/templates/sim/profiles/detail.html
Fixing simlane/templates/sim/cars/list.html

check json...............................................................[42mPassed[m
check toml...............................................................[42mPassed[m
check xml................................................................[42mPassed[m
check yaml...............................................................[42mPassed[m
debug statements (python)................................................[42mPassed[m
check builtin type constructor use.......................................[42mPassed[m
check for case conflicts.................................................[42mPassed[m
check docstring is first.................................................[41mFailed[m
[2m- hook id: check-docstring-first[m
[2m- exit code: 1[m

simlane/teams/utils.py:443: Module docstring appears after code (code seen on line 1).

detect private key.......................................................[42mPassed[m
django-upgrade...........................................................[41mFailed[m
[2m- hook id: django-upgrade[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

Rewriting simlane/sim/models.py

ruff (legacy alias)......................................................[41mFailed[m
[2m- hook id: ruff[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

[1mconfig/settings/base.py[0m[36m:[0m445[36m:[0m27[36m:[0m [1;31mS105[0m Possible hardcoded password assigned to: "HEADLESS_TOKEN_STRATEGY"
    [1m[94m|[0m
[1m[94m444 |[0m # Custom JWT Token Strategy for mobile authentication
[1m[94m445 |[0m HEADLESS_TOKEN_STRATEGY = "simlane.api.auth.JWTTokenStrategy"
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS105[0m
[1m[94m446 |[0m
[1m[94m447 |[0m # JWT Configuration
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m280[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m278 |[0m                         "title": _("Event Participation"),
[1m[94m279 |[0m                         "icon": "how_to_reg",
[1m[94m280 |[0m                         "link": reverse_lazy("admin:teams_eventparticipation_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m281 |[0m                     },
[1m[94m282 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m285[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m283 |[0m                         "title": _("Event Signup Invitations"),
[1m[94m284 |[0m                         "icon": "send",
[1m[94m285 |[0m                         "link": reverse_lazy("admin:teams_eventsignupinvitation_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m286 |[0m                     },
[1m[94m287 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m290[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m288 |[0m                         "title": _("Availability Windows"),
[1m[94m289 |[0m                         "icon": "access_time",
[1m[94m290 |[0m                         "link": reverse_lazy("admin:teams_availabilitywindow_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m291 |[0m                     },
[1m[94m292 |[0m                 ],
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m319[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m317 |[0m                         "title": _("Discord Guilds"),
[1m[94m318 |[0m                         "icon": "forum",
[1m[94m319 |[0m                         "link": reverse_lazy("admin:discord_bot_discordguild_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m320 |[0m                     },
[1m[94m321 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m329[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m327 |[0m                         "title": _("Bot Settings"),
[1m[94m328 |[0m                         "icon": "settings",
[1m[94m329 |[0m                         "link": reverse_lazy("admin:discord_bot_botsettings_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m330 |[0m                     },
[1m[94m331 |[0m                 ],
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m341[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m339 |[0m                         "title": _("Sync Logs"),
[1m[94m340 |[0m                         "icon": "sync",
[1m[94m341 |[0m                         "link": reverse_lazy("admin:garage61_garage61synclog_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m342 |[0m                     },
[1m[94m343 |[0m                 ],
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m353[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m351 |[0m                         "title": _("Social Accounts"),
[1m[94m352 |[0m                         "icon": "account_box",
[1m[94m353 |[0m                         "link": reverse_lazy("admin:socialaccount_socialaccount_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m354 |[0m                     },
[1m[94m355 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m358[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m356 |[0m                         "title": _("Social Apps"),
[1m[94m357 |[0m                         "icon": "apps",
[1m[94m358 |[0m                         "link": reverse_lazy("admin:socialaccount_socialapp_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m359 |[0m                     },
[1m[94m360 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m363[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m361 |[0m                         "title": _("Social Tokens"),
[1m[94m362 |[0m                         "icon": "vpn_key",
[1m[94m363 |[0m                         "link": reverse_lazy("admin:socialaccount_socialtoken_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m364 |[0m                     },
[1m[94m365 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m380[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m378 |[0m                         "title": _("Periodic Tasks"),
[1m[94m379 |[0m                         "icon": "schedule",
[1m[94m380 |[0m                         "link": reverse_lazy("admin:django_celery_beat_periodictask_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m381 |[0m                     },
[1m[94m382 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m385[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m383 |[0m                         "title": _("Cron Schedule"),
[1m[94m384 |[0m                         "icon": "access_time",
[1m[94m385 |[0m                         "link": reverse_lazy("admin:django_celery_beat_crontabschedule_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m386 |[0m                     },
[1m[94m387 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m390[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m388 |[0m                         "title": _("Interval Schedule"),
[1m[94m389 |[0m                         "icon": "timer",
[1m[94m390 |[0m                         "link": reverse_lazy("admin:django_celery_beat_intervalschedule_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m391 |[0m                     },
[1m[94m392 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m395[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m393 |[0m                         "title": _("Solar Schedule"),
[1m[94m394 |[0m                         "icon": "wb_sunny",
[1m[94m395 |[0m                         "link": reverse_lazy("admin:django_celery_beat_solarschedule_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m396 |[0m                     },
[1m[94m397 |[0m                     {
    [1m[94m|[0m

[1mconfig/settings/unfold.py[0m[36m:[0m400[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m398 |[0m                         "title": _("Clocked Schedule"),
[1m[94m399 |[0m                         "icon": "alarm",
[1m[94m400 |[0m                         "link": reverse_lazy("admin:django_celery_beat_clockedschedule_changelist"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m401 |[0m                     },
[1m[94m402 |[0m                 ],
    [1m[94m|[0m

[1mconfig/urls.py[0m[36m:[0m32[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
   [1m[94m|[0m
[1m[94m30 |[0m     path("accounts/garage61/", include("simlane.garage61_provider.urls")),
[1m[94m31 |[0m     # Auth endpoints for headless/web compatibility
[1m[94m32 |[0m     path("auth/verify-email/<str:key>/", auth_verify_email_view, name="auth_verify_email"),
   [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m33 |[0m     path("auth/reset-password/", auth_reset_password_view, name="auth_reset_password"),
[1m[94m34 |[0m     path("auth/reset-password/<str:key>/", auth_reset_password_from_key_view, name="auth_reset_password_from_key"),
   [1m[94m|[0m

[1mconfig/urls.py[0m[36m:[0m34[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (115 > 88)
   [1m[94m|[0m
[1m[94m32 |[0m     path("auth/verify-email/<str:key>/", auth_verify_email_view, name="auth_verify_email"),
[1m[94m33 |[0m     path("auth/reset-password/", auth_reset_password_view, name="auth_reset_password"),
[1m[94m34 |[0m     path("auth/reset-password/<str:key>/", auth_reset_password_from_key_view, name="auth_reset_password_from_key"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m35 |[0m     path("auth/signup/", auth_signup_view, name="auth_signup"),
[1m[94m36 |[0m     path("auth/provider/callback/", auth_socialaccount_login_error_view, name="auth_socialaccount_login_error"),
   [1m[94m|[0m

[1mconfig/urls.py[0m[36m:[0m36[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (112 > 88)
   [1m[94m|[0m
[1m[94m34 |[0m     path("auth/reset-password/<str:key>/", auth_reset_password_from_key_view, name="auth_reset_password_from_key"),
[1m[94m35 |[0m     path("auth/signup/", auth_signup_view, name="auth_signup"),
[1m[94m36 |[0m     path("auth/provider/callback/", auth_socialaccount_login_error_view, name="auth_socialaccount_login_error"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m37 |[0m     # Your stuff: custom urls includes go here
[1m[94m38 |[0m     path("", include("simlane.core.urls", namespace="core")),
   [1m[94m|[0m

[1mconfig/urls.py[0m[36m:[0m42[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m40 |[0m     # Top-level drivers and dashboard
[1m[94m41 |[0m     path("drivers/", include((profiles_patterns, "drivers"), namespace="drivers")),
[1m[94m42 |[0m     path("dashboard/", include((dashboard_patterns, "dashboard"), namespace="dashboard")),
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m43 |[0m     # Top-level cars, tracks, and events pages
[1m[94m44 |[0m     path("cars/", include(cars_patterns)),
   [1m[94m|[0m

[1mconfig/urls.py[0m[36m:[0m83[36m:[0m23[36m:[0m [1;31mRUF005[0m Consider iterable unpacking instead of concatenation
   [1m[94m|[0m
[1m[94m81 |[0m         import debug_toolbar
[1m[94m82 |[0m
[1m[94m83 |[0m         urlpatterns = [path("__debug__/", include(debug_toolbar.urls))] + urlpatterns
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mRUF005[0m
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace with iterable unpacking

[1mscripts/seed_dev_data.py[0m[36m:[0m23[36m:[0m20[36m:[0m [1;31mPTH120[0m `os.path.dirname()` should be replaced by `Path.parent`
   [1m[94m|[0m
[1m[94m22 |[0m # Add the project root to Python path
[1m[94m23 |[0m sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
   [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPTH120[0m
[1m[94m24 |[0m
[1m[94m25 |[0m # Set up Django
   [1m[94m|[0m

[1mscripts/seed_dev_data.py[0m[36m:[0m23[36m:[0m36[36m:[0m [1;31mPTH120[0m `os.path.dirname()` should be replaced by `Path.parent`
   [1m[94m|[0m
[1m[94m22 |[0m # Add the project root to Python path
[1m[94m23 |[0m sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
   [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPTH120[0m
[1m[94m24 |[0m
[1m[94m25 |[0m # Set up Django
   [1m[94m|[0m

[1mscripts/seed_dev_data.py[0m[36m:[0m23[36m:[0m52[36m:[0m [1;31mPTH100[0m `os.path.abspath()` should be replaced by `Path.resolve()`
   [1m[94m|[0m
[1m[94m22 |[0m # Add the project root to Python path
[1m[94m23 |[0m sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
   [1m[94m|[0m                                                    [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPTH100[0m
[1m[94m24 |[0m
[1m[94m25 |[0m # Set up Django
   [1m[94m|[0m

[1mscripts/seed_dev_data.py[0m[36m:[0m30[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
   [1m[94m|[0m
[1m[94m29 |[0m # Now import Django models and management
[1m[94m30 |[0m import argparse
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m31 |[0m
[1m[94m32 |[0m from django.core.management import call_command
   [1m[94m|[0m

[1mscripts/seed_dev_data.py[0m[36m:[0m32[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
   [1m[94m|[0m
[1m[94m30 |[0m import argparse
[1m[94m31 |[0m
[1m[94m32 |[0m from django.core.management import call_command
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
   [1m[94m|[0m

[1mscripts/seed_dev_data.py[0m[36m:[0m44[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m42 |[0m     args = parser.parse_args()
[1m[94m43 |[0m
[1m[94m44 |[0m     print("🌱 Starting development data seeding...")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m45 |[0m     print("=" * 50)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m45[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m44 |[0m     print("🌱 Starting development data seeding...")
[1m[94m45 |[0m     print("=" * 50)
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m46 |[0m
[1m[94m47 |[0m     if args.clear:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m48[36m:[0m9[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m47 |[0m     if args.clear:
[1m[94m48 |[0m         print("⚠️  Clearing existing data...")
   [1m[94m|[0m         [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m49 |[0m         call_command("seed_dev_data", "--clear")
[1m[94m50 |[0m     else:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m53[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m51 |[0m         call_command("seed_dev_data")
[1m[94m52 |[0m
[1m[94m53 |[0m     print("=" * 50)
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m54 |[0m     print("✅ Development data seeding complete!")
[1m[94m55 |[0m     print("\nYou can now:")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m54[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m53 |[0m     print("=" * 50)
[1m[94m54 |[0m     print("✅ Development data seeding complete!")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m55 |[0m     print("\nYou can now:")
[1m[94m56 |[0m     print("- Login with any of the test users (password: password123)")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m55[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m53 |[0m     print("=" * 50)
[1m[94m54 |[0m     print("✅ Development data seeding complete!")
[1m[94m55 |[0m     print("\nYou can now:")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m56 |[0m     print("- Login with any of the test users (password: password123)")
[1m[94m57 |[0m     print("- Admin user: admin_user / password123")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m56[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m54 |[0m     print("✅ Development data seeding complete!")
[1m[94m55 |[0m     print("\nYou can now:")
[1m[94m56 |[0m     print("- Login with any of the test users (password: password123)")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m57 |[0m     print("- Admin user: admin_user / password123")
[1m[94m58 |[0m     print("- Test the clubs, teams, and event functionality")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m57[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m55 |[0m     print("\nYou can now:")
[1m[94m56 |[0m     print("- Login with any of the test users (password: password123)")
[1m[94m57 |[0m     print("- Admin user: admin_user / password123")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m58 |[0m     print("- Test the clubs, teams, and event functionality")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1mscripts/seed_dev_data.py[0m[36m:[0m58[36m:[0m5[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m56 |[0m     print("- Login with any of the test users (password: password123)")
[1m[94m57 |[0m     print("- Admin user: admin_user / password123")
[1m[94m58 |[0m     print("- Test the clubs, teams, and event functionality")
   [1m[94m|[0m     [1m[91m^^^^^[0m [1m[91mT201[0m
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1msimlane/api/auth.py[0m[36m:[0m23[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m21 |[0m         payload = self.create_access_token_payload(user)
[1m[94m22 |[0m
[1m[94m23 |[0m         # Use JWT_SECRET_KEY from settings if available, otherwise fallback to SECRET_KEY
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m24 |[0m         secret_key = getattr(settings, "JWT_SECRET_KEY", settings.SECRET_KEY)
[1m[94m25 |[0m         algorithm = getattr(settings, "JWT_ALGORITHM", "HS256")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m31[36m:[0m15[36m:[0m [1;31mDTZ003[0m `datetime.datetime.utcnow()` used
   [1m[94m|[0m
[1m[94m29 |[0m     def create_access_token_payload(self, user) -> dict[str, Any]:
[1m[94m30 |[0m         """Create the payload for the JWT access token."""
[1m[94m31 |[0m         now = datetime.utcnow()
   [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mDTZ003[0m
[1m[94m32 |[0m         access_token_lifetime = getattr(settings, "JWT_ACCESS_TOKEN_LIFETIME", 3600)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Use `datetime.datetime.now(tz=...)` instead

[1msimlane/api/auth.py[0m[36m:[0m45[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `payload` before `return` statement
   [1m[94m|[0m
[1m[94m43 |[0m         }
[1m[94m44 |[0m
[1m[94m45 |[0m         return payload
   [1m[94m|[0m                [1m[91m^^^^^^^[0m [1m[91mRET504[0m
[1m[94m46 |[0m
[1m[94m47 |[0m     def create_refresh_token(self, user) -> str:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/api/auth.py[0m[36m:[0m51[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m49 |[0m         payload = self.create_refresh_token_payload(user)
[1m[94m50 |[0m
[1m[94m51 |[0m         # Use JWT_SECRET_KEY from settings if available, otherwise fallback to SECRET_KEY
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m52 |[0m         secret_key = getattr(settings, "JWT_SECRET_KEY", settings.SECRET_KEY)
[1m[94m53 |[0m         algorithm = getattr(settings, "JWT_ALGORITHM", "HS256")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m59[36m:[0m15[36m:[0m [1;31mDTZ003[0m `datetime.datetime.utcnow()` used
   [1m[94m|[0m
[1m[94m57 |[0m     def create_refresh_token_payload(self, user) -> dict[str, Any]:
[1m[94m58 |[0m         """Create the payload for the JWT refresh token."""
[1m[94m59 |[0m         now = datetime.utcnow()
   [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mDTZ003[0m
[1m[94m60 |[0m         refresh_token_lifetime = getattr(
[1m[94m61 |[0m             settings,
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Use `datetime.datetime.now(tz=...)` instead

[1msimlane/api/auth.py[0m[36m:[0m74[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `payload` before `return` statement
   [1m[94m|[0m
[1m[94m72 |[0m         }
[1m[94m73 |[0m
[1m[94m74 |[0m         return payload
   [1m[94m|[0m                [1m[91m^^^^^^^[0m [1m[91mRET504[0m
[1m[94m75 |[0m
[1m[94m76 |[0m     def verify_token(self, token: str) -> dict[str, Any]:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/api/auth.py[0m[36m:[0m79[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m77 |[0m         """Verify and decode a JWT token."""
[1m[94m78 |[0m         try:
[1m[94m79 |[0m             # Use JWT_SECRET_KEY from settings if available, otherwise fallback to SECRET_KEY
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m80 |[0m             secret_key = getattr(settings, "JWT_SECRET_KEY", settings.SECRET_KEY)
[1m[94m81 |[0m             algorithm = getattr(settings, "JWT_ALGORITHM", "HS256")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m84[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m83 |[0m             payload = jwt.decode(token, secret_key, algorithms=[algorithm])
[1m[94m84 |[0m             return payload
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m85 |[0m         except jwt.ExpiredSignatureError:
[1m[94m86 |[0m             raise ValueError("Token has expired")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m84[36m:[0m20[36m:[0m [1;31mRET504[0m Unnecessary assignment to `payload` before `return` statement
   [1m[94m|[0m
[1m[94m83 |[0m             payload = jwt.decode(token, secret_key, algorithms=[algorithm])
[1m[94m84 |[0m             return payload
   [1m[94m|[0m                    [1m[91m^^^^^^^[0m [1m[91mRET504[0m
[1m[94m85 |[0m         except jwt.ExpiredSignatureError:
[1m[94m86 |[0m             raise ValueError("Token has expired")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/api/auth.py[0m[36m:[0m86[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m84 |[0m             return payload
[1m[94m85 |[0m         except jwt.ExpiredSignatureError:
[1m[94m86 |[0m             raise ValueError("Token has expired")
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m86[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m84 |[0m             return payload
[1m[94m85 |[0m         except jwt.ExpiredSignatureError:
[1m[94m86 |[0m             raise ValueError("Token has expired")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m86[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m84 |[0m             return payload
[1m[94m85 |[0m         except jwt.ExpiredSignatureError:
[1m[94m86 |[0m             raise ValueError("Token has expired")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/auth.py[0m[36m:[0m88[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m86 |[0m             raise ValueError("Token has expired")
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m89 |[0m
[1m[94m90 |[0m     def get_user_from_token(self, token: str):
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m88[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m86 |[0m             raise ValueError("Token has expired")
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m89 |[0m
[1m[94m90 |[0m     def get_user_from_token(self, token: str):
   [1m[94m|[0m

[1msimlane/api/auth.py[0m[36m:[0m88[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m86 |[0m             raise ValueError("Token has expired")
[1m[94m87 |[0m         except jwt.InvalidTokenError:
[1m[94m88 |[0m             raise ValueError("Invalid token")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m89 |[0m
[1m[94m90 |[0m     def get_user_from_token(self, token: str):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/auth.py[0m[36m:[0m98[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m 96 |[0m             if user_id:
[1m[94m 97 |[0m                 return User.objects.get(id=user_id)
[1m[94m 98 |[0m             return None
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m 99 |[0m         except (ValueError, User.DoesNotExist):
[1m[94m100 |[0m             return None
    [1m[94m|[0m

[1msimlane/api/main.py[0m[36m:[0m20[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m18 |[0m     def authenticate(self, request: HttpRequest, token: str) -> User | None:
[1m[94m19 |[0m         try:
[1m[94m20 |[0m             # Use JWT_SECRET_KEY from settings if available, otherwise fallback to SECRET_KEY
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m21 |[0m             secret_key = getattr(settings, "JWT_SECRET_KEY", settings.SECRET_KEY)
[1m[94m22 |[0m             algorithm = getattr(settings, "JWT_ALGORITHM", "HS256")
   [1m[94m|[0m

[1msimlane/api/main.py[0m[36m:[0m30[36m:[0m21[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m28 |[0m                 try:
[1m[94m29 |[0m                     user = User.objects.get(id=user_id)
[1m[94m30 |[0m                     return user
   [1m[94m|[0m                     [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m31 |[0m                 except User.DoesNotExist:
[1m[94m32 |[0m                     return None
   [1m[94m|[0m

[1msimlane/api/main.py[0m[36m:[0m30[36m:[0m28[36m:[0m [1;31mRET504[0m Unnecessary assignment to `user` before `return` statement
   [1m[94m|[0m
[1m[94m28 |[0m                 try:
[1m[94m29 |[0m                     user = User.objects.get(id=user_id)
[1m[94m30 |[0m                     return user
   [1m[94m|[0m                            [1m[91m^^^^[0m [1m[91mRET504[0m
[1m[94m31 |[0m                 except User.DoesNotExist:
[1m[94m32 |[0m                     return None
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/api/main.py[0m[36m:[0m33[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m31 |[0m                 except User.DoesNotExist:
[1m[94m32 |[0m                     return None
[1m[94m33 |[0m             return None
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m34 |[0m         except jwt.ExpiredSignatureError:
[1m[94m35 |[0m             return None
   [1m[94m|[0m

[1msimlane/api/middleware.py[0m[36m:[0m16[36m:[0m5[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
   [1m[94m|[0m
[1m[94m14 |[0m           if user and user.is_active:
[1m[94m15 |[0m               return user
[1m[94m16 |[0m [1m[91m/[0m     except Exception:
[1m[94m17 |[0m [1m[91m|[0m         pass
   [1m[94m|[0m [1m[91m|____________^[0m [1m[91mS110[0m
[1m[94m18 |[0m       return AnonymousUser()
   [1m[94m|[0m

[1msimlane/api/middleware.py[0m[36m:[0m16[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m14 |[0m         if user and user.is_active:
[1m[94m15 |[0m             return user
[1m[94m16 |[0m     except Exception:
   [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m17 |[0m         pass
[1m[94m18 |[0m     return AnonymousUser()
   [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m68[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m66 |[0m                 validate_password(user_data.password1)
[1m[94m67 |[0m             except DjangoValidationError as e:
[1m[94m68 |[0m                 raise HttpError(400, {"password": list(e.messages)})
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m69 |[0m
[1m[94m70 |[0m             # Check if username already exists
   [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m72[36m:[0m17[36m:[0m [1;31mTRY301[0m Abstract `raise` to an inner function
   [1m[94m|[0m
[1m[94m70 |[0m             # Check if username already exists
[1m[94m71 |[0m             if User.objects.filter(username=user_data.username).exists():
[1m[94m72 |[0m                 raise HttpError(400, {"username": "Username already exists"})
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY301[0m
[1m[94m73 |[0m
[1m[94m74 |[0m             # Check if email already exists
   [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m76[36m:[0m17[36m:[0m [1;31mTRY301[0m Abstract `raise` to an inner function
   [1m[94m|[0m
[1m[94m74 |[0m             # Check if email already exists
[1m[94m75 |[0m             if User.objects.filter(email=user_data.email).exists():
[1m[94m76 |[0m                 raise HttpError(400, {"email": "Email already exists"})
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY301[0m
[1m[94m77 |[0m
[1m[94m78 |[0m             # Create user
   [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m88[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `email_address` is assigned to but never used
   [1m[94m|[0m
[1m[94m87 |[0m             # Create email address for allauth
[1m[94m88 |[0m             email_address = EmailAddress.objects.create(
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m89 |[0m                 user=user,
[1m[94m90 |[0m                 email=user_data.email,
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `email_address`

[1msimlane/api/routers/auth.py[0m[36m:[0m115[36m:[0m19[36m:[0m [1;31mTRY201[0m Use `raise` without specifying exception name
    [1m[94m|[0m
[1m[94m113 |[0m     except Exception as e:
[1m[94m114 |[0m         if isinstance(e, HttpError):
[1m[94m115 |[0m             raise e
    [1m[94m|[0m                   [1m[91m^[0m [1m[91mTRY201[0m
[1m[94m116 |[0m         raise HttpError(500, "Registration failed")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove exception name

[1msimlane/api/routers/auth.py[0m[36m:[0m116[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m114 |[0m         if isinstance(e, HttpError):
[1m[94m115 |[0m             raise e
[1m[94m116 |[0m         raise HttpError(500, "Registration failed")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
    [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m149[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m148 |[0m     except User.DoesNotExist:
[1m[94m149 |[0m         raise HttpError(401, "User not found")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m150 |[0m     except ValueError as e:
[1m[94m151 |[0m         raise HttpError(401, str(e))
    [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m151[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m149 |[0m         raise HttpError(401, "User not found")
[1m[94m150 |[0m     except ValueError as e:
[1m[94m151 |[0m         raise HttpError(401, str(e))
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
    [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m187[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m185 |[0m         validate_password(password_data.new_password1, user)
[1m[94m186 |[0m     except DjangoValidationError as e:
[1m[94m187 |[0m         raise HttpError(400, {"new_password": list(e.messages)})
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m188 |[0m
[1m[94m189 |[0m     # Set new password
    [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m200[36m:[0m9[36m:[0m [1;31mF841[0m Local variable `user` is assigned to but never used
    [1m[94m|[0m
[1m[94m198 |[0m     """Request password reset."""
[1m[94m199 |[0m     try:
[1m[94m200 |[0m         user = User.objects.get(email=reset_data.email, is_active=True)
    [1m[94m|[0m         [1m[91m^^^^[0m [1m[91mF841[0m
[1m[94m201 |[0m         # TODO: Implement password reset email sending
[1m[94m202 |[0m         # This would typically use allauth's password reset functionality
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `user`

[1msimlane/api/routers/auth.py[0m[36m:[0m203[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m201 |[0m         # TODO: Implement password reset email sending
[1m[94m202 |[0m         # This would typically use allauth's password reset functionality
[1m[94m203 |[0m         return {"message": "Password reset email sent"}
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m204 |[0m     except User.DoesNotExist:
[1m[94m205 |[0m         # Don't reveal if email exists or not
    [1m[94m|[0m

[1msimlane/api/routers/auth.py[0m[36m:[0m262[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m260 |[0m         }
[1m[94m261 |[0m     except ValueError as e:
[1m[94m262 |[0m         raise HttpError(401, str(e))
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
    [1m[94m|[0m

[1msimlane/api/routers/clubs.py[0m[36m:[0m30[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m28 |[0m         if membership.role not in required_roles:
[1m[94m29 |[0m             raise HttpError(403, "Insufficient permissions")
[1m[94m30 |[0m         return membership
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m31 |[0m     except ClubMember.DoesNotExist:
[1m[94m32 |[0m         raise HttpError(403, "Not a member of this club")
   [1m[94m|[0m

[1msimlane/api/routers/clubs.py[0m[36m:[0m32[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m30 |[0m         return membership
[1m[94m31 |[0m     except ClubMember.DoesNotExist:
[1m[94m32 |[0m         raise HttpError(403, "Not a member of this club")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
   [1m[94m|[0m

[1msimlane/api/routers/sim.py[0m[36m:[0m139[36m:[0m19[36m:[0m [1;31mRUF013[0m PEP 484 prohibits implicit `Optional`
    [1m[94m|[0m
[1m[94m137 |[0m def list_user_lap_times(
[1m[94m138 |[0m     request: HttpRequest,
[1m[94m139 |[0m     simulator_id: int = None,
    [1m[94m|[0m                   [1m[91m^^^[0m [1m[91mRUF013[0m
[1m[94m140 |[0m     limit: int = 50,
[1m[94m141 |[0m ):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Convert to `T | None`

[1msimlane/api/routers/sim.py[0m[36m:[0m233[36m:[0m21[36m:[0m [1;31mDTZ005[0m `datetime.datetime.now()` called without a `tz` argument
    [1m[94m|[0m
[1m[94m231 |[0m     from datetime import timedelta
[1m[94m232 |[0m
[1m[94m233 |[0m     recent_cutoff = datetime.now() - timedelta(days=30)
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^[0m [1m[91mDTZ005[0m
[1m[94m234 |[0m     recent_sessions = LapTime.objects.filter(
[1m[94m235 |[0m         user=request.auth,
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Pass a `datetime.timezone` object to the `tz` parameter

[1msimlane/api/schemas/auth.py[0m[36m:[0m22[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m21 |[0m     @validator("password2")
[1m[94m22 |[0m     def passwords_match(cls, v, values):
   [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m23 |[0m         if "password1" in values and v != values["password1"]:
[1m[94m24 |[0m             raise ValueError("Passwords do not match")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/auth.py[0m[36m:[0m24[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m22 |[0m     def passwords_match(cls, v, values):
[1m[94m23 |[0m         if "password1" in values and v != values["password1"]:
[1m[94m24 |[0m             raise ValueError("Passwords do not match")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m25 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/auth.py[0m[36m:[0m24[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m22 |[0m     def passwords_match(cls, v, values):
[1m[94m23 |[0m         if "password1" in values and v != values["password1"]:
[1m[94m24 |[0m             raise ValueError("Passwords do not match")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m25 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/auth.py[0m[36m:[0m28[36m:[0m29[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m27 |[0m     @validator("username")
[1m[94m28 |[0m     def username_validation(cls, v):
   [1m[94m|[0m                             [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m29 |[0m         if len(v) < 3:
[1m[94m30 |[0m             raise ValueError("Username must be at least 3 characters long")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/auth.py[0m[36m:[0m29[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `3` with a constant variable
   [1m[94m|[0m
[1m[94m27 |[0m     @validator("username")
[1m[94m28 |[0m     def username_validation(cls, v):
[1m[94m29 |[0m         if len(v) < 3:
   [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m30 |[0m             raise ValueError("Username must be at least 3 characters long")
[1m[94m31 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/auth.py[0m[36m:[0m30[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m28 |[0m     def username_validation(cls, v):
[1m[94m29 |[0m         if len(v) < 3:
[1m[94m30 |[0m             raise ValueError("Username must be at least 3 characters long")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m31 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/auth.py[0m[36m:[0m30[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m28 |[0m     def username_validation(cls, v):
[1m[94m29 |[0m         if len(v) < 3:
[1m[94m30 |[0m             raise ValueError("Username must be at least 3 characters long")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m31 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/auth.py[0m[36m:[0m81[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m80 |[0m     @validator("new_password2")
[1m[94m81 |[0m     def passwords_match(cls, v, values):
   [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m82 |[0m         if "new_password1" in values and v != values["new_password1"]:
[1m[94m83 |[0m             raise ValueError("New passwords do not match")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/auth.py[0m[36m:[0m83[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m81 |[0m     def passwords_match(cls, v, values):
[1m[94m82 |[0m         if "new_password1" in values and v != values["new_password1"]:
[1m[94m83 |[0m             raise ValueError("New passwords do not match")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m84 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/auth.py[0m[36m:[0m83[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m81 |[0m     def passwords_match(cls, v, values):
[1m[94m82 |[0m         if "new_password1" in values and v != values["new_password1"]:
[1m[94m83 |[0m             raise ValueError("New passwords do not match")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m84 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m66[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m65 |[0m     @validator("name")
[1m[94m66 |[0m     def name_validation(cls, v):
   [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m67 |[0m         if len(v) < 3:
[1m[94m68 |[0m             raise ValueError("Club name must be at least 3 characters long")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m67[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `3` with a constant variable
   [1m[94m|[0m
[1m[94m65 |[0m     @validator("name")
[1m[94m66 |[0m     def name_validation(cls, v):
[1m[94m67 |[0m         if len(v) < 3:
   [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m68 |[0m             raise ValueError("Club name must be at least 3 characters long")
[1m[94m69 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m68[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m66 |[0m     def name_validation(cls, v):
[1m[94m67 |[0m         if len(v) < 3:
[1m[94m68 |[0m             raise ValueError("Club name must be at least 3 characters long")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m69 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m68[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m66 |[0m     def name_validation(cls, v):
[1m[94m67 |[0m         if len(v) < 3:
[1m[94m68 |[0m             raise ValueError("Club name must be at least 3 characters long")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m69 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m72[36m:[0m32[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m71 |[0m     @validator("max_members")
[1m[94m72 |[0m     def max_members_validation(cls, v):
   [1m[94m|[0m                                [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m73 |[0m         if v < 1 or v > 1000:
[1m[94m74 |[0m             raise ValueError("Max members must be between 1 and 1000")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m73[36m:[0m25[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `1000` with a constant variable
   [1m[94m|[0m
[1m[94m71 |[0m     @validator("max_members")
[1m[94m72 |[0m     def max_members_validation(cls, v):
[1m[94m73 |[0m         if v < 1 or v > 1000:
   [1m[94m|[0m                         [1m[91m^^^^[0m [1m[91mPLR2004[0m
[1m[94m74 |[0m             raise ValueError("Max members must be between 1 and 1000")
[1m[94m75 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m74[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m72 |[0m     def max_members_validation(cls, v):
[1m[94m73 |[0m         if v < 1 or v > 1000:
[1m[94m74 |[0m             raise ValueError("Max members must be between 1 and 1000")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m75 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m74[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m72 |[0m     def max_members_validation(cls, v):
[1m[94m73 |[0m         if v < 1 or v > 1000:
[1m[94m74 |[0m             raise ValueError("Max members must be between 1 and 1000")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m75 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m141[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m140 |[0m     @validator("name")
[1m[94m141 |[0m     def name_validation(cls, v):
    [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m142 |[0m         if len(v) < 2:
[1m[94m143 |[0m             raise ValueError("Team name must be at least 2 characters long")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m142[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m140 |[0m     @validator("name")
[1m[94m141 |[0m     def name_validation(cls, v):
[1m[94m142 |[0m         if len(v) < 2:
    [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m143 |[0m             raise ValueError("Team name must be at least 2 characters long")
[1m[94m144 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m143[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m141 |[0m     def name_validation(cls, v):
[1m[94m142 |[0m         if len(v) < 2:
[1m[94m143 |[0m             raise ValueError("Team name must be at least 2 characters long")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m144 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m143[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m141 |[0m     def name_validation(cls, v):
[1m[94m142 |[0m         if len(v) < 2:
[1m[94m143 |[0m             raise ValueError("Team name must be at least 2 characters long")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m144 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m147[36m:[0m32[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m146 |[0m     @validator("max_members")
[1m[94m147 |[0m     def max_members_validation(cls, v):
    [1m[94m|[0m                                [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m148 |[0m         if v < 1 or v > 20:
[1m[94m149 |[0m             raise ValueError("Max members must be between 1 and 20")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m148[36m:[0m25[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `20` with a constant variable
    [1m[94m|[0m
[1m[94m146 |[0m     @validator("max_members")
[1m[94m147 |[0m     def max_members_validation(cls, v):
[1m[94m148 |[0m         if v < 1 or v > 20:
    [1m[94m|[0m                         [1m[91m^^[0m [1m[91mPLR2004[0m
[1m[94m149 |[0m             raise ValueError("Max members must be between 1 and 20")
[1m[94m150 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m149[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m147 |[0m     def max_members_validation(cls, v):
[1m[94m148 |[0m         if v < 1 or v > 20:
[1m[94m149 |[0m             raise ValueError("Max members must be between 1 and 20")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m150 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m149[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m147 |[0m     def max_members_validation(cls, v):
[1m[94m148 |[0m         if v < 1 or v > 20:
[1m[94m149 |[0m             raise ValueError("Max members must be between 1 and 20")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m150 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m153[36m:[0m26[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m152 |[0m     @validator("color")
[1m[94m153 |[0m     def color_validation(cls, v):
    [1m[94m|[0m                          [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m154 |[0m         if not v.startswith("#") or len(v) != 7:
[1m[94m155 |[0m             raise ValueError("Color must be a valid hex color (e.g., #FF2300)")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m154[36m:[0m47[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `7` with a constant variable
    [1m[94m|[0m
[1m[94m152 |[0m     @validator("color")
[1m[94m153 |[0m     def color_validation(cls, v):
[1m[94m154 |[0m         if not v.startswith("#") or len(v) != 7:
    [1m[94m|[0m                                               [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m155 |[0m             raise ValueError("Color must be a valid hex color (e.g., #FF2300)")
[1m[94m156 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m155[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m153 |[0m     def color_validation(cls, v):
[1m[94m154 |[0m         if not v.startswith("#") or len(v) != 7:
[1m[94m155 |[0m             raise ValueError("Color must be a valid hex color (e.g., #FF2300)")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m156 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m155[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m153 |[0m     def color_validation(cls, v):
[1m[94m154 |[0m         if not v.startswith("#") or len(v) != 7:
[1m[94m155 |[0m             raise ValueError("Color must be a valid hex color (e.g., #FF2300)")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m156 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/clubs.py[0m[36m:[0m187[36m:[0m28[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m186 |[0m     @validator("expires_in_days")
[1m[94m187 |[0m     def expires_validation(cls, v):
    [1m[94m|[0m                            [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m188 |[0m         if v < 1 or v > 30:
[1m[94m189 |[0m             raise ValueError("Expiration must be between 1 and 30 days")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/clubs.py[0m[36m:[0m188[36m:[0m25[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `30` with a constant variable
    [1m[94m|[0m
[1m[94m186 |[0m     @validator("expires_in_days")
[1m[94m187 |[0m     def expires_validation(cls, v):
[1m[94m188 |[0m         if v < 1 or v > 30:
    [1m[94m|[0m                         [1m[91m^^[0m [1m[91mPLR2004[0m
[1m[94m189 |[0m             raise ValueError("Expiration must be between 1 and 30 days")
[1m[94m190 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m189[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m187 |[0m     def expires_validation(cls, v):
[1m[94m188 |[0m         if v < 1 or v > 30:
[1m[94m189 |[0m             raise ValueError("Expiration must be between 1 and 30 days")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m190 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/clubs.py[0m[36m:[0m189[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m187 |[0m     def expires_validation(cls, v):
[1m[94m188 |[0m         if v < 1 or v > 30:
[1m[94m189 |[0m             raise ValueError("Expiration must be between 1 and 30 days")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m190 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/events.py[0m[36m:[0m2[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
  [1m[94m|[0m
[1m[94m1 |[0m # Legacy event schemas removed (TeamAllocation, TeamEventStrategy, StintAssignment)
[1m[94m2 |[0m # These have been replaced by the enhanced EventParticipation and AvailabilityWindow system
  [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m3 |[0m # Located in simlane/teams/models.py
  [1m[94m|[0m

[1msimlane/api/schemas/events.py[0m[36m:[0m13[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m11 |[0m # Example future schemas (not implemented):
[1m[94m12 |[0m #
[1m[94m13 |[0m # from pydantic import BaseModel
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m14 |[0m # from datetime import datetime
[1m[94m15 |[0m # from uuid import UUID
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m14[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m12 |[0m #
[1m[94m13 |[0m # from pydantic import BaseModel
[1m[94m14 |[0m # from datetime import datetime
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m15 |[0m # from uuid import UUID
[1m[94m16 |[0m #
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m15[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m13 |[0m # from pydantic import BaseModel
[1m[94m14 |[0m # from datetime import datetime
[1m[94m15 |[0m # from uuid import UUID
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m16 |[0m #
[1m[94m17 |[0m # class EventParticipationCreate(BaseModel):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m18[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m16 |[0m #
[1m[94m17 |[0m # class EventParticipationCreate(BaseModel):
[1m[94m18 |[0m #     event_id: UUID
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m19 |[0m #     participation_type: str
[1m[94m20 |[0m #     preferred_car_id: int | None = None
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m19[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m17 |[0m # class EventParticipationCreate(BaseModel):
[1m[94m18 |[0m #     event_id: UUID
[1m[94m19 |[0m #     participation_type: str
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m20 |[0m #     preferred_car_id: int | None = None
[1m[94m21 |[0m #     experience_level: str | None = None
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m20[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m18 |[0m #     event_id: UUID
[1m[94m19 |[0m #     participation_type: str
[1m[94m20 |[0m #     preferred_car_id: int | None = None
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m21 |[0m #     experience_level: str | None = None
[1m[94m22 |[0m #     max_stint_duration: int | None = None
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m21[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m19 |[0m #     participation_type: str
[1m[94m20 |[0m #     preferred_car_id: int | None = None
[1m[94m21 |[0m #     experience_level: str | None = None
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m22 |[0m #     max_stint_duration: int | None = None
[1m[94m23 |[0m #     notes: str = ""
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m22[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m20 |[0m #     preferred_car_id: int | None = None
[1m[94m21 |[0m #     experience_level: str | None = None
[1m[94m22 |[0m #     max_stint_duration: int | None = None
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m23 |[0m #     notes: str = ""
[1m[94m24 |[0m #
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m23[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m21 |[0m #     experience_level: str | None = None
[1m[94m22 |[0m #     max_stint_duration: int | None = None
[1m[94m23 |[0m #     notes: str = ""
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m24 |[0m #
[1m[94m25 |[0m # class AvailabilityWindowCreate(BaseModel):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m26[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m24 |[0m #
[1m[94m25 |[0m # class AvailabilityWindowCreate(BaseModel):
[1m[94m26 |[0m #     participation_id: UUID
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m27 |[0m #     start_time: datetime
[1m[94m28 |[0m #     end_time: datetime
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m27[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m25 |[0m # class AvailabilityWindowCreate(BaseModel):
[1m[94m26 |[0m #     participation_id: UUID
[1m[94m27 |[0m #     start_time: datetime
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m28 |[0m #     end_time: datetime
[1m[94m29 |[0m #     can_drive: bool = False
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m28[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m26 |[0m #     participation_id: UUID
[1m[94m27 |[0m #     start_time: datetime
[1m[94m28 |[0m #     end_time: datetime
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m29 |[0m #     can_drive: bool = False
[1m[94m30 |[0m #     can_spot: bool = False
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m29[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m27 |[0m #     start_time: datetime
[1m[94m28 |[0m #     end_time: datetime
[1m[94m29 |[0m #     can_drive: bool = False
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m30 |[0m #     can_spot: bool = False
[1m[94m31 |[0m #     can_strategize: bool = False
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m30[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m28 |[0m #     end_time: datetime
[1m[94m29 |[0m #     can_drive: bool = False
[1m[94m30 |[0m #     can_spot: bool = False
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m31 |[0m #     can_strategize: bool = False
[1m[94m32 |[0m #     preference_level: int = 3
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m31[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m29 |[0m #     can_drive: bool = False
[1m[94m30 |[0m #     can_spot: bool = False
[1m[94m31 |[0m #     can_strategize: bool = False
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m32 |[0m #     preference_level: int = 3
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/events.py[0m[36m:[0m32[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m30 |[0m #     can_spot: bool = False
[1m[94m31 |[0m #     can_strategize: bool = False
[1m[94m32 |[0m #     preference_level: int = 3
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m33 |[0m
[1m[94m34 |[0m # All legacy event schemas have been removed
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/api/schemas/sim.py[0m[36m:[0m51[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m50 |[0m     @validator("name")
[1m[94m51 |[0m     def name_validation(cls, v):
   [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m52 |[0m         if len(v) < 2:
[1m[94m53 |[0m             raise ValueError("Simulator name must be at least 2 characters long")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m52[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
   [1m[94m|[0m
[1m[94m50 |[0m     @validator("name")
[1m[94m51 |[0m     def name_validation(cls, v):
[1m[94m52 |[0m         if len(v) < 2:
   [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m53 |[0m             raise ValueError("Simulator name must be at least 2 characters long")
[1m[94m54 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m53[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m51 |[0m     def name_validation(cls, v):
[1m[94m52 |[0m         if len(v) < 2:
[1m[94m53 |[0m             raise ValueError("Simulator name must be at least 2 characters long")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m54 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m53[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m51 |[0m     def name_validation(cls, v):
[1m[94m52 |[0m         if len(v) < 2:
[1m[94m53 |[0m             raise ValueError("Simulator name must be at least 2 characters long")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m54 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m57[36m:[0m31[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
   [1m[94m|[0m
[1m[94m56 |[0m     @validator("short_name")
[1m[94m57 |[0m     def short_name_validation(cls, v):
   [1m[94m|[0m                               [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m58 |[0m         if len(v) < 2 or len(v) > 10:
[1m[94m59 |[0m             raise ValueError("Short name must be between 2 and 10 characters")
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m58[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
   [1m[94m|[0m
[1m[94m56 |[0m     @validator("short_name")
[1m[94m57 |[0m     def short_name_validation(cls, v):
[1m[94m58 |[0m         if len(v) < 2 or len(v) > 10:
   [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m59 |[0m             raise ValueError("Short name must be between 2 and 10 characters")
[1m[94m60 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m58[36m:[0m35[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `10` with a constant variable
   [1m[94m|[0m
[1m[94m56 |[0m     @validator("short_name")
[1m[94m57 |[0m     def short_name_validation(cls, v):
[1m[94m58 |[0m         if len(v) < 2 or len(v) > 10:
   [1m[94m|[0m                                   [1m[91m^^[0m [1m[91mPLR2004[0m
[1m[94m59 |[0m             raise ValueError("Short name must be between 2 and 10 characters")
[1m[94m60 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m59[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m57 |[0m     def short_name_validation(cls, v):
[1m[94m58 |[0m         if len(v) < 2 or len(v) > 10:
[1m[94m59 |[0m             raise ValueError("Short name must be between 2 and 10 characters")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m60 |[0m         return v
   [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m59[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m57 |[0m     def short_name_validation(cls, v):
[1m[94m58 |[0m         if len(v) < 2 or len(v) > 10:
[1m[94m59 |[0m             raise ValueError("Short name must be between 2 and 10 characters")
   [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m60 |[0m         return v
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m103[36m:[0m31[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m102 |[0m     @validator("profile_id")
[1m[94m103 |[0m     def profile_id_validation(cls, v):
    [1m[94m|[0m                               [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m104 |[0m         if len(v) < 1:
[1m[94m105 |[0m             raise ValueError("Profile ID cannot be empty")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m105[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m103 |[0m     def profile_id_validation(cls, v):
[1m[94m104 |[0m         if len(v) < 1:
[1m[94m105 |[0m             raise ValueError("Profile ID cannot be empty")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m106 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m105[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m103 |[0m     def profile_id_validation(cls, v):
[1m[94m104 |[0m         if len(v) < 1:
[1m[94m105 |[0m             raise ValueError("Profile ID cannot be empty")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m106 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m109[36m:[0m33[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m108 |[0m     @validator("display_name")
[1m[94m109 |[0m     def display_name_validation(cls, v):
    [1m[94m|[0m                                 [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m110 |[0m         if len(v) < 2:
[1m[94m111 |[0m             raise ValueError("Display name must be at least 2 characters long")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m110[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m108 |[0m     @validator("display_name")
[1m[94m109 |[0m     def display_name_validation(cls, v):
[1m[94m110 |[0m         if len(v) < 2:
    [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m111 |[0m             raise ValueError("Display name must be at least 2 characters long")
[1m[94m112 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m111[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m109 |[0m     def display_name_validation(cls, v):
[1m[94m110 |[0m         if len(v) < 2:
[1m[94m111 |[0m             raise ValueError("Display name must be at least 2 characters long")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m112 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m111[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m109 |[0m     def display_name_validation(cls, v):
[1m[94m110 |[0m         if len(v) < 2:
[1m[94m111 |[0m             raise ValueError("Display name must be at least 2 characters long")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m112 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m159[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m158 |[0m     @validator("name")
[1m[94m159 |[0m     def name_validation(cls, v):
    [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m160 |[0m         if len(v) < 2:
[1m[94m161 |[0m             raise ValueError("Car name must be at least 2 characters long")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m160[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m158 |[0m     @validator("name")
[1m[94m159 |[0m     def name_validation(cls, v):
[1m[94m160 |[0m         if len(v) < 2:
    [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m161 |[0m             raise ValueError("Car name must be at least 2 characters long")
[1m[94m162 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m161[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m159 |[0m     def name_validation(cls, v):
[1m[94m160 |[0m         if len(v) < 2:
[1m[94m161 |[0m             raise ValueError("Car name must be at least 2 characters long")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m162 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m161[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m159 |[0m     def name_validation(cls, v):
[1m[94m160 |[0m         if len(v) < 2:
[1m[94m161 |[0m             raise ValueError("Car name must be at least 2 characters long")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m162 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m165[36m:[0m26[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m164 |[0m     @validator("power_hp")
[1m[94m165 |[0m     def power_validation(cls, v):
    [1m[94m|[0m                          [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m166 |[0m         if v is not None and (v < 0 or v > 5000):
[1m[94m167 |[0m             raise ValueError("Power must be between 0 and 5000 HP")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m166[36m:[0m44[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `5000` with a constant variable
    [1m[94m|[0m
[1m[94m164 |[0m     @validator("power_hp")
[1m[94m165 |[0m     def power_validation(cls, v):
[1m[94m166 |[0m         if v is not None and (v < 0 or v > 5000):
    [1m[94m|[0m                                            [1m[91m^^^^[0m [1m[91mPLR2004[0m
[1m[94m167 |[0m             raise ValueError("Power must be between 0 and 5000 HP")
[1m[94m168 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m167[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m165 |[0m     def power_validation(cls, v):
[1m[94m166 |[0m         if v is not None and (v < 0 or v > 5000):
[1m[94m167 |[0m             raise ValueError("Power must be between 0 and 5000 HP")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m168 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m167[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m165 |[0m     def power_validation(cls, v):
[1m[94m166 |[0m         if v is not None and (v < 0 or v > 5000):
[1m[94m167 |[0m             raise ValueError("Power must be between 0 and 5000 HP")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m168 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m171[36m:[0m27[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m170 |[0m     @validator("weight_kg")
[1m[94m171 |[0m     def weight_validation(cls, v):
    [1m[94m|[0m                           [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m172 |[0m         if v is not None and (v < 0 or v > 10000):
[1m[94m173 |[0m             raise ValueError("Weight must be between 0 and 10000 kg")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m172[36m:[0m44[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `10000` with a constant variable
    [1m[94m|[0m
[1m[94m170 |[0m     @validator("weight_kg")
[1m[94m171 |[0m     def weight_validation(cls, v):
[1m[94m172 |[0m         if v is not None and (v < 0 or v > 10000):
    [1m[94m|[0m                                            [1m[91m^^^^^[0m [1m[91mPLR2004[0m
[1m[94m173 |[0m             raise ValueError("Weight must be between 0 and 10000 kg")
[1m[94m174 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m173[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m171 |[0m     def weight_validation(cls, v):
[1m[94m172 |[0m         if v is not None and (v < 0 or v > 10000):
[1m[94m173 |[0m             raise ValueError("Weight must be between 0 and 10000 kg")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m174 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m173[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m171 |[0m     def weight_validation(cls, v):
[1m[94m172 |[0m         if v is not None and (v < 0 or v > 10000):
[1m[94m173 |[0m             raise ValueError("Weight must be between 0 and 10000 kg")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m174 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m177[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m176 |[0m     @validator("year")
[1m[94m177 |[0m     def year_validation(cls, v):
    [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m178 |[0m         if v is not None and (v < 1900 or v > 2030):
[1m[94m179 |[0m             raise ValueError("Year must be between 1900 and 2030")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m178[36m:[0m35[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `1900` with a constant variable
    [1m[94m|[0m
[1m[94m176 |[0m     @validator("year")
[1m[94m177 |[0m     def year_validation(cls, v):
[1m[94m178 |[0m         if v is not None and (v < 1900 or v > 2030):
    [1m[94m|[0m                                   [1m[91m^^^^[0m [1m[91mPLR2004[0m
[1m[94m179 |[0m             raise ValueError("Year must be between 1900 and 2030")
[1m[94m180 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m178[36m:[0m47[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2030` with a constant variable
    [1m[94m|[0m
[1m[94m176 |[0m     @validator("year")
[1m[94m177 |[0m     def year_validation(cls, v):
[1m[94m178 |[0m         if v is not None and (v < 1900 or v > 2030):
    [1m[94m|[0m                                               [1m[91m^^^^[0m [1m[91mPLR2004[0m
[1m[94m179 |[0m             raise ValueError("Year must be between 1900 and 2030")
[1m[94m180 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m179[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m177 |[0m     def year_validation(cls, v):
[1m[94m178 |[0m         if v is not None and (v < 1900 or v > 2030):
[1m[94m179 |[0m             raise ValueError("Year must be between 1900 and 2030")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m180 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m179[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m177 |[0m     def year_validation(cls, v):
[1m[94m178 |[0m         if v is not None and (v < 1900 or v > 2030):
[1m[94m179 |[0m             raise ValueError("Year must be between 1900 and 2030")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m180 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m232[36m:[0m25[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m231 |[0m     @validator("name")
[1m[94m232 |[0m     def name_validation(cls, v):
    [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m233 |[0m         if len(v) < 2:
[1m[94m234 |[0m             raise ValueError("Track name must be at least 2 characters long")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m233[36m:[0m21[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m231 |[0m     @validator("name")
[1m[94m232 |[0m     def name_validation(cls, v):
[1m[94m233 |[0m         if len(v) < 2:
    [1m[94m|[0m                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m234 |[0m             raise ValueError("Track name must be at least 2 characters long")
[1m[94m235 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m234[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m232 |[0m     def name_validation(cls, v):
[1m[94m233 |[0m         if len(v) < 2:
[1m[94m234 |[0m             raise ValueError("Track name must be at least 2 characters long")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m235 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m234[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m232 |[0m     def name_validation(cls, v):
[1m[94m233 |[0m         if len(v) < 2:
[1m[94m234 |[0m             raise ValueError("Track name must be at least 2 characters long")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m235 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m238[36m:[0m27[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m237 |[0m     @validator("length_km")
[1m[94m238 |[0m     def length_validation(cls, v):
    [1m[94m|[0m                           [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m239 |[0m         if v <= 0 or v > 50:
[1m[94m240 |[0m             raise ValueError("Track length must be between 0 and 50 km")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m239[36m:[0m26[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `50` with a constant variable
    [1m[94m|[0m
[1m[94m237 |[0m     @validator("length_km")
[1m[94m238 |[0m     def length_validation(cls, v):
[1m[94m239 |[0m         if v <= 0 or v > 50:
    [1m[94m|[0m                          [1m[91m^^[0m [1m[91mPLR2004[0m
[1m[94m240 |[0m             raise ValueError("Track length must be between 0 and 50 km")
[1m[94m241 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m240[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m238 |[0m     def length_validation(cls, v):
[1m[94m239 |[0m         if v <= 0 or v > 50:
[1m[94m240 |[0m             raise ValueError("Track length must be between 0 and 50 km")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m241 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m240[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m238 |[0m     def length_validation(cls, v):
[1m[94m239 |[0m         if v <= 0 or v > 50:
[1m[94m240 |[0m             raise ValueError("Track length must be between 0 and 50 km")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m241 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m244[36m:[0m26[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m243 |[0m     @validator("turns")
[1m[94m244 |[0m     def turns_validation(cls, v):
    [1m[94m|[0m                          [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m245 |[0m         if v < 0 or v > 100:
[1m[94m246 |[0m             raise ValueError("Number of turns must be between 0 and 100")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m245[36m:[0m25[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `100` with a constant variable
    [1m[94m|[0m
[1m[94m243 |[0m     @validator("turns")
[1m[94m244 |[0m     def turns_validation(cls, v):
[1m[94m245 |[0m         if v < 0 or v > 100:
    [1m[94m|[0m                         [1m[91m^^^[0m [1m[91mPLR2004[0m
[1m[94m246 |[0m             raise ValueError("Number of turns must be between 0 and 100")
[1m[94m247 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m246[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m244 |[0m     def turns_validation(cls, v):
[1m[94m245 |[0m         if v < 0 or v > 100:
[1m[94m246 |[0m             raise ValueError("Number of turns must be between 0 and 100")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m247 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m246[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m244 |[0m     def turns_validation(cls, v):
[1m[94m245 |[0m         if v < 0 or v > 100:
[1m[94m246 |[0m             raise ValueError("Number of turns must be between 0 and 100")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m247 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/api/schemas/sim.py[0m[36m:[0m298[36m:[0m29[36m:[0m [1;31mN805[0m First argument of a method should be named `self`
    [1m[94m|[0m
[1m[94m297 |[0m     @validator("lap_time")
[1m[94m298 |[0m     def lap_time_validation(cls, v):
    [1m[94m|[0m                             [1m[91m^^^[0m [1m[91mN805[0m
[1m[94m299 |[0m         # Basic validation for lap time format (mm:ss.sss)
[1m[94m300 |[0m         import re
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rename `cls` to `self`

[1msimlane/api/schemas/sim.py[0m[36m:[0m303[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m302 |[0m         if not re.match(r"^\d{1,2}:\d{2}\.\d{3}$", v):
[1m[94m303 |[0m             raise ValueError("Lap time must be in format mm:ss.sss (e.g., 1:23.456)")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m304 |[0m         return v
    [1m[94m|[0m

[1msimlane/api/schemas/sim.py[0m[36m:[0m303[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m302 |[0m         if not re.match(r"^\d{1,2}:\d{2}\.\d{3}$", v):
[1m[94m303 |[0m             raise ValueError("Lap time must be in format mm:ss.sss (e.g., 1:23.456)")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m304 |[0m         return v
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/core/admin.py[0m[36m:[0m64[36m:[0m9[36m:[0m [1;31mDJ007[0m Do not use `__all__` with `ModelForm`, use `fields` instead
   [1m[94m|[0m
[1m[94m62 |[0m     class Meta:
[1m[94m63 |[0m         model = IntervalSchedule
[1m[94m64 |[0m         fields = "__all__"
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ007[0m
   [1m[94m|[0m

[1msimlane/core/admin.py[0m[36m:[0m93[36m:[0m9[36m:[0m [1;31mDJ007[0m Do not use `__all__` with `ModelForm`, use `fields` instead
   [1m[94m|[0m
[1m[94m91 |[0m     class Meta:
[1m[94m92 |[0m         model = CrontabSchedule
[1m[94m93 |[0m         fields = "__all__"
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ007[0m
   [1m[94m|[0m

[1msimlane/core/admin.py[0m[36m:[0m101[36m:[0m9[36m:[0m [1;31mDJ007[0m Do not use `__all__` with `ModelForm`, use `fields` instead
    [1m[94m|[0m
[1m[94m 99 |[0m     class Meta:
[1m[94m100 |[0m         model = SolarSchedule
[1m[94m101 |[0m         fields = "__all__"
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ007[0m
    [1m[94m|[0m

[1msimlane/core/admin.py[0m[36m:[0m109[36m:[0m9[36m:[0m [1;31mDJ007[0m Do not use `__all__` with `ModelForm`, use `fields` instead
    [1m[94m|[0m
[1m[94m107 |[0m     class Meta:
[1m[94m108 |[0m         model = ClockedSchedule
[1m[94m109 |[0m         fields = "__all__"
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ007[0m
    [1m[94m|[0m

[1msimlane/core/admin.py[0m[36m:[0m115[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m113 |[0m class CrontabScheduleAdmin(ModelAdmin):
[1m[94m114 |[0m     form = CrontabScheduleForm
[1m[94m115 |[0m     list_display = ["minute", "hour", "day_of_week", "day_of_month", "month_of_year", "timezone"]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m116 |[0m     list_filter = ["timezone"]
[1m[94m117 |[0m     search_fields = ["minute", "hour", "day_of_week", "day_of_month", "month_of_year"]
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m57[36m:[0m20[36m:[0m [1;31mS324[0m Probable use of insecure hash functions in `hashlib`: `md5`
   [1m[94m|[0m
[1m[94m55 |[0m             "kwargs": str(sorted(kwargs.items())),
[1m[94m56 |[0m         }
[1m[94m57 |[0m         key_hash = hashlib.md5(json.dumps(key_data, sort_keys=True).encode()).hexdigest()
   [1m[94m|[0m                    [1m[91m^^^^^^^^^^^[0m [1m[91mS324[0m
[1m[94m58 |[0m         return f"query:{func_name}:{key_hash}"
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m57[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m55 |[0m             "kwargs": str(sorted(kwargs.items())),
[1m[94m56 |[0m         }
[1m[94m57 |[0m         key_hash = hashlib.md5(json.dumps(key_data, sort_keys=True).encode()).hexdigest()
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m58 |[0m         return f"query:{func_name}:{key_hash}"
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m63[36m:[0m23[36m:[0m [1;31mS324[0m Probable use of insecure hash functions in `hashlib`: `md5`
   [1m[94m|[0m
[1m[94m61 |[0m     def get_view_cache_key(view_name: str, *args, **kwargs) -> str:
[1m[94m62 |[0m         """Generate cache key for view results"""
[1m[94m63 |[0m         params_hash = hashlib.md5(str(sorted(kwargs.items())).encode()).hexdigest()
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^[0m [1m[91mS324[0m
[1m[94m64 |[0m         return f"view:{view_name}:{params_hash}"
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m78[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m76 |[0m         self._lock = threading.Lock()
[1m[94m77 |[0m
[1m[94m78 |[0m     def call_with_fallback(self, cache_func: Callable, fallback_func: Callable, *args, **kwargs) -> Any:
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m79 |[0m         """Execute cache operation with fallback"""
[1m[94m80 |[0m         with self._lock:
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m82[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m80 |[0m         with self._lock:
[1m[94m81 |[0m             if self.state == "OPEN":
[1m[94m82 |[0m                 if self.last_failure_time and time.time() - self.last_failure_time > self.timeout:
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m83 |[0m                     self.state = "HALF_OPEN"
[1m[94m84 |[0m                 else:
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m95[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m93 |[0m                     self.failure_count = 0
[1m[94m94 |[0m                     logger.info("Circuit breaker reset to CLOSED")
[1m[94m95 |[0m             return result
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m96 |[0m         except Exception as e:
[1m[94m97 |[0m             with self._lock:
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m96[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m94 |[0m                     logger.info("Circuit breaker reset to CLOSED")
[1m[94m95 |[0m             return result
[1m[94m96 |[0m         except Exception as e:
   [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m97 |[0m             with self._lock:
[1m[94m98 |[0m                 self.failure_count += 1
   [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m103[36m:[0m36[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m101 |[0m                 if self.failure_count >= self.failure_threshold:
[1m[94m102 |[0m                     self.state = "OPEN"
[1m[94m103 |[0m                     logger.warning(f"Circuit breaker opened after {self.failure_count} failures")
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m104 |[0m
[1m[94m105 |[0m             logger.warning(f"Cache operation failed, using fallback: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m103[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m101 |[0m                 if self.failure_count >= self.failure_threshold:
[1m[94m102 |[0m                     self.state = "OPEN"
[1m[94m103 |[0m                     logger.warning(f"Circuit breaker opened after {self.failure_count} failures")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m104 |[0m
[1m[94m105 |[0m             logger.warning(f"Cache operation failed, using fallback: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m105[36m:[0m28[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m103 |[0m                     logger.warning(f"Circuit breaker opened after {self.failure_count} failures")
[1m[94m104 |[0m
[1m[94m105 |[0m             logger.warning(f"Cache operation failed, using fallback: {e}")
    [1m[94m|[0m                            [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m106 |[0m             return fallback_func(*args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m116[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m114 |[0m         self.tag_index_key = "cache_tags_index"
[1m[94m115 |[0m
[1m[94m116 |[0m     def set_with_tags(self, key: str, value: Any, timeout: int, tags: list[str]) -> None:
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m117 |[0m         """Set cache value with associated tags"""
[1m[94m118 |[0m         try:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m129[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m127 |[0m                 tagged_keys.add(key)
[1m[94m128 |[0m                 self.cache.set(tag_key, tagged_keys, timeout * 2)  # Tags live longer
[1m[94m129 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m130 |[0m             logger.error(f"Failed to set tagged cache entry {key}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m130[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m128 |[0m                 self.cache.set(tag_key, tagged_keys, timeout * 2)  # Tags live longer
[1m[94m129 |[0m         except Exception as e:
[1m[94m130 |[0m             logger.error(f"Failed to set tagged cache entry {key}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m131 |[0m
[1m[94m132 |[0m     def invalidate_tag(self, tag: str) -> None:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m130[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m128 |[0m                 self.cache.set(tag_key, tagged_keys, timeout * 2)  # Tags live longer
[1m[94m129 |[0m         except Exception as e:
[1m[94m130 |[0m             logger.error(f"Failed to set tagged cache entry {key}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m131 |[0m
[1m[94m132 |[0m     def invalidate_tag(self, tag: str) -> None:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m142[36m:[0m33[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m140 |[0m                 if keys_to_delete:
[1m[94m141 |[0m                     self.cache.delete_many(keys_to_delete)
[1m[94m142 |[0m                     logger.info(f"Invalidated {len(keys_to_delete)} cache entries for tag: {tag}")
    [1m[94m|[0m                                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m143 |[0m                 self.cache.delete(tag_key)
[1m[94m144 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m142[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m140 |[0m                 if keys_to_delete:
[1m[94m141 |[0m                     self.cache.delete_many(keys_to_delete)
[1m[94m142 |[0m                     logger.info(f"Invalidated {len(keys_to_delete)} cache entries for tag: {tag}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m143 |[0m                 self.cache.delete(tag_key)
[1m[94m144 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m144[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m142 |[0m                     logger.info(f"Invalidated {len(keys_to_delete)} cache entries for tag: {tag}")
[1m[94m143 |[0m                 self.cache.delete(tag_key)
[1m[94m144 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m145 |[0m             logger.error(f"Failed to invalidate tag {tag}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m145[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m143 |[0m                 self.cache.delete(tag_key)
[1m[94m144 |[0m         except Exception as e:
[1m[94m145 |[0m             logger.error(f"Failed to invalidate tag {tag}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m145[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m143 |[0m                 self.cache.delete(tag_key)
[1m[94m144 |[0m         except Exception as e:
[1m[94m145 |[0m             logger.error(f"Failed to invalidate tag {tag}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m165[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m163 |[0m                 compressed_key = f"compressed:{key}"
[1m[94m164 |[0m                 self.cache.set(compressed_key, compressed, timeout)
[1m[94m165 |[0m                 logger.debug(f"Compressed cache entry {key}: {len(serialized)} -> {len(compressed)} bytes")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m166 |[0m             else:
[1m[94m167 |[0m                 self.cache.set(key, value, timeout)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m165[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
    [1m[94m|[0m
[1m[94m163 |[0m                 compressed_key = f"compressed:{key}"
[1m[94m164 |[0m                 self.cache.set(compressed_key, compressed, timeout)
[1m[94m165 |[0m                 logger.debug(f"Compressed cache entry {key}: {len(serialized)} -> {len(compressed)} bytes")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m166 |[0m             else:
[1m[94m167 |[0m                 self.cache.set(key, value, timeout)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m168[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m166 |[0m             else:
[1m[94m167 |[0m                 self.cache.set(key, value, timeout)
[1m[94m168 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m169 |[0m             logger.error(f"Failed to set compressed cache entry {key}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m169[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m167 |[0m                 self.cache.set(key, value, timeout)
[1m[94m168 |[0m         except Exception as e:
[1m[94m169 |[0m             logger.error(f"Failed to set compressed cache entry {key}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m170 |[0m
[1m[94m171 |[0m     def get(self, key: str) -> Any:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m169[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m167 |[0m                 self.cache.set(key, value, timeout)
[1m[94m168 |[0m         except Exception as e:
[1m[94m169 |[0m             logger.error(f"Failed to set compressed cache entry {key}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m170 |[0m
[1m[94m171 |[0m     def get(self, key: str) -> Any:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m179[36m:[0m24[36m:[0m [1;31mS301[0m `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
    [1m[94m|[0m
[1m[94m177 |[0m             if compressed_data:
[1m[94m178 |[0m                 decompressed = gzip.decompress(compressed_data)
[1m[94m179 |[0m                 return pickle.loads(decompressed)
    [1m[94m|[0m                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS301[0m
[1m[94m180 |[0m
[1m[94m181 |[0m             return self.cache.get(key)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m182[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m181 |[0m             return self.cache.get(key)
[1m[94m182 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m183 |[0m             logger.error(f"Failed to get compressed cache entry {key}: {e}")
[1m[94m184 |[0m             return None
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m183[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m181 |[0m             return self.cache.get(key)
[1m[94m182 |[0m         except Exception as e:
[1m[94m183 |[0m             logger.error(f"Failed to get compressed cache entry {key}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m184 |[0m             return None
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m183[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m181 |[0m             return self.cache.get(key)
[1m[94m182 |[0m         except Exception as e:
[1m[94m183 |[0m             logger.error(f"Failed to get compressed cache entry {key}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m184 |[0m             return None
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m191[36m:[0m5[36m:[0m [1;31mC901[0m `cache_with_lock` is too complex (11 > 10)
    [1m[94m|[0m
[1m[94m189 |[0m _lock_mutex = threading.Lock()
[1m[94m190 |[0m
[1m[94m191 |[0m def cache_with_lock(timeout: int = 300, lock_timeout: int = 30, cache_alias: str = "default"):
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m192 |[0m     """Decorator that prevents cache stampede using distributed locks"""
[1m[94m193 |[0m     def decorator(func: Callable) -> Callable:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m191[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m189 |[0m _lock_mutex = threading.Lock()
[1m[94m190 |[0m
[1m[94m191 |[0m def cache_with_lock(timeout: int = 300, lock_timeout: int = 30, cache_alias: str = "default"):
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m192 |[0m     """Decorator that prevents cache stampede using distributed locks"""
[1m[94m193 |[0m     def decorator(func: Callable) -> Callable:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m196[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m194 |[0m         def wrapper(*args, **kwargs) -> Any:
[1m[94m195 |[0m             # Generate cache key
[1m[94m196 |[0m             cache_key = CacheKeyManager.get_query_cache_key(func.__name__, *args, **kwargs)
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m197 |[0m             cache_backend = caches[cache_alias]
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m204[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m202 |[0m                 if result is not None:
[1m[94m203 |[0m                     return result
[1m[94m204 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m205 |[0m                 logger.warning(f"Cache get failed for {cache_key}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m205[36m:[0m32[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m203 |[0m                     return result
[1m[94m204 |[0m             except Exception as e:
[1m[94m205 |[0m                 logger.warning(f"Cache get failed for {cache_key}: {e}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m206 |[0m
[1m[94m207 |[0m             # Try to acquire lock
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m218[36m:[0m32[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m216 |[0m                         try:
[1m[94m217 |[0m                             cache_backend.set(cache_key, result, timeout)
[1m[94m218 |[0m                         except Exception as e:
    [1m[94m|[0m                                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m219 |[0m                             logger.warning(f"Cache set failed for {cache_key}: {e}")
[1m[94m220 |[0m                         return result
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m219[36m:[0m44[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m217 |[0m                             cache_backend.set(cache_key, result, timeout)
[1m[94m218 |[0m                         except Exception as e:
[1m[94m219 |[0m                             logger.warning(f"Cache set failed for {cache_key}: {e}")
    [1m[94m|[0m                                            [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m220 |[0m                         return result
[1m[94m221 |[0m                     finally:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m222[36m:[0m25[36m:[0m [1;31mSIM105[0m Use `contextlib.suppress(Exception)` instead of `try`-`except`-`pass`
    [1m[94m|[0m
[1m[94m220 |[0m                           return result
[1m[94m221 |[0m                       finally:
[1m[94m222 |[0m [1m[91m/[0m                         try:
[1m[94m223 |[0m [1m[91m|[0m                             cache_backend.delete(lock_key)
[1m[94m224 |[0m [1m[91m|[0m                         except Exception:
[1m[94m225 |[0m [1m[91m|[0m                             pass  # Lock cleanup is best effort
    [1m[94m|[0m [1m[91m|________________________________^[0m [1m[91mSIM105[0m
[1m[94m226 |[0m                   else:
[1m[94m227 |[0m                       # Another process is computing, wait briefly and try cache again
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `contextlib.suppress(Exception)`

[1msimlane/core/cache_utils.py[0m[36m:[0m224[36m:[0m25[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
    [1m[94m|[0m
[1m[94m222 |[0m                           try:
[1m[94m223 |[0m                               cache_backend.delete(lock_key)
[1m[94m224 |[0m [1m[91m/[0m                         except Exception:
[1m[94m225 |[0m [1m[91m|[0m                             pass  # Lock cleanup is best effort
    [1m[94m|[0m [1m[91m|________________________________^[0m [1m[91mS110[0m
[1m[94m226 |[0m                   else:
[1m[94m227 |[0m                       # Another process is computing, wait briefly and try cache again
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m224[36m:[0m32[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m222 |[0m                         try:
[1m[94m223 |[0m                             cache_backend.delete(lock_key)
[1m[94m224 |[0m                         except Exception:
    [1m[94m|[0m                                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m225 |[0m                             pass  # Lock cleanup is best effort
[1m[94m226 |[0m                 else:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m233[36m:[0m21[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
    [1m[94m|[0m
[1m[94m231 |[0m                           if result is not None:
[1m[94m232 |[0m                               return result
[1m[94m233 |[0m [1m[91m/[0m                     except Exception:
[1m[94m234 |[0m [1m[91m|[0m                         pass
    [1m[94m|[0m [1m[91m|____________________________^[0m [1m[91mS110[0m
[1m[94m235 |[0m
[1m[94m236 |[0m                       # If still not available, compute anyway (fallback)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m233[36m:[0m28[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m231 |[0m                         if result is not None:
[1m[94m232 |[0m                             return result
[1m[94m233 |[0m                     except Exception:
    [1m[94m|[0m                            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m234 |[0m                         pass
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m238[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m236 |[0m                     # If still not available, compute anyway (fallback)
[1m[94m237 |[0m                     return func(*args, **kwargs)
[1m[94m238 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m239 |[0m                 logger.warning(f"Lock operation failed for {cache_key}: {e}")
[1m[94m240 |[0m                 return func(*args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m239[36m:[0m32[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m237 |[0m                     return func(*args, **kwargs)
[1m[94m238 |[0m             except Exception as e:
[1m[94m239 |[0m                 logger.warning(f"Lock operation failed for {cache_key}: {e}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m240 |[0m                 return func(*args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m246[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m246 |[0m def cache_query(timeout: int = 300, cache_alias: str = "query_cache", tags: list[str] | None = None):
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m247 |[0m     """Decorator for caching expensive database queries with tag support"""
[1m[94m248 |[0m     def decorator(func: Callable) -> Callable:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m250[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m248 |[0m     def decorator(func: Callable) -> Callable:
[1m[94m249 |[0m         def wrapper(*args, **kwargs) -> Any:
[1m[94m250 |[0m             cache_key = CacheKeyManager.get_query_cache_key(func.__name__, *args, **kwargs)
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m251 |[0m
[1m[94m252 |[0m             try:
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m269[36m:[0m17[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m267 |[0m                 result = func(*args, **kwargs)
[1m[94m268 |[0m                 cache_backend.set(cache_key, result, timeout)
[1m[94m269 |[0m                 return result
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m270 |[0m             except Exception as e:
[1m[94m271 |[0m                 logger.error(f"Cache operation failed for {func.__name__}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m270[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m268 |[0m                 cache_backend.set(cache_key, result, timeout)
[1m[94m269 |[0m                 return result
[1m[94m270 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m271 |[0m                 logger.error(f"Cache operation failed for {func.__name__}: {e}")
[1m[94m272 |[0m                 return func(*args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m271[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m269 |[0m                 return result
[1m[94m270 |[0m             except Exception as e:
[1m[94m271 |[0m                 logger.error(f"Cache operation failed for {func.__name__}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m272 |[0m                 return func(*args, **kwargs)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m271[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m269 |[0m                 return result
[1m[94m270 |[0m             except Exception as e:
[1m[94m271 |[0m                 logger.error(f"Cache operation failed for {func.__name__}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m272 |[0m                 return func(*args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m298[36m:[0m17[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m296 |[0m                 response = view_func(request, *args, **kwargs)
[1m[94m297 |[0m                 cache.set(cache_key, response, timeout)
[1m[94m298 |[0m                 return response
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m299 |[0m             except Exception as e:
[1m[94m300 |[0m                 logger.error(f"View cache failed for {view_func.__name__}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m299[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m297 |[0m                 cache.set(cache_key, response, timeout)
[1m[94m298 |[0m                 return response
[1m[94m299 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m300 |[0m                 logger.error(f"View cache failed for {view_func.__name__}: {e}")
[1m[94m301 |[0m                 return view_func(request, *args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m300[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m298 |[0m                 return response
[1m[94m299 |[0m             except Exception as e:
[1m[94m300 |[0m                 logger.error(f"View cache failed for {view_func.__name__}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m301 |[0m                 return view_func(request, *args, **kwargs)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m300[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m298 |[0m                 return response
[1m[94m299 |[0m             except Exception as e:
[1m[94m300 |[0m                 logger.error(f"View cache failed for {view_func.__name__}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m301 |[0m                 return view_func(request, *args, **kwargs)
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m316[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m314 |[0m         if keys:
[1m[94m315 |[0m             redis_conn.delete(*keys)
[1m[94m316 |[0m             logger.info(f"Invalidated {len(keys)} cache keys for pattern: {pattern}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m317 |[0m         else:
[1m[94m318 |[0m             logger.info(f"No keys found for pattern: {pattern}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m318[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m316 |[0m             logger.info(f"Invalidated {len(keys)} cache keys for pattern: {pattern}")
[1m[94m317 |[0m         else:
[1m[94m318 |[0m             logger.info(f"No keys found for pattern: {pattern}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m319 |[0m     except ImportError:
[1m[94m320 |[0m         logger.warning("django-redis not available for pattern invalidation")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m321[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m319 |[0m     except ImportError:
[1m[94m320 |[0m         logger.warning("django-redis not available for pattern invalidation")
[1m[94m321 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m322 |[0m         logger.error(f"Failed to invalidate cache pattern {pattern}: {e}")
    [1m[94m|[0m

[1msimlane/core/cache_utils.py[0m[36m:[0m322[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m320 |[0m         logger.warning("django-redis not available for pattern invalidation")
[1m[94m321 |[0m     except Exception as e:
[1m[94m322 |[0m         logger.error(f"Failed to invalidate cache pattern {pattern}: {e}")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/cache_utils.py[0m[36m:[0m322[36m:[0m22[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m320 |[0m         logger.warning("django-redis not available for pattern invalidation")
[1m[94m321 |[0m     except Exception as e:
[1m[94m322 |[0m         logger.error(f"Failed to invalidate cache pattern {pattern}: {e}")
    [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
    [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m27[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m25 |[0m                 attrs={
[1m[94m26 |[0m                     "class": (
[1m[94m27 |[0m                         "w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg "
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m28 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m29 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m31[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m29 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
[1m[94m30 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
[1m[94m31 |[0m                         "focus:border-blue-500 dark:focus:border-blue-400 transition-colors"
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m32 |[0m                     ),
[1m[94m33 |[0m                     "placeholder": "Your full name",
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m39[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m37 |[0m                 attrs={
[1m[94m38 |[0m                     "class": (
[1m[94m39 |[0m                         "w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg "
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m40 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m41 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m43[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
[1m[94m42 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
[1m[94m43 |[0m                         "focus:border-blue-500 dark:focus:border-blue-400 transition-colors"
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m44 |[0m                     ),
[1m[94m45 |[0m                     "placeholder": "your.email@example.com",
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m51[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m49 |[0m                 attrs={
[1m[94m50 |[0m                     "class": (
[1m[94m51 |[0m                         "w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg "
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m52 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m53 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m54[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m52 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m53 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
[1m[94m54 |[0m                         "focus:border-blue-500 dark:focus:border-blue-400 transition-colors"
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m55 |[0m                     ),
[1m[94m56 |[0m                 },
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m61[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m59 |[0m                 attrs={
[1m[94m60 |[0m                     "class": (
[1m[94m61 |[0m                         "w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg "
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m62 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m63 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m64[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m62 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m63 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
[1m[94m64 |[0m                         "focus:border-blue-500 dark:focus:border-blue-400 transition-colors"
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m65 |[0m                     ),
[1m[94m66 |[0m                 },
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m71[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m69 |[0m                 attrs={
[1m[94m70 |[0m                     "class": (
[1m[94m71 |[0m                         "w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg "
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m72 |[0m                         "bg-white dark:bg-gray-700 text-gray-900 dark:text-white "
[1m[94m73 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
   [1m[94m|[0m

[1msimlane/core/forms.py[0m[36m:[0m75[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
   [1m[94m|[0m
[1m[94m73 |[0m                         "placeholder-gray-500 dark:placeholder-gray-400 "
[1m[94m74 |[0m                         "focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 "
[1m[94m75 |[0m                         "focus:border-blue-500 dark:focus:border-blue-400 transition-colors resize-vertical"
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m76 |[0m                     ),
[1m[94m77 |[0m                     "rows": 6,
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m62[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m60 |[0m         else:
[1m[94m61 |[0m             self.stdout.write(
[1m[94m62 |[0m                 self.style.ERROR("Please specify an action: --clear, --warm, --stats, or --test"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m63 |[0m             )
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m80[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m78 |[0m                         self.style.SUCCESS(f"✓ Cleared {alias} cache"),
[1m[94m79 |[0m                     )
[1m[94m80 |[0m                 except Exception as e:
   [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m81 |[0m                     self.stdout.write(
[1m[94m82 |[0m                         self.style.ERROR(f"✗ Failed to clear {alias} cache: {e}"),
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m86[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m85 |[0m             self.stdout.write(
[1m[94m86 |[0m                 self.style.SUCCESS(f"\nCache clearing completed for: {', '.join(cache_aliases)}"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m87 |[0m             )
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m89[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m87 |[0m             )
[1m[94m88 |[0m
[1m[94m89 |[0m         except Exception as e:
   [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m90 |[0m             raise CommandError(f"Cache clearing failed: {e}")
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m90[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m89 |[0m         except Exception as e:
[1m[94m90 |[0m             raise CommandError(f"Cache clearing failed: {e}")
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m91 |[0m
[1m[94m92 |[0m     def warm_caches(self):
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m90[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m89 |[0m         except Exception as e:
[1m[94m90 |[0m             raise CommandError(f"Cache clearing failed: {e}")
   [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m91 |[0m
[1m[94m92 |[0m     def warm_caches(self):
   [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m90[36m:[0m32[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
   [1m[94m|[0m
[1m[94m89 |[0m         except Exception as e:
[1m[94m90 |[0m             raise CommandError(f"Cache clearing failed: {e}")
   [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m91 |[0m
[1m[94m92 |[0m     def warm_caches(self):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m104[36m:[0m13[36m:[0m [1;31mN806[0m Variable `User` in function should be lowercase
    [1m[94m|[0m
[1m[94m102 |[0m             from simlane.teams.models import Club
[1m[94m103 |[0m
[1m[94m104 |[0m             User = get_user_model()
    [1m[94m|[0m             [1m[91m^^^^[0m [1m[91mN806[0m
[1m[94m105 |[0m
[1m[94m106 |[0m             # Warm popular public profiles
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m104[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `User` is assigned to but never used
    [1m[94m|[0m
[1m[94m102 |[0m             from simlane.teams.models import Club
[1m[94m103 |[0m
[1m[94m104 |[0m             User = get_user_model()
    [1m[94m|[0m             [1m[91m^^^^[0m [1m[91mF841[0m
[1m[94m105 |[0m
[1m[94m106 |[0m             # Warm popular public profiles
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `User`

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m126[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m124 |[0m                     caches["default"].set(cache_key, profile_data, 600)  # 10 minutes
[1m[94m125 |[0m                     profiles_warmed += 1
[1m[94m126 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m127 |[0m                     logger.warning(f"Failed to warm profile {profile.id}: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m127[36m:[0m36[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m125 |[0m                     profiles_warmed += 1
[1m[94m126 |[0m                 except Exception as e:
[1m[94m127 |[0m                     logger.warning(f"Failed to warm profile {profile.id}: {e}")
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m128 |[0m
[1m[94m129 |[0m             self.stdout.write(f"✓ Warmed {profiles_warmed} sim profiles")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m146[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m144 |[0m                     caches["default"].set(cache_key, simulator_data, 1800)  # 30 minutes
[1m[94m145 |[0m                     simulators_warmed += 1
[1m[94m146 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m147 |[0m                     logger.warning(f"Failed to warm simulator {simulator.id}: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m147[36m:[0m36[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m145 |[0m                     simulators_warmed += 1
[1m[94m146 |[0m                 except Exception as e:
[1m[94m147 |[0m                     logger.warning(f"Failed to warm simulator {simulator.id}: {e}")
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m148 |[0m
[1m[94m149 |[0m             self.stdout.write(f"✓ Warmed {simulators_warmed} simulators")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m153[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m151 |[0m             # Warm active clubs
[1m[94m152 |[0m             self.stdout.write("Warming active clubs...")
[1m[94m153 |[0m             active_clubs = Club.objects.filter(is_active=True).order_by("-created_at")[:10]
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m154 |[0m             clubs_warmed = 0
[1m[94m155 |[0m             for club in active_clubs:
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m167[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m165 |[0m                     caches["default"].set(cache_key, club_data, 600)  # 10 minutes
[1m[94m166 |[0m                     clubs_warmed += 1
[1m[94m167 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m168 |[0m                     logger.warning(f"Failed to warm club {club.id}: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m168[36m:[0m36[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m166 |[0m                     clubs_warmed += 1
[1m[94m167 |[0m                 except Exception as e:
[1m[94m168 |[0m                     logger.warning(f"Failed to warm club {club.id}: {e}")
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m169 |[0m
[1m[94m170 |[0m             self.stdout.write(f"✓ Warmed {clubs_warmed} clubs")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m176[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m174 |[0m             )
[1m[94m175 |[0m
[1m[94m176 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m177 |[0m             raise CommandError(f"Cache warming failed: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m177[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m176 |[0m         except Exception as e:
[1m[94m177 |[0m             raise CommandError(f"Cache warming failed: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m178 |[0m
[1m[94m179 |[0m     def show_stats(self, cache_alias="all"):
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m177[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m176 |[0m         except Exception as e:
[1m[94m177 |[0m             raise CommandError(f"Cache warming failed: {e}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m178 |[0m
[1m[94m179 |[0m     def show_stats(self, cache_alias="all"):
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m177[36m:[0m32[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m176 |[0m         except Exception as e:
[1m[94m177 |[0m             raise CommandError(f"Cache warming failed: {e}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m178 |[0m
[1m[94m179 |[0m     def show_stats(self, cache_alias="all"):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m212[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m210 |[0m                         info = redis_conn.info()
[1m[94m211 |[0m
[1m[94m212 |[0m                         self.stdout.write(f"  Used Memory: {info.get('used_memory_human', 'N/A')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m213 |[0m                         self.stdout.write(f"  Connected Clients: {info.get('connected_clients', 'N/A')}")
[1m[94m214 |[0m                         self.stdout.write(f"  Total Commands: {info.get('total_commands_processed', 'N/A')}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m213[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m212 |[0m                         self.stdout.write(f"  Used Memory: {info.get('used_memory_human', 'N/A')}")
[1m[94m213 |[0m                         self.stdout.write(f"  Connected Clients: {info.get('connected_clients', 'N/A')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m214 |[0m                         self.stdout.write(f"  Total Commands: {info.get('total_commands_processed', 'N/A')}")
[1m[94m215 |[0m                         self.stdout.write(f"  Keyspace Hits: {info.get('keyspace_hits', 'N/A')}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m214[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m212 |[0m                         self.stdout.write(f"  Used Memory: {info.get('used_memory_human', 'N/A')}")
[1m[94m213 |[0m                         self.stdout.write(f"  Connected Clients: {info.get('connected_clients', 'N/A')}")
[1m[94m214 |[0m                         self.stdout.write(f"  Total Commands: {info.get('total_commands_processed', 'N/A')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m215 |[0m                         self.stdout.write(f"  Keyspace Hits: {info.get('keyspace_hits', 'N/A')}")
[1m[94m216 |[0m                         self.stdout.write(f"  Keyspace Misses: {info.get('keyspace_misses', 'N/A')}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m215[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m213 |[0m                         self.stdout.write(f"  Connected Clients: {info.get('connected_clients', 'N/A')}")
[1m[94m214 |[0m                         self.stdout.write(f"  Total Commands: {info.get('total_commands_processed', 'N/A')}")
[1m[94m215 |[0m                         self.stdout.write(f"  Keyspace Hits: {info.get('keyspace_hits', 'N/A')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m216 |[0m                         self.stdout.write(f"  Keyspace Misses: {info.get('keyspace_misses', 'N/A')}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m216[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m214 |[0m                         self.stdout.write(f"  Total Commands: {info.get('total_commands_processed', 'N/A')}")
[1m[94m215 |[0m                         self.stdout.write(f"  Keyspace Hits: {info.get('keyspace_hits', 'N/A')}")
[1m[94m216 |[0m                         self.stdout.write(f"  Keyspace Misses: {info.get('keyspace_misses', 'N/A')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m217 |[0m
[1m[94m218 |[0m                         # Calculate hit rate
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m226[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m225 |[0m                     except (ImportError, Exception) as e:
[1m[94m226 |[0m                         self.stdout.write(f"  Redis stats unavailable: {str(e)[:50]}...")
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m227 |[0m
[1m[94m228 |[0m                 except Exception as e:
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m228[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m226 |[0m                         self.stdout.write(f"  Redis stats unavailable: {str(e)[:50]}...")
[1m[94m227 |[0m
[1m[94m228 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m229 |[0m                     self.stdout.write(f"\n{alias.upper()} Cache: ✗ Error - {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m233[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m231 |[0m             self.stdout.write("\n" + "-" * 50)
[1m[94m232 |[0m
[1m[94m233 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m234 |[0m             raise CommandError(f"Failed to show cache stats: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m234[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m233 |[0m         except Exception as e:
[1m[94m234 |[0m             raise CommandError(f"Failed to show cache stats: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m235 |[0m
[1m[94m236 |[0m     def test_connectivity(self, cache_alias="all"):
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m234[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m233 |[0m         except Exception as e:
[1m[94m234 |[0m             raise CommandError(f"Failed to show cache stats: {e}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m235 |[0m
[1m[94m236 |[0m     def test_connectivity(self, cache_alias="all"):
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m234[36m:[0m32[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m233 |[0m         except Exception as e:
[1m[94m234 |[0m             raise CommandError(f"Failed to show cache stats: {e}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m235 |[0m
[1m[94m236 |[0m     def test_connectivity(self, cache_alias="all"):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m275[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m273 |[0m                         all_working = False
[1m[94m274 |[0m
[1m[94m275 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m276 |[0m                     self.stdout.write(f"✗ {alias}: Connection failed - {e}")
[1m[94m277 |[0m                     all_working = False
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m289[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m287 |[0m                 )
[1m[94m288 |[0m
[1m[94m289 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m290 |[0m             raise CommandError(f"Cache connectivity test failed: {e}")
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m290[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m289 |[0m         except Exception as e:
[1m[94m290 |[0m             raise CommandError(f"Cache connectivity test failed: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m290[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m289 |[0m         except Exception as e:
[1m[94m290 |[0m             raise CommandError(f"Cache connectivity test failed: {e}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
    [1m[94m|[0m

[1msimlane/core/management/commands/cache_management.py[0m[36m:[0m290[36m:[0m32[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m289 |[0m         except Exception as e:
[1m[94m290 |[0m             raise CommandError(f"Cache connectivity test failed: {e}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m90[36m:[0m57[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
   [1m[94m|[0m
[1m[94m88 |[0m         return simulators
[1m[94m89 |[0m
[1m[94m90 |[0m     def create_iracing_data(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m91 |[0m         """Create iRacing cars and tracks from API data"""
[1m[94m92 |[0m         self.stdout.write("Fetching iRacing data from API...")
   [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m90[36m:[0m57[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
   [1m[94m|[0m
[1m[94m88 |[0m         return simulators
[1m[94m89 |[0m
[1m[94m90 |[0m     def create_iracing_data(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m91 |[0m         """Create iRacing cars and tracks from API data"""
[1m[94m92 |[0m         self.stdout.write("Fetching iRacing data from API...")
   [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m122[36m:[0m9[36m:[0m [1;31mC901[0m `process_iracing_cars` is too complex (25 > 10)
    [1m[94m|[0m
[1m[94m120 |[0m             )
[1m[94m121 |[0m
[1m[94m122 |[0m     def process_iracing_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m123 |[0m         """Process cars data from iRacing API"""
[1m[94m124 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m122[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (30 > 12)
    [1m[94m|[0m
[1m[94m120 |[0m             )
[1m[94m121 |[0m
[1m[94m122 |[0m     def process_iracing_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m123 |[0m         """Process cars data from iRacing API"""
[1m[94m124 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m122[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (82 > 50)
    [1m[94m|[0m
[1m[94m120 |[0m             )
[1m[94m121 |[0m
[1m[94m122 |[0m     def process_iracing_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m123 |[0m         """Process cars data from iRacing API"""
[1m[94m124 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m122[36m:[0m74[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m120 |[0m             )
[1m[94m121 |[0m
[1m[94m122 |[0m     def process_iracing_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m                                                                          [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m123 |[0m         """Process cars data from iRacing API"""
[1m[94m124 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m122[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m120 |[0m             )
[1m[94m121 |[0m
[1m[94m122 |[0m     def process_iracing_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m123 |[0m         """Process cars data from iRacing API"""
[1m[94m124 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m174[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m172 |[0m                             continue
[1m[94m173 |[0m
[1m[94m174 |[0m                         # Normalize similar types (e.g., f1/formula1/formulaone -> formula1)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m175 |[0m                         if type_name in ["f1", "formulaone"]:
[1m[94m176 |[0m                             type_name = "formula1"
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m221[36m:[0m34[36m:[0m [1;31mRUF005[0m Consider iterable unpacking instead of concatenation
    [1m[94m|[0m
[1m[94m220 |[0m                   # Prepare search filters for easier searching
[1m[94m221 |[0m                   search_filters = [
    [1m[94m|[0m  [1m[91m__________________________________^[0m
[1m[94m222 |[0m [1m[91m|[0m                     car_make.lower(),
[1m[94m223 |[0m [1m[91m|[0m                     car_model_name.lower(),
[1m[94m224 |[0m [1m[91m|[0m                     normalized_category,
[1m[94m225 |[0m [1m[91m|[0m                 ] + cleaned_types
    [1m[94m|[0m [1m[91m|_________________________________^[0m [1m[91mRUF005[0m
[1m[94m226 |[0m
[1m[94m227 |[0m                   # Create or get car model with all new fields
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with iterable unpacking

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m237[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m235 |[0m                     "weight_lbs": car.get("car_weight", 0),
[1m[94m236 |[0m                     "has_headlights": car.get("has_headlights", False),
[1m[94m237 |[0m                     "has_multiple_dry_tire_types": car.get("has_multiple_dry_tire_types", False),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m238 |[0m                     "has_rain_capable_tire_types": car.get("has_rain_capable_tire_types", False),
[1m[94m239 |[0m                     "rain_enabled": car.get("rain_enabled", False),
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m238[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m236 |[0m                     "has_headlights": car.get("has_headlights", False),
[1m[94m237 |[0m                     "has_multiple_dry_tire_types": car.get("has_multiple_dry_tire_types", False),
[1m[94m238 |[0m                     "has_rain_capable_tire_types": car.get("has_rain_capable_tire_types", False),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m239 |[0m                     "rain_enabled": car.get("rain_enabled", False),
[1m[94m240 |[0m                     "ai_enabled": car.get("ai_enabled", False),
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m312[36m:[0m21[36m:[0m [1;31mF841[0m Local variable `sim_created` is assigned to but never used
    [1m[94m|[0m
[1m[94m310 |[0m                     )
[1m[94m311 |[0m                     sim_car.save()
[1m[94m312 |[0m                     sim_created = True
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m313 |[0m                     created_sim_cars += 1
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `sim_created`

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m315[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m313 |[0m                     created_sim_cars += 1
[1m[94m314 |[0m
[1m[94m315 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m316 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
[1m[94m317 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m316[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m315 |[0m             except Exception as e:
[1m[94m316 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m317 |[0m                 continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m316[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m315 |[0m             except Exception as e:
[1m[94m316 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m317 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m316[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m315 |[0m             except Exception as e:
[1m[94m316 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m317 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m349[36m:[0m9[36m:[0m [1;31mC901[0m `process_iracing_tracks` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m347 |[0m         return car_name.split()[0] if car_name else "Unknown"
[1m[94m348 |[0m
[1m[94m349 |[0m     def process_iracing_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m350 |[0m         """Process tracks data from iRacing API"""
[1m[94m351 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m349[36m:[0m78[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m347 |[0m         return car_name.split()[0] if car_name else "Unknown"
[1m[94m348 |[0m
[1m[94m349 |[0m     def process_iracing_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m                                                                              [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m350 |[0m         """Process tracks data from iRacing API"""
[1m[94m351 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m349[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m347 |[0m         return car_name.split()[0] if car_name else "Unknown"
[1m[94m348 |[0m
[1m[94m349 |[0m     def process_iracing_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m350 |[0m         """Process tracks data from iRacing API"""
[1m[94m351 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m363[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m361 |[0m         created_sim_layouts = 0
[1m[94m362 |[0m
[1m[94m363 |[0m         # Group tracks by track_name since each API entry is actually a track configuration
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m364 |[0m         tracks_by_name = {}
[1m[94m365 |[0m         for track in tracks:
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m381[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m379 |[0m                     defaults={
[1m[94m380 |[0m                         "slug": slugify(track_name),
[1m[94m381 |[0m                         "country": self._parse_location_country(base_track.get("location", "")),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m382 |[0m                         "location": base_track.get("location", ""),
[1m[94m383 |[0m                         "latitude": base_track.get("latitude"),
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m397[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m395 |[0m                     track_model=track_model,
[1m[94m396 |[0m                     defaults={
[1m[94m397 |[0m                         "sim_api_id": f"track_{slugify(track_name)}",  # Use track name as base ID
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m398 |[0m                         "display_name": track_name,
[1m[94m399 |[0m                         "slug": slugify(f"iracing-{track_name}"),
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m400[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m398 |[0m                         "display_name": track_name,
[1m[94m399 |[0m                         "slug": slugify(f"iracing-{track_name}"),
[1m[94m400 |[0m                         "is_laser_scanned": any(config.get("tech_track", False) for config in track_configs),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m401 |[0m                         "image_url": base_track.get("logo", ""),
[1m[94m402 |[0m                         "is_active": True,
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m411[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m409 |[0m                     # Update existing sim track
[1m[94m410 |[0m                     sim_track.display_name = track_name
[1m[94m411 |[0m                     sim_track.is_laser_scanned = any(config.get("tech_track", False) for config in track_configs)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m412 |[0m                     sim_track.image_url = base_track.get("logo", "")
[1m[94m413 |[0m                     sim_track.save()
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m417[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m415 |[0m                 # Create SimLayout for each track configuration
[1m[94m416 |[0m                 for config in track_configs:
[1m[94m417 |[0m                     track_type = self._determine_track_type(config.get("config_name", ""))
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m418 |[0m                     config_name = config.get("config_name", "Unknown Configuration")
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m422[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m420 |[0m                     layout, layout_created = SimLayout.objects.get_or_create(
[1m[94m421 |[0m                         sim_track=sim_track,
[1m[94m422 |[0m                         layout_code=str(config["track_id"]),  # Use track_id as layout code
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m423 |[0m                         defaults={
[1m[94m424 |[0m                             "name": config_name,
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m427[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (129 > 88)
    [1m[94m|[0m
[1m[94m425 |[0m                             "slug": slugify(f"{track_name}-{config_name}"),
[1m[94m426 |[0m                             "type": track_type,
[1m[94m427 |[0m                             "length_km": config.get("track_config_length", 0) / 1000 if config.get("track_config_length") else 0,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m428 |[0m                         },
[1m[94m429 |[0m                     )
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m437[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (130 > 88)
    [1m[94m|[0m
[1m[94m435 |[0m                         layout.name = config_name
[1m[94m436 |[0m                         layout.type = track_type
[1m[94m437 |[0m                         layout.length_km = config.get("track_config_length", 0) / 1000 if config.get("track_config_length") else 0
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m438 |[0m                         layout.save()
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m440[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m438 |[0m                         layout.save()
[1m[94m439 |[0m
[1m[94m440 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m441 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
[1m[94m442 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m441[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m440 |[0m             except Exception as e:
[1m[94m441 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m442 |[0m                 continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m441[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m440 |[0m             except Exception as e:
[1m[94m441 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m442 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/management/commands/create_base_seed_data.py[0m[36m:[0m467[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m466 |[0m     def _parse_location_country(self, location: str) -> str:
[1m[94m467 |[0m         """Parse country from location string (e.g., 'Lakeville, Connecticut, USA' -> 'USA')"""
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m468 |[0m         if not location:
[1m[94m469 |[0m             return ""
    [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m30[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m28 |[0m             if isinstance(cars_data, dict):
[1m[94m29 |[0m                 cars = cars_data.get("data", [])
[1m[94m30 |[0m                 self.stdout.write(f"Cars data is a dict with keys: {list(cars_data.keys())}")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m31 |[0m             else:
[1m[94m32 |[0m                 cars = cars_data if isinstance(cars_data, list) else []
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m57[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
   [1m[94m|[0m
[1m[94m55 |[0m                     "car_make": car_make,
[1m[94m56 |[0m                     "car_model": car_model,
[1m[94m57 |[0m                     "suggested_manufacturer": car_make if car_make else self._extract_manufacturer(car_name),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m58 |[0m                     "suggested_model": car_model if car_model else self._extract_model(car_name, car_make),
[1m[94m59 |[0m                 }
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m58[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
   [1m[94m|[0m
[1m[94m56 |[0m                     "car_model": car_model,
[1m[94m57 |[0m                     "suggested_manufacturer": car_make if car_make else self._extract_manufacturer(car_name),
[1m[94m58 |[0m                     "suggested_model": car_model if car_model else self._extract_model(car_name, car_make),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m59 |[0m                 }
[1m[94m60 |[0m                 examples.append(example)
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m65[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
   [1m[94m|[0m
[1m[94m63 |[0m                 self.stdout.write(f"    car_make: '{car_make}'")
[1m[94m64 |[0m                 self.stdout.write(f"    car_model: '{car_model}'")
[1m[94m65 |[0m                 self.stdout.write(f"    → Suggested manufacturer: '{example['suggested_manufacturer']}'")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m66 |[0m                 self.stdout.write(f"    → Suggested model: '{example['suggested_model']}'")
[1m[94m67 |[0m                 self.stdout.write("")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m66[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
   [1m[94m|[0m
[1m[94m64 |[0m                 self.stdout.write(f"    car_model: '{car_model}'")
[1m[94m65 |[0m                 self.stdout.write(f"    → Suggested manufacturer: '{example['suggested_manufacturer']}'")
[1m[94m66 |[0m                 self.stdout.write(f"    → Suggested model: '{example['suggested_model']}'")
   [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m67 |[0m                 self.stdout.write("")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m74[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
   [1m[94m|[0m
[1m[94m72 |[0m             self.stdout.write("="*50)
[1m[94m73 |[0m             self.stdout.write("CarModel fields:")
[1m[94m74 |[0m             self.stdout.write("  - name: Use car_model if available, else extract from car_name")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m75 |[0m             self.stdout.write("  - manufacturer: Use car_make if available, else extract from car_name")
[1m[94m76 |[0m             self.stdout.write("  - base_specs: Use hp, car_weight, etc.")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_car_data.py[0m[36m:[0m75[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m73 |[0m             self.stdout.write("CarModel fields:")
[1m[94m74 |[0m             self.stdout.write("  - name: Use car_model if available, else extract from car_name")
[1m[94m75 |[0m             self.stdout.write("  - manufacturer: Use car_make if available, else extract from car_name")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m76 |[0m             self.stdout.write("  - base_specs: Use hp, car_weight, etc.")
[1m[94m77 |[0m             self.stdout.write("")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m19[36m:[0m9[36m:[0m [1;31mC901[0m `handle` is too complex (19 > 10)
   [1m[94m|[0m
[1m[94m17 |[0m     help = "Debug categories and car_types fields from iRacing API"
[1m[94m18 |[0m
[1m[94m19 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mC901[0m
[1m[94m20 |[0m         self.stdout.write("Analyzing categories and car_types from iRacing API...")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m19[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (19 > 12)
   [1m[94m|[0m
[1m[94m17 |[0m     help = "Debug categories and car_types fields from iRacing API"
[1m[94m18 |[0m
[1m[94m19 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m20 |[0m         self.stdout.write("Analyzing categories and car_types from iRacing API...")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m19[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (70 > 50)
   [1m[94m|[0m
[1m[94m17 |[0m     help = "Debug categories and car_types fields from iRacing API"
[1m[94m18 |[0m
[1m[94m19 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m20 |[0m         self.stdout.write("Analyzing categories and car_types from iRacing API...")
   [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m101[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m100 |[0m             self.stdout.write("\nCATEGORIES:")
[1m[94m101 |[0m             self.stdout.write(f"  - Cars with multiple categories: {len(cars_with_multiple_categories)}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m102 |[0m             self.stdout.write(f"  - Cars with no categories: {len(cars_with_no_categories)}")
[1m[94m103 |[0m             self.stdout.write(f"  - Unique categories found: {list(categories_counter.keys())}")
    [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m102[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m100 |[0m             self.stdout.write("\nCATEGORIES:")
[1m[94m101 |[0m             self.stdout.write(f"  - Cars with multiple categories: {len(cars_with_multiple_categories)}")
[1m[94m102 |[0m             self.stdout.write(f"  - Cars with no categories: {len(cars_with_no_categories)}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m103 |[0m             self.stdout.write(f"  - Unique categories found: {list(categories_counter.keys())}")
[1m[94m104 |[0m             self.stdout.write(f"  - Category counts: {dict(categories_counter)}")
    [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m103[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m101 |[0m             self.stdout.write(f"  - Cars with multiple categories: {len(cars_with_multiple_categories)}")
[1m[94m102 |[0m             self.stdout.write(f"  - Cars with no categories: {len(cars_with_no_categories)}")
[1m[94m103 |[0m             self.stdout.write(f"  - Unique categories found: {list(categories_counter.keys())}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m104 |[0m             self.stdout.write(f"  - Category counts: {dict(categories_counter)}")
    [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m112[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m111 |[0m             self.stdout.write("\nCAR_TYPES:")
[1m[94m112 |[0m             self.stdout.write(f"  - Cars with multiple types: {len(cars_with_multiple_types)}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m113 |[0m             self.stdout.write(f"  - Cars with no types: {len(cars_with_no_types)}")
[1m[94m114 |[0m             self.stdout.write(f"  - Unique car types found: {list(car_types_counter.keys())}")
    [1m[94m|[0m

[1msimlane/core/management/commands/debug_categories.py[0m[36m:[0m114[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m112 |[0m             self.stdout.write(f"  - Cars with multiple types: {len(cars_with_multiple_types)}")
[1m[94m113 |[0m             self.stdout.write(f"  - Cars with no types: {len(cars_with_no_types)}")
[1m[94m114 |[0m             self.stdout.write(f"  - Unique car types found: {list(car_types_counter.keys())}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m115 |[0m             self.stdout.write(f"  - Car type counts: {dict(car_types_counter)}")
    [1m[94m|[0m

[1msimlane/core/management/commands/test_search.py[0m[36m:[0m41[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
   [1m[94m|[0m
[1m[94m39 |[0m             # Get search service and perform search
[1m[94m40 |[0m             search_service = get_search_service()
[1m[94m41 |[0m             self.stdout.write(f"Using search service: {search_service.__class__.__name__}")
   [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m42 |[0m
[1m[94m43 |[0m             start_time = timezone.now()
   [1m[94m|[0m

[1msimlane/core/management/commands/test_search.py[0m[36m:[0m43[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `start_time` is assigned to but never used
   [1m[94m|[0m
[1m[94m41 |[0m             self.stdout.write(f"Using search service: {search_service.__class__.__name__}")
[1m[94m42 |[0m
[1m[94m43 |[0m             start_time = timezone.now()
   [1m[94m|[0m             [1m[91m^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m44 |[0m             results = search_service.search(query, filters, limit)
[1m[94m45 |[0m             end_time = timezone.now()
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `start_time`

[1msimlane/core/management/commands/test_search.py[0m[36m:[0m45[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `end_time` is assigned to but never used
   [1m[94m|[0m
[1m[94m43 |[0m             start_time = timezone.now()
[1m[94m44 |[0m             results = search_service.search(query, filters, limit)
[1m[94m45 |[0m             end_time = timezone.now()
   [1m[94m|[0m             [1m[91m^^^^^^^^[0m [1m[91mF841[0m
[1m[94m46 |[0m
[1m[94m47 |[0m             # Display results
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `end_time`

[1msimlane/core/management/commands/test_search.py[0m[36m:[0m50[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
   [1m[94m|[0m
[1m[94m48 |[0m             self.stdout.write(
[1m[94m49 |[0m                 self.style.SUCCESS(
[1m[94m50 |[0m                     f"\nFound {results['total_count']} results in {results['query_time_ms']:.1f}ms",
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m51 |[0m                 ),
[1m[94m52 |[0m             )
   [1m[94m|[0m

[1msimlane/core/middleware.py[0m[36m:[0m72[36m:[0m5[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
   [1m[94m|[0m
[1m[94m70 |[0m           if user and user.is_active:
[1m[94m71 |[0m               return user
[1m[94m72 |[0m [1m[91m/[0m     except Exception:
[1m[94m73 |[0m [1m[91m|[0m         pass
   [1m[94m|[0m [1m[91m|____________^[0m [1m[91mS110[0m
[1m[94m74 |[0m       return AnonymousUser()
   [1m[94m|[0m

[1msimlane/core/middleware.py[0m[36m:[0m72[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m70 |[0m         if user and user.is_active:
[1m[94m71 |[0m             return user
[1m[94m72 |[0m     except Exception:
   [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m73 |[0m         pass
[1m[94m74 |[0m     return AnonymousUser()
   [1m[94m|[0m

[1msimlane/core/models.py[0m[36m:[0m168[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m167 |[0m     def __str__(self):
[1m[94m168 |[0m         return f"{self.content_object} - {self.get_gallery_type_display()} ({self.order})"
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m93[36m:[0m22[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
   [1m[94m|[0m
[1m[94m91 |[0m     def build_document(instance) -> SearchResult:
[1m[94m92 |[0m         """Build a search document for any model instance"""
[1m[94m93 |[0m         model_name = instance._meta.model_name
   [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m94 |[0m         app_label = instance._meta.app_label
   [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m94[36m:[0m9[36m:[0m [1;31mF841[0m Local variable `app_label` is assigned to but never used
   [1m[94m|[0m
[1m[94m92 |[0m         """Build a search document for any model instance"""
[1m[94m93 |[0m         model_name = instance._meta.model_name
[1m[94m94 |[0m         app_label = instance._meta.app_label
   [1m[94m|[0m         [1m[91m^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m95 |[0m
[1m[94m96 |[0m         # Dispatch to specific builder method
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `app_label`

[1msimlane/core/search.py[0m[36m:[0m94[36m:[0m21[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
   [1m[94m|[0m
[1m[94m92 |[0m         """Build a search document for any model instance"""
[1m[94m93 |[0m         model_name = instance._meta.model_name
[1m[94m94 |[0m         app_label = instance._meta.app_label
   [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m95 |[0m
[1m[94m96 |[0m         # Dispatch to specific builder method
   [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m128[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m126 |[0m             title=f"{profile.profile_name} ({profile.simulator.name})",
[1m[94m127 |[0m             description=f"Sim racing profile on {profile.simulator.name}" +
[1m[94m128 |[0m                        (f" - Linked to {profile.linked_user.username}" if profile.linked_user else ""),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m129 |[0m             url=profile.get_absolute_url(),
[1m[94m130 |[0m             metadata={
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m135[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m133 |[0m                 "is_verified": profile.is_verified,
[1m[94m134 |[0m                 "is_public": profile.is_public,
[1m[94m135 |[0m                 "linked_user": profile.linked_user.username if profile.linked_user else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m136 |[0m                 "last_active": profile.last_active.isoformat() if profile.last_active else None,
[1m[94m137 |[0m             },
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m136[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m134 |[0m                 "is_public": profile.is_public,
[1m[94m135 |[0m                 "linked_user": profile.linked_user.username if profile.linked_user else None,
[1m[94m136 |[0m                 "last_active": profile.last_active.isoformat() if profile.last_active else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m137 |[0m             },
[1m[94m138 |[0m         )
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m146[36m:[0m85[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `200` with a constant variable
    [1m[94m|[0m
[1m[94m144 |[0m             type="event",
[1m[94m145 |[0m             title=event.name,
[1m[94m146 |[0m             description=event.description[:200] + "..." if len(event.description) > 200 else event.description,
    [1m[94m|[0m                                                                                     [1m[91m^^^[0m [1m[91mPLR2004[0m
[1m[94m147 |[0m             url=f"/events/{event.slug}/",  # You'll need to add this URL pattern
[1m[94m148 |[0m             metadata={
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m146[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m144 |[0m             type="event",
[1m[94m145 |[0m             title=event.name,
[1m[94m146 |[0m             description=event.description[:200] + "..." if len(event.description) > 200 else event.description,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m147 |[0m             url=f"/events/{event.slug}/",  # You'll need to add this URL pattern
[1m[94m148 |[0m             metadata={
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m155[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m153 |[0m                 "event_source": event.event_source,
[1m[94m154 |[0m                 "visibility": event.visibility,
[1m[94m155 |[0m                 "event_date": event.event_date.isoformat() if event.event_date else None,
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m156 |[0m                 "track": event.sim_layout.sim_track.display_name,
[1m[94m157 |[0m                 "track_country": event.sim_layout.sim_track.track_model.country,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m168[36m:[0m83[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `200` with a constant variable
    [1m[94m|[0m
[1m[94m166 |[0m             type="team",
[1m[94m167 |[0m             title=team.name,
[1m[94m168 |[0m             description=team.description[:200] + "..." if len(team.description) > 200 else team.description,
    [1m[94m|[0m                                                                                   [1m[91m^^^[0m [1m[91mPLR2004[0m
[1m[94m169 |[0m             url=f"/teams/{team.slug}/",  # You'll need to add this URL pattern
[1m[94m170 |[0m             image_url=team.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m168[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m166 |[0m             type="team",
[1m[94m167 |[0m             title=team.name,
[1m[94m168 |[0m             description=team.description[:200] + "..." if len(team.description) > 200 else team.description,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m169 |[0m             url=f"/teams/{team.slug}/",  # You'll need to add this URL pattern
[1m[94m170 |[0m             image_url=team.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m177[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m175 |[0m                 "club": team.club.name if team.club else None,
[1m[94m176 |[0m                 "member_count": team.members.count(),
[1m[94m177 |[0m                 "source_simulator": team.source_simulator.name if team.source_simulator else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m178 |[0m             },
[1m[94m179 |[0m         )
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m187[36m:[0m83[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `200` with a constant variable
    [1m[94m|[0m
[1m[94m185 |[0m             type="club",
[1m[94m186 |[0m             title=club.name,
[1m[94m187 |[0m             description=club.description[:200] + "..." if len(club.description) > 200 else club.description,
    [1m[94m|[0m                                                                                   [1m[91m^^^[0m [1m[91mPLR2004[0m
[1m[94m188 |[0m             url=f"/clubs/{club.slug}/",  # You'll need to add this URL pattern
[1m[94m189 |[0m             image_url=club.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m187[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m185 |[0m             type="club",
[1m[94m186 |[0m             title=club.name,
[1m[94m187 |[0m             description=club.description[:200] + "..." if len(club.description) > 200 else club.description,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m188 |[0m             url=f"/clubs/{club.slug}/",  # You'll need to add this URL pattern
[1m[94m189 |[0m             image_url=club.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m204[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (123 > 88)
    [1m[94m|[0m
[1m[94m202 |[0m             type="simulator",
[1m[94m203 |[0m             title=simulator.name,
[1m[94m204 |[0m             description=simulator.description[:200] + "..." if len(simulator.description) > 200 else simulator.description,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m205 |[0m             url=f"/sim/{simulator.slug}/",
[1m[94m206 |[0m             image_url=simulator.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m204[36m:[0m93[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `200` with a constant variable
    [1m[94m|[0m
[1m[94m202 |[0m             type="simulator",
[1m[94m203 |[0m             title=simulator.name,
[1m[94m204 |[0m             description=simulator.description[:200] + "..." if len(simulator.description) > 200 else simulator.description,
    [1m[94m|[0m                                                                                             [1m[91m^^^[0m [1m[91mPLR2004[0m
[1m[94m205 |[0m             url=f"/sim/{simulator.slug}/",
[1m[94m206 |[0m             image_url=simulator.logo_url or None,
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m255[36m:[0m19[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m253 |[0m         """Fallback for models without specific builders"""
[1m[94m254 |[0m         return SearchResult(
[1m[94m255 |[0m             id=f"{instance._meta.model_name}_{instance.pk}",
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m256 |[0m             type=instance._meta.model_name,
[1m[94m257 |[0m             title=str(instance),
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m256[36m:[0m18[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m254 |[0m         return SearchResult(
[1m[94m255 |[0m             id=f"{instance._meta.model_name}_{instance.pk}",
[1m[94m256 |[0m             type=instance._meta.model_name,
    [1m[94m|[0m                  [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m258[36m:[0m28[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m256 |[0m             type=instance._meta.model_name,
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
    [1m[94m|[0m                            [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m259 |[0m             url=f"/{instance._meta.app_label}/{instance._meta.model_name}/{instance.pk}/",
[1m[94m260 |[0m             metadata={},
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m258[36m:[0m63[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m256 |[0m             type=instance._meta.model_name,
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
    [1m[94m|[0m                                                               [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m259 |[0m             url=f"/{instance._meta.app_label}/{instance._meta.model_name}/{instance.pk}/",
[1m[94m260 |[0m             metadata={},
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m258[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m256 |[0m             type=instance._meta.model_name,
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m259 |[0m             url=f"/{instance._meta.app_label}/{instance._meta.model_name}/{instance.pk}/",
[1m[94m260 |[0m             metadata={},
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m259[36m:[0m21[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
[1m[94m259 |[0m             url=f"/{instance._meta.app_label}/{instance._meta.model_name}/{instance.pk}/",
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m260 |[0m             metadata={},
[1m[94m261 |[0m         )
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m259[36m:[0m48[36m:[0m [1;31mSLF001[0m Private member accessed: `_meta`
    [1m[94m|[0m
[1m[94m257 |[0m             title=str(instance),
[1m[94m258 |[0m             description=f"{instance._meta.verbose_name} from {instance._meta.app_label}",
[1m[94m259 |[0m             url=f"/{instance._meta.app_label}/{instance._meta.model_name}/{instance.pk}/",
    [1m[94m|[0m                                                [1m[91m^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m260 |[0m             metadata={},
[1m[94m261 |[0m         )
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m301[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m300 |[0m         # Search each model type
[1m[94m301 |[0m         search_models = filters.types if filters.types else list(self.searchable_models.keys())
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m302 |[0m
[1m[94m303 |[0m         for model_type in search_models:
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m307[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m305 |[0m                 results = self.search_by_type(query, model_type, limit=limit)
[1m[94m306 |[0m                 all_results.extend(results)
[1m[94m307 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m308 |[0m                 logger.error(f"Error searching {model_type}: {e}")
[1m[94m309 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m308[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m306 |[0m                 all_results.extend(results)
[1m[94m307 |[0m             except Exception as e:
[1m[94m308 |[0m                 logger.error(f"Error searching {model_type}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m309 |[0m                 continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/search.py[0m[36m:[0m308[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m306 |[0m                 all_results.extend(results)
[1m[94m307 |[0m             except Exception as e:
[1m[94m308 |[0m                 logger.error(f"Error searching {model_type}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m309 |[0m                 continue
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m329[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m327 |[0m         }
[1m[94m328 |[0m
[1m[94m329 |[0m     def search_by_type(self, query: str, model_type: str, limit: int = 20) -> list[SearchResult]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m330 |[0m         """Search within a specific model type using PostgreSQL full-text search"""
[1m[94m331 |[0m         if model_type not in self.searchable_models:
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m358[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m356 |[0m                 try:
[1m[94m357 |[0m                     doc = SearchDocumentBuilder.build_document(instance)
[1m[94m358 |[0m                     doc.relevance_score = float(instance.rank) if hasattr(instance, "rank") else 0.0
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m359 |[0m                     results.append(doc)
[1m[94m360 |[0m                 except Exception as e:
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m360[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m358 |[0m                     doc.relevance_score = float(instance.rank) if hasattr(instance, "rank") else 0.0
[1m[94m359 |[0m                     results.append(doc)
[1m[94m360 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m361 |[0m                     logger.error(f"Error building document for {instance}: {e}")
[1m[94m362 |[0m                     continue
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m361[36m:[0m21[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m359 |[0m                     results.append(doc)
[1m[94m360 |[0m                 except Exception as e:
[1m[94m361 |[0m                     logger.error(f"Error building document for {instance}: {e}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m362 |[0m                     continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/search.py[0m[36m:[0m361[36m:[0m34[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m359 |[0m                     results.append(doc)
[1m[94m360 |[0m                 except Exception as e:
[1m[94m361 |[0m                     logger.error(f"Error building document for {instance}: {e}")
    [1m[94m|[0m                                  [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m362 |[0m                     continue
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m364[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m362 |[0m                     continue
[1m[94m363 |[0m
[1m[94m364 |[0m             return results
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m365 |[0m
[1m[94m366 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m366[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m364 |[0m             return results
[1m[94m365 |[0m
[1m[94m366 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m367 |[0m             logger.error(f"Error searching {model_type}: {e}")
[1m[94m368 |[0m             return []
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m367[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m366 |[0m         except Exception as e:
[1m[94m367 |[0m             logger.error(f"Error searching {model_type}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m368 |[0m             return []
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/search.py[0m[36m:[0m367[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m366 |[0m         except Exception as e:
[1m[94m367 |[0m             logger.error(f"Error searching {model_type}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m368 |[0m             return []
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m377[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m375 |[0m             },
[1m[94m376 |[0m             "sim_profile": {
[1m[94m377 |[0m                 "fields": ["profile_name", "linked_user__username", "linked_user__name"],
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m378 |[0m             },
[1m[94m379 |[0m             "event": {
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m380[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m378 |[0m             },
[1m[94m379 |[0m             "event": {
[1m[94m380 |[0m                 "fields": ["name", "description", "sim_layout__sim_track__display_name"],
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m381 |[0m             },
[1m[94m382 |[0m             "team": {
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m408[36m:[0m14[36m:[0m [1;31mPLR1714[0m Consider merging multiple comparisons: `model_type in {"club", "simulator"}`.
    [1m[94m|[0m
[1m[94m406 |[0m         elif model_type == "team":
[1m[94m407 |[0m             queryset = queryset.filter(is_public=True, is_active=True)
[1m[94m408 |[0m         elif model_type == "club" or model_type == "simulator":
    [1m[94m|[0m              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR1714[0m
[1m[94m409 |[0m             queryset = queryset.filter(is_active=True)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Merge multiple comparisons

[1msimlane/core/search.py[0m[36m:[0m427[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m425 |[0m         simulator_counts = {}
[1m[94m426 |[0m         for result in results:
[1m[94m427 |[0m             if result.type in ["sim_profile", "event"] and "simulator" in result.metadata:
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m428 |[0m                 sim = result.metadata["simulator"]
[1m[94m429 |[0m                 simulator_counts[sim] = simulator_counts.get(sim, 0) + 1
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m440[36m:[0m25[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m438 |[0m         suggestions = []
[1m[94m439 |[0m
[1m[94m440 |[0m         if len(query) < 2:
    [1m[94m|[0m                         [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m441 |[0m             return suggestions
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m446[36m:[0m13[36m:[0m [1;31mN806[0m Variable `User` in function should be lowercase
    [1m[94m|[0m
[1m[94m444 |[0m         try:
[1m[94m445 |[0m             # User suggestions
[1m[94m446 |[0m             User = self.searchable_models["user"]
    [1m[94m|[0m             [1m[91m^^^^[0m [1m[91mN806[0m
[1m[94m447 |[0m             users = User.objects.filter(
[1m[94m448 |[0m                 Q(username__istartswith=query) | Q(name__istartswith=query),
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m453[36m:[0m13[36m:[0m [1;31mN806[0m Variable `Event` in function should be lowercase
    [1m[94m|[0m
[1m[94m452 |[0m             # Event suggestions
[1m[94m453 |[0m             Event = self.searchable_models["event"]
    [1m[94m|[0m             [1m[91m^^^^^[0m [1m[91mN806[0m
[1m[94m454 |[0m             events = Event.objects.filter(name__istartswith=query)[:limit//2]
[1m[94m455 |[0m             suggestions.extend([e.name for e in events])
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m457[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m455 |[0m             suggestions.extend([e.name for e in events])
[1m[94m456 |[0m
[1m[94m457 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m458 |[0m             logger.error(f"Error getting suggestions: {e}")
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m458[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m457 |[0m         except Exception as e:
[1m[94m458 |[0m             logger.error(f"Error getting suggestions: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m459 |[0m
[1m[94m460 |[0m         return suggestions[:limit]
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/core/search.py[0m[36m:[0m458[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m457 |[0m         except Exception as e:
[1m[94m458 |[0m             logger.error(f"Error getting suggestions: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m459 |[0m
[1m[94m460 |[0m         return suggestions[:limit]
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m471[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m470 |[0m     def reindex_all(self) -> bool:
[1m[94m471 |[0m         """For PostgreSQL, no reindexing needed - indexes are maintained automatically"""
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m472 |[0m         return True
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m486[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m484 |[0m     if backend == "meilisearch":
[1m[94m485 |[0m         # Future implementation
[1m[94m486 |[0m         raise NotImplementedError("Meilisearch backend not yet implemented")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m487 |[0m     if backend == "elasticsearch":
[1m[94m488 |[0m         # Future implementation
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/core/search.py[0m[36m:[0m489[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m487 |[0m     if backend == "elasticsearch":
[1m[94m488 |[0m         # Future implementation
[1m[94m489 |[0m         raise NotImplementedError("Elasticsearch backend not yet implemented")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m490 |[0m     raise ValueError(f"Unknown search backend: {backend}")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/core/search.py[0m[36m:[0m490[36m:[0m11[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m488 |[0m         # Future implementation
[1m[94m489 |[0m         raise NotImplementedError("Elasticsearch backend not yet implemented")
[1m[94m490 |[0m     raise ValueError(f"Unknown search backend: {backend}")
    [1m[94m|[0m           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
    [1m[94m|[0m

[1msimlane/core/search.py[0m[36m:[0m490[36m:[0m22[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m488 |[0m         # Future implementation
[1m[94m489 |[0m         raise NotImplementedError("Elasticsearch backend not yet implemented")
[1m[94m490 |[0m     raise ValueError(f"Unknown search backend: {backend}")
    [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/core/urls.py[0m[36m:[0m18[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m16 |[0m     path("search/", views.search_page, name="search"),
[1m[94m17 |[0m     path("api/search/", views.search_api, name="search_api"),
[1m[94m18 |[0m     path("api/search/suggestions/", views.search_suggestions, name="search_suggestions"),
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m19 |[0m     path("search/htmx/", views.search_htmx, name="search_htmx"),
[1m[94m20 |[0m ]
   [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m290[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m289 |[0m         # Get clubs count through ClubMember relationships
[1m[94m290 |[0m         club_memberships = ClubMember.objects.filter(user=request.user).select_related("club")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m291 |[0m         user_clubs = [cm.club for cm in club_memberships]
[1m[94m292 |[0m         total_clubs = len(user_clubs)
    [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m293[36m:[0m5[36m:[0m [1;31mE722[0m Do not use bare `except`
    [1m[94m|[0m
[1m[94m291 |[0m         user_clubs = [cm.club for cm in club_memberships]
[1m[94m292 |[0m         total_clubs = len(user_clubs)
[1m[94m293 |[0m     except:
    [1m[94m|[0m     [1m[91m^^^^^^[0m [1m[91mE722[0m
[1m[94m294 |[0m         pass  # Teams model might not exist yet
    [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m293[36m:[0m5[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
    [1m[94m|[0m
[1m[94m291 |[0m           user_clubs = [cm.club for cm in club_memberships]
[1m[94m292 |[0m           total_clubs = len(user_clubs)
[1m[94m293 |[0m [1m[91m/[0m     except:
[1m[94m294 |[0m [1m[91m|[0m         pass  # Teams model might not exist yet
    [1m[94m|[0m [1m[91m|____________^[0m [1m[91mS110[0m
[1m[94m295 |[0m
[1m[94m296 |[0m       context = {
    [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m352[36m:[0m9[36m:[0m [1;31mPERF401[0m Use a list comprehension to create a transformed list
    [1m[94m|[0m
[1m[94m350 |[0m       serialized_results = []
[1m[94m351 |[0m       for result in results["results"]:
[1m[94m352 |[0m [1m[91m/[0m         serialized_results.append({
[1m[94m353 |[0m [1m[91m|[0m             "id": result.id,
[1m[94m354 |[0m [1m[91m|[0m             "type": result.type,
[1m[94m355 |[0m [1m[91m|[0m             "title": result.title,
[1m[94m356 |[0m [1m[91m|[0m             "description": result.description,
[1m[94m357 |[0m [1m[91m|[0m             "url": result.url,
[1m[94m358 |[0m [1m[91m|[0m             "image_url": result.image_url,
[1m[94m359 |[0m [1m[91m|[0m             "metadata": result.metadata,
[1m[94m360 |[0m [1m[91m|[0m             "relevance_score": result.relevance_score,
[1m[94m361 |[0m [1m[91m|[0m         })
    [1m[94m|[0m [1m[91m|__________^[0m [1m[91mPERF401[0m
[1m[94m362 |[0m
[1m[94m363 |[0m       return JsonResponse({
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace for loop with list comprehension

[1msimlane/core/views.py[0m[36m:[0m392[36m:[0m34[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m390 |[0m     query = request.GET.get("q", "").strip()
[1m[94m391 |[0m
[1m[94m392 |[0m     if not query or len(query) < 2:
    [1m[94m|[0m                                  [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m393 |[0m         return JsonResponse({"suggestions": []})
    [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m500[36m:[0m83[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `8` with a constant variable
    [1m[94m|[0m
[1m[94m498 |[0m         "query": query,
[1m[94m499 |[0m         "query_time_ms": search_results["query_time_ms"],
[1m[94m500 |[0m         "show_more_url": f"/search/?q={query}" if search_results["total_count"] > 8 else None,
    [1m[94m|[0m                                                                                   [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m501 |[0m     }
    [1m[94m|[0m

[1msimlane/core/views.py[0m[36m:[0m500[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m498 |[0m         "query": query,
[1m[94m499 |[0m         "query_time_ms": search_results["query_time_ms"],
[1m[94m500 |[0m         "show_more_url": f"/search/?q={query}" if search_results["total_count"] > 8 else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m501 |[0m     }
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m65[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
   [1m[94m|[0m
[1m[94m65 |[0m def find_or_create_sim_layout_from_track_data(track_data: dict, simulator: str) -> SimLayout | None:
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m66 |[0m     """Find or create SimLayout from track data."""
[1m[94m67 |[0m     track_id = track_data.get("track_id")
   [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m101[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m 99 |[0m             return None
[1m[94m100 |[0m
[1m[94m101 |[0m         logger.info(f"Found SimLayout: {sim_layout} for track {track_name} (config: {config_name})")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m102 |[0m         return sim_layout
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m101[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m 99 |[0m             return None
[1m[94m100 |[0m
[1m[94m101 |[0m         logger.info(f"Found SimLayout: {sim_layout} for track {track_name} (config: {config_name})")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m102 |[0m         return sim_layout
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m102[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m101 |[0m         logger.info(f"Found SimLayout: {sim_layout} for track {track_name} (config: {config_name})")
[1m[94m102 |[0m         return sim_layout
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m103 |[0m
[1m[94m104 |[0m     except Simulator.DoesNotExist:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m105[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m104 |[0m     except Simulator.DoesNotExist:
[1m[94m105 |[0m         logger.error("iRacing simulator not found in database")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m106 |[0m         return None
[1m[94m107 |[0m     except Exception as e:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m107[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m105 |[0m         logger.error("iRacing simulator not found in database")
[1m[94m106 |[0m         return None
[1m[94m107 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m108 |[0m         logger.error("Error finding SimLayout for track %s: %s", track_name, str(e))
[1m[94m109 |[0m         return None
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m108[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m106 |[0m         return None
[1m[94m107 |[0m     except Exception as e:
[1m[94m108 |[0m         logger.error("Error finding SimLayout for track %s: %s", track_name, str(e))
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m109 |[0m         return None
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m135[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m133 |[0m     # Define unit conversion factors for reference
[1m[94m134 |[0m     units_info = {
[1m[94m135 |[0m         "air_temperature": {"unit": "celsius", "conversion": "divide by 100", "api_field": "air_temp"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m136 |[0m         "pressure": {"unit": "hectopascals", "conversion": "divide by 10", "api_field": "pressure"},
[1m[94m137 |[0m         "wind_speed": {"unit": "m/s", "conversion": "divide by 100", "api_field": "wind_speed"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m136[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m134 |[0m     units_info = {
[1m[94m135 |[0m         "air_temperature": {"unit": "celsius", "conversion": "divide by 100", "api_field": "air_temp"},
[1m[94m136 |[0m         "pressure": {"unit": "hectopascals", "conversion": "divide by 10", "api_field": "pressure"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m137 |[0m         "wind_speed": {"unit": "m/s", "conversion": "divide by 100", "api_field": "wind_speed"},
[1m[94m138 |[0m         "wind_direction": {"unit": "degrees", "conversion": "as-is", "api_field": "wind_dir"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m137[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m135 |[0m         "air_temperature": {"unit": "celsius", "conversion": "divide by 100", "api_field": "air_temp"},
[1m[94m136 |[0m         "pressure": {"unit": "hectopascals", "conversion": "divide by 10", "api_field": "pressure"},
[1m[94m137 |[0m         "wind_speed": {"unit": "m/s", "conversion": "divide by 100", "api_field": "wind_speed"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m138 |[0m         "wind_direction": {"unit": "degrees", "conversion": "as-is", "api_field": "wind_dir"},
[1m[94m139 |[0m         "precipitation_chance": {"unit": "percent", "conversion": "divide by 100", "api_field": "precip_chance"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m138[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m136 |[0m         "pressure": {"unit": "hectopascals", "conversion": "divide by 10", "api_field": "pressure"},
[1m[94m137 |[0m         "wind_speed": {"unit": "m/s", "conversion": "divide by 100", "api_field": "wind_speed"},
[1m[94m138 |[0m         "wind_direction": {"unit": "degrees", "conversion": "as-is", "api_field": "wind_dir"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m139 |[0m         "precipitation_chance": {"unit": "percent", "conversion": "divide by 100", "api_field": "precip_chance"},
[1m[94m140 |[0m         "precipitation_amount": {"unit": "mm/hour", "conversion": "divide by 10", "api_field": "precip_amount"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m139[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m137 |[0m         "wind_speed": {"unit": "m/s", "conversion": "divide by 100", "api_field": "wind_speed"},
[1m[94m138 |[0m         "wind_direction": {"unit": "degrees", "conversion": "as-is", "api_field": "wind_dir"},
[1m[94m139 |[0m         "precipitation_chance": {"unit": "percent", "conversion": "divide by 100", "api_field": "precip_chance"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m140 |[0m         "precipitation_amount": {"unit": "mm/hour", "conversion": "divide by 10", "api_field": "precip_amount"},
[1m[94m141 |[0m         "cloud_cover": {"unit": "percent", "conversion": "divide by 10", "api_field": "cloud_cover"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m140[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (112 > 88)
    [1m[94m|[0m
[1m[94m138 |[0m         "wind_direction": {"unit": "degrees", "conversion": "as-is", "api_field": "wind_dir"},
[1m[94m139 |[0m         "precipitation_chance": {"unit": "percent", "conversion": "divide by 100", "api_field": "precip_chance"},
[1m[94m140 |[0m         "precipitation_amount": {"unit": "mm/hour", "conversion": "divide by 10", "api_field": "precip_amount"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m141 |[0m         "cloud_cover": {"unit": "percent", "conversion": "divide by 10", "api_field": "cloud_cover"},
[1m[94m142 |[0m         "relative_humidity": {"unit": "percent", "conversion": "divide by 100", "api_field": "rel_humidity"},
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m141[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m139 |[0m         "precipitation_chance": {"unit": "percent", "conversion": "divide by 100", "api_field": "precip_chance"},
[1m[94m140 |[0m         "precipitation_amount": {"unit": "mm/hour", "conversion": "divide by 10", "api_field": "precip_amount"},
[1m[94m141 |[0m         "cloud_cover": {"unit": "percent", "conversion": "divide by 10", "api_field": "cloud_cover"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m142 |[0m         "relative_humidity": {"unit": "percent", "conversion": "divide by 100", "api_field": "rel_humidity"},
[1m[94m143 |[0m     }
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m142[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m140 |[0m         "precipitation_amount": {"unit": "mm/hour", "conversion": "divide by 10", "api_field": "precip_amount"},
[1m[94m141 |[0m         "cloud_cover": {"unit": "percent", "conversion": "divide by 10", "api_field": "cloud_cover"},
[1m[94m142 |[0m         "relative_humidity": {"unit": "percent", "conversion": "divide by 100", "api_field": "rel_humidity"},
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m143 |[0m     }
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m151[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m149 |[0m             if timestamp_str:
[1m[94m150 |[0m                 timestamp = datetime.fromisoformat(timestamp_str.replace("Z", "+00:00"))
[1m[94m151 |[0m                 timestamp = timezone.make_aware(timestamp) if timezone.is_naive(timestamp) else timestamp
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m152 |[0m             else:
[1m[94m153 |[0m                 # Fallback: calculate from time_offset
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m155[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m153 |[0m                 # Fallback: calculate from time_offset
[1m[94m154 |[0m                 time_offset_minutes = forecast_item.get("time_offset", 0)
[1m[94m155 |[0m                 timestamp = time_slot.start_time + timedelta(minutes=time_offset_minutes)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m156 |[0m
[1m[94m157 |[0m             # Convert iRacing units to standard units using official conversion factors
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m171[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m170 |[0m             # Cloud cover: divide by 10 (percent)
[1m[94m171 |[0m             cloud_cover_percent = min(100, max(0, forecast_item.get("cloud_cover", 0) / 10.0))
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m172 |[0m
[1m[94m173 |[0m             # Precipitation chance: divide by 100 (percent)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m174[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m173 |[0m             # Precipitation chance: divide by 100 (percent)
[1m[94m174 |[0m             precip_chance_percent = min(100, forecast_item.get("precip_chance", 0) / 100.0)
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m175 |[0m
[1m[94m176 |[0m             # Precipitation amount: divide by 10 (mm/hour)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m186[36m:[0m17[36m:[0m [1;31mERA001[0m Found commented-out code
    [1m[94m|[0m
[1m[94m184 |[0m                 affects_session=forecast_item.get("affects_session", True),
[1m[94m185 |[0m
[1m[94m186 |[0m                 # Temperature and Pressure (converted)
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m187 |[0m                 air_temperature=air_temp_celsius,
[1m[94m188 |[0m                 pressure=pressure_hpa,
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/iracing/auto_create.py[0m[36m:[0m190[36m:[0m17[36m:[0m [1;31mERA001[0m Found commented-out code
    [1m[94m|[0m
[1m[94m188 |[0m                 pressure=pressure_hpa,
[1m[94m189 |[0m
[1m[94m190 |[0m                 # Wind (converted)
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m191 |[0m                 wind_speed=wind_speed_ms,
[1m[94m192 |[0m                 wind_direction=forecast_item.get("wind_dir", 0),
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/iracing/auto_create.py[0m[36m:[0m194[36m:[0m17[36m:[0m [1;31mERA001[0m Found commented-out code
    [1m[94m|[0m
[1m[94m192 |[0m                 wind_direction=forecast_item.get("wind_dir", 0),
[1m[94m193 |[0m
[1m[94m194 |[0m                 # Precipitation (converted)
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m195 |[0m                 precipitation_chance=int(precip_chance_percent),
[1m[94m196 |[0m                 precipitation_amount=precip_amount,
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/iracing/auto_create.py[0m[36m:[0m199[36m:[0m17[36m:[0m [1;31mERA001[0m Found commented-out code
    [1m[94m|[0m
[1m[94m197 |[0m                 allow_precipitation=forecast_item.get("allow_precip", False),
[1m[94m198 |[0m
[1m[94m199 |[0m                 # Cloud and Humidity (converted)
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m200 |[0m                 cloud_cover=int(cloud_cover_percent),
[1m[94m201 |[0m                 relative_humidity=int(humidity_percent),
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/iracing/auto_create.py[0m[36m:[0m211[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m209 |[0m             created_count += 1
[1m[94m210 |[0m
[1m[94m211 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m212 |[0m             logger.error("Failed to create WeatherForecast from data %s: %s",
[1m[94m213 |[0m                         forecast_item, str(e))
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m212[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m211 |[0m           except Exception as e:
[1m[94m212 |[0m [1m[91m/[0m             logger.error("Failed to create WeatherForecast from data %s: %s",
[1m[94m213 |[0m [1m[91m|[0m                         forecast_item, str(e))
    [1m[94m|[0m [1m[91m|______________________________________________^[0m [1m[91mTRY400[0m
[1m[94m214 |[0m               continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m240[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m239 |[0m         if not isinstance(weather_data, list):
[1m[94m240 |[0m             logger.warning("Weather forecast data is not a list: %s", event.weather_forecast_url)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m241 |[0m             return False
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m249[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m247 |[0m         logger.info("Cached weather forecast data for Event %s (%d records)",
[1m[94m248 |[0m                    event, len(weather_data))
[1m[94m249 |[0m         return True
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m250 |[0m
[1m[94m251 |[0m     except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m251[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m249 |[0m         return True
[1m[94m250 |[0m
[1m[94m251 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m252 |[0m         logger.error("Failed to fetch weather forecast from %s: %s",
[1m[94m253 |[0m                     event.weather_forecast_url, str(e))
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m252[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m251 |[0m       except Exception as e:
[1m[94m252 |[0m [1m[91m/[0m         logger.error("Failed to fetch weather forecast from %s: %s",
[1m[94m253 |[0m [1m[91m|[0m                     event.weather_forecast_url, str(e))
    [1m[94m|[0m [1m[91m|_______________________________________________________^[0m [1m[91mTRY400[0m
[1m[94m254 |[0m           return False
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m257[36m:[0m5[36m:[0m [1;31mC901[0m `auto_create_event_chain_from_results` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m257 |[0m def auto_create_event_chain_from_results(results_data: dict[str, Any], iracing_service: IRacingAPIService) -> tuple[Series, Season, E[1m[94m…[0m
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m258 |[0m     """
[1m[94m259 |[0m     Auto-create the full event chain from results data.
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m257[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (13 > 12)
    [1m[94m|[0m
[1m[94m257 |[0m def auto_create_event_chain_from_results(results_data: dict[str, Any], iracing_service: IRacingAPIService) -> tuple[Series, Season, E[1m[94m…[0m
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m258 |[0m     """
[1m[94m259 |[0m     Auto-create the full event chain from results data.
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m257[36m:[0m5[36m:[0m [1;31mPLR0915[0m Too many statements (58 > 50)
    [1m[94m|[0m
[1m[94m257 |[0m def auto_create_event_chain_from_results(results_data: dict[str, Any], iracing_service: IRacingAPIService) -> tuple[Series, Season, E[1m[94m…[0m
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m258 |[0m     """
[1m[94m259 |[0m     Auto-create the full event chain from results data.
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m257[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (149 > 88)
    [1m[94m|[0m
[1m[94m257 |[0m [1m[94m…[0mdict[str, Any], iracing_service: IRacingAPIService) -> tuple[Series, Season, Event, TimeSlot]:
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m258 |[0m [1m[94m…[0m
[1m[94m259 |[0m [1m[94m…[0m
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m261[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m259 |[0m [1m[94m…[0meate the full event chain from results data.
[1m[94m260 |[0m [1m[94m…[0m
[1m[94m261 |[0m [1m[94m…[0minfo(f"Starting auto-creation with results data: series_id={results_data.get('series_id')}, season_id={results_data.get('season_id')}, subsession_id={results_data.get('subsession_id')}")
    [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m262 |[0m [1m[94m…[0m
[1m[94m263 |[0m [1m[94m…[0mct data from results
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m261[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (197 > 88)
    [1m[94m|[0m
[1m[94m259 |[0m [1m[94m…[0m
[1m[94m260 |[0m [1m[94m…[0m
[1m[94m261 |[0m [1m[94m…[0mdata.get('series_id')}, season_id={results_data.get('season_id')}, subsession_id={results_data.get('subsession_id')}")
    [1m[94m|[0m           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m262 |[0m [1m[94m…[0m
[1m[94m263 |[0m [1m[94m…[0m
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m268[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m267 |[0m     series_id = series_data.get("series_id") or results_data.get("series_id")
[1m[94m268 |[0m     series_name = series_data.get("series_name") or results_data.get("series_name", "Unknown Series")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m269 |[0m     season_id = season_data.get("season_id") or results_data.get("season_id")
[1m[94m270 |[0m     season_name = season_data.get("season_name", f"{series_name} Season")
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m273[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m271 |[0m     race_week_num = results_data.get("race_week_num", 0)
[1m[94m272 |[0m
[1m[94m273 |[0m     logger.info(f"Extracted data: series_id={series_id}, series_name={series_name}, season_id={season_id}, season_name={season_name}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m274 |[0m
[1m[94m275 |[0m     # If season_id is missing, try to fetch it using the utility
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m273[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (134 > 88)
    [1m[94m|[0m
[1m[94m271 |[0m     race_week_num = results_data.get("race_week_num", 0)
[1m[94m272 |[0m
[1m[94m273 |[0m     logger.info(f"Extracted data: series_id={series_id}, series_name={series_name}, season_id={season_id}, season_name={season_name}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m274 |[0m
[1m[94m275 |[0m     # If season_id is missing, try to fetch it using the utility
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m279[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m277 |[0m         season_year = results_data.get("season_year")
[1m[94m278 |[0m         season_quarter = results_data.get("season_quarter")
[1m[94m279 |[0m         logger.info(f"Attempting to fetch season data for series_id={series_id}, year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m280 |[0m         if season_year and season_quarter:
[1m[94m281 |[0m             fetched_season = iracing_service.get_season_by_series_year_quarter(
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m279[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (127 > 88)
    [1m[94m|[0m
[1m[94m277 |[0m         season_year = results_data.get("season_year")
[1m[94m278 |[0m         season_quarter = results_data.get("season_quarter")
[1m[94m279 |[0m         logger.info(f"Attempting to fetch season data for series_id={series_id}, year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m280 |[0m         if season_year and season_quarter:
[1m[94m281 |[0m             fetched_season = iracing_service.get_season_by_series_year_quarter(
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m287[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m285 |[0m             )
[1m[94m286 |[0m             if fetched_season:
[1m[94m287 |[0m                 logger.info(f"Found season data: {fetched_season}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m288 |[0m                 season_id = fetched_season.get("season_id")
[1m[94m289 |[0m                 season_name = fetched_season.get("season_name", season_name)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m291[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m289 |[0m                 season_name = fetched_season.get("season_name", season_name)
[1m[94m290 |[0m             else:
[1m[94m291 |[0m                 logger.error(f"Could not fetch season for series_id={series_id}, year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m292 |[0m         else:
[1m[94m293 |[0m             logger.error(f"Missing year/quarter info to fetch season. year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m291[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (127 > 88)
    [1m[94m|[0m
[1m[94m289 |[0m                 season_name = fetched_season.get("season_name", season_name)
[1m[94m290 |[0m             else:
[1m[94m291 |[0m                 logger.error(f"Could not fetch season for series_id={series_id}, year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m292 |[0m         else:
[1m[94m293 |[0m             logger.error(f"Missing year/quarter info to fetch season. year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m293[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m291 |[0m                 logger.error(f"Could not fetch season for series_id={series_id}, year={season_year}, quarter={season_quarter}")
[1m[94m292 |[0m         else:
[1m[94m293 |[0m             logger.error(f"Missing year/quarter info to fetch season. year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m294 |[0m
[1m[94m295 |[0m     if not season_id:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m293[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (116 > 88)
    [1m[94m|[0m
[1m[94m291 |[0m                 logger.error(f"Could not fetch season for series_id={series_id}, year={season_year}, quarter={season_quarter}")
[1m[94m292 |[0m         else:
[1m[94m293 |[0m             logger.error(f"Missing year/quarter info to fetch season. year={season_year}, quarter={season_quarter}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m294 |[0m
[1m[94m295 |[0m     if not season_id:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m296[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m295 |[0m     if not season_id:
[1m[94m296 |[0m         msg = f"No season_id found or fetched for series_id={series_id} in results_data: {results_data}"
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m297 |[0m         logger.error(msg)
[1m[94m298 |[0m         raise ValueError(msg)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m311[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m309 |[0m         },
[1m[94m310 |[0m     )[0]
[1m[94m311 |[0m     logger.info(f"Created/found Series: {series}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m312 |[0m
[1m[94m313 |[0m     # Create Season
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m321[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m319 |[0m         },
[1m[94m320 |[0m     )[0]
[1m[94m321 |[0m     logger.info(f"Created/found Season: {season}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m322 |[0m
[1m[94m323 |[0m     # 3. Find SimLayout for track
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m327[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m325 |[0m     sim_layout = find_or_create_sim_layout_from_track_data(track_data, "iracing")
[1m[94m326 |[0m     if not sim_layout:
[1m[94m327 |[0m         raise ValueError(f"Could not find/create SimLayout for track {track_data}")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m328 |[0m
[1m[94m329 |[0m     # Parse start_time string to datetime object
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m327[36m:[0m26[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m325 |[0m     sim_layout = find_or_create_sim_layout_from_track_data(track_data, "iracing")
[1m[94m326 |[0m     if not sim_layout:
[1m[94m327 |[0m         raise ValueError(f"Could not find/create SimLayout for track {track_data}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m328 |[0m
[1m[94m329 |[0m     # Parse start_time string to datetime object
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/auto_create.py[0m[36m:[0m332[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m330 |[0m     start_time_str = results_data.get("start_time")
[1m[94m331 |[0m     if not start_time_str:
[1m[94m332 |[0m         raise ValueError("No start_time in results_data")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m333 |[0m
[1m[94m334 |[0m     # Parse the datetime string (assuming ISO format like '2025-06-07T12:00:00Z')
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m332[36m:[0m26[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m330 |[0m     start_time_str = results_data.get("start_time")
[1m[94m331 |[0m     if not start_time_str:
[1m[94m332 |[0m         raise ValueError("No start_time in results_data")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m333 |[0m
[1m[94m334 |[0m     # Parse the datetime string (assuming ISO format like '2025-06-07T12:00:00Z')
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/iracing/auto_create.py[0m[36m:[0m337[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m335 |[0m     try:
[1m[94m336 |[0m         start_time = datetime.fromisoformat(start_time_str.replace("Z", "+00:00"))
[1m[94m337 |[0m         start_time = timezone.make_aware(start_time) if timezone.is_naive(start_time) else start_time
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m339[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m337 |[0m         start_time = timezone.make_aware(start_time) if timezone.is_naive(start_time) else start_time
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m340 |[0m         raise ValueError(f"Invalid start_time format: {start_time_str}")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m339[36m:[0m22[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m337 |[0m         start_time = timezone.make_aware(start_time) if timezone.is_naive(start_time) else start_time
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
    [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m340 |[0m         raise ValueError(f"Invalid start_time format: {start_time_str}")
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m340[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
[1m[94m340 |[0m         raise ValueError(f"Invalid start_time format: {start_time_str}")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m341 |[0m
[1m[94m342 |[0m     # 4. Get or create Event for this round
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m340[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
[1m[94m340 |[0m         raise ValueError(f"Invalid start_time format: {start_time_str}")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m341 |[0m
[1m[94m342 |[0m     # 4. Get or create Event for this round
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m340[36m:[0m26[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m338 |[0m     except ValueError as e:
[1m[94m339 |[0m         logger.error(f"Failed to parse start_time '{start_time_str}': {e}")
[1m[94m340 |[0m         raise ValueError(f"Invalid start_time format: {start_time_str}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m341 |[0m
[1m[94m342 |[0m     # 4. Get or create Event for this round
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/auto_create.py[0m[36m:[0m377[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m375 |[0m         # Create weather forecasts if URL available in weather data
[1m[94m376 |[0m         weather_url = None
[1m[94m377 |[0m         if results_data.get("weather", {}) and isinstance(results_data["weather"], dict):
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m378 |[0m             weather_url = results_data["weather"].get("weather_url")
[1m[94m379 |[0m         if weather_url:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m380[36m:[0m41[36m:[0m [1;31mF821[0m Undefined name `create_weather_forecasts_from_url`
    [1m[94m|[0m
[1m[94m378 |[0m             weather_url = results_data["weather"].get("weather_url")
[1m[94m379 |[0m         if weather_url:
[1m[94m380 |[0m             weather_forecasts_created = create_weather_forecasts_from_url(weather_url, time_slot)
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m381 |[0m             logger.info("Created %d weather forecast records for TimeSlot %s",
[1m[94m382 |[0m                        weather_forecasts_created, time_slot.id)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m380[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m378 |[0m             weather_url = results_data["weather"].get("weather_url")
[1m[94m379 |[0m         if weather_url:
[1m[94m380 |[0m             weather_forecasts_created = create_weather_forecasts_from_url(weather_url, time_slot)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m381 |[0m             logger.info("Created %d weather forecast records for TimeSlot %s",
[1m[94m382 |[0m                        weather_forecasts_created, time_slot.id)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m387[36m:[0m5[36m:[0m [1;31mC901[0m `process_results_participants` is too complex (16 > 10)
    [1m[94m|[0m
[1m[94m387 |[0m def process_results_participants(
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m388 |[0m     results_data: dict,
[1m[94m389 |[0m     simulator: Simulator,
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m387[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (16 > 12)
    [1m[94m|[0m
[1m[94m387 |[0m def process_results_participants(
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m388 |[0m     results_data: dict,
[1m[94m389 |[0m     simulator: Simulator,
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m399[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m398 |[0m     # Debug: Log the structure of results_data
[1m[94m399 |[0m     logger.info(f"Processing participants from results_data keys: {list(results_data.keys())}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m400 |[0m
[1m[94m401 |[0m     # Process individual drivers
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m399[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m398 |[0m     # Debug: Log the structure of results_data
[1m[94m399 |[0m     logger.info(f"Processing participants from results_data keys: {list(results_data.keys())}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m400 |[0m
[1m[94m401 |[0m     # Process individual drivers
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m403[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m401 |[0m     # Process individual drivers
[1m[94m402 |[0m     if "session_results" in results_data:
[1m[94m403 |[0m         logger.info(f"Found session_results with {len(results_data['session_results'])} entries")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m404 |[0m         for result in results_data["session_results"]:
[1m[94m405 |[0m             if "cust_id" in result:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m403[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m401 |[0m     # Process individual drivers
[1m[94m402 |[0m     if "session_results" in results_data:
[1m[94m403 |[0m         logger.info(f"Found session_results with {len(results_data['session_results'])} entries")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m404 |[0m         for result in results_data["session_results"]:
[1m[94m405 |[0m             if "cust_id" in result:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m410[36m:[0m36[36m:[0m [1;31mSLF001[0m Private member accessed: `_state`
    [1m[94m|[0m
[1m[94m408 |[0m                     result, simulator,
[1m[94m409 |[0m                 )
[1m[94m410 |[0m                 if sim_profile and sim_profile._state.adding:  # Was just created
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m411 |[0m                     created_counts["sim_profiles"] += 1
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m419[36m:[0m40[36m:[0m [1;31mSLF001[0m Private member accessed: `_state`
    [1m[94m|[0m
[1m[94m417 |[0m                         driver, simulator,
[1m[94m418 |[0m                     )
[1m[94m419 |[0m                     if sim_profile and sim_profile._state.adding:
    [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m420 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m421 |[0m     else:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m422[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (115 > 88)
    [1m[94m|[0m
[1m[94m420 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m421 |[0m     else:
[1m[94m422 |[0m         logger.warning("No 'session_results' found in results_data. Available keys: %s", list(results_data.keys()))
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m423 |[0m         # Try alternative structures
[1m[94m424 |[0m         if "drivers" in results_data:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m425[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m423 |[0m         # Try alternative structures
[1m[94m424 |[0m         if "drivers" in results_data:
[1m[94m425 |[0m             logger.info(f"Found 'drivers' with {len(results_data['drivers'])} entries")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m426 |[0m             for driver in results_data["drivers"]:
[1m[94m427 |[0m                 if "cust_id" in driver:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m431[36m:[0m40[36m:[0m [1;31mSLF001[0m Private member accessed: `_state`
    [1m[94m|[0m
[1m[94m429 |[0m                         driver, simulator,
[1m[94m430 |[0m                     )
[1m[94m431 |[0m                     if sim_profile and sim_profile._state.adding:
    [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m432 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m433 |[0m         elif "results" in results_data:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m434[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m432 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m433 |[0m         elif "results" in results_data:
[1m[94m434 |[0m             logger.info(f"Found 'results' with {len(results_data['results'])} entries")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m435 |[0m             for result in results_data["results"]:
[1m[94m436 |[0m                 if "cust_id" in result:
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m440[36m:[0m40[36m:[0m [1;31mSLF001[0m Private member accessed: `_state`
    [1m[94m|[0m
[1m[94m438 |[0m                         result, simulator,
[1m[94m439 |[0m                     )
[1m[94m440 |[0m                     if sim_profile and sim_profile._state.adding:
    [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m441 |[0m                         created_counts["sim_profiles"] += 1
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m443[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m441 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m442 |[0m
[1m[94m443 |[0m     logger.info(f"Created {created_counts['sim_profiles']} SimProfiles from results data")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m444 |[0m     logger.info("=== FINISHED process_results_participants ===")
[1m[94m445 |[0m     return created_counts
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m443[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m441 |[0m                         created_counts["sim_profiles"] += 1
[1m[94m442 |[0m
[1m[94m443 |[0m     logger.info(f"Created {created_counts['sim_profiles']} SimProfiles from results data")
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m444 |[0m     logger.info("=== FINISHED process_results_participants ===")
[1m[94m445 |[0m     return created_counts
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m457[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m455 |[0m         iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m456 |[0m     except Simulator.DoesNotExist:
[1m[94m457 |[0m         logger.error("iRacing simulator not found in database")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m458 |[0m         return {"error": "iRacing simulator not found"}
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m463[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m461 |[0m     try:
[1m[94m462 |[0m         recent_races = iracing_service.member_recent_races(cust_id=cust_id)
[1m[94m463 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m464 |[0m         logger.error("Failed to fetch recent races for cust_id %s: %s", cust_id, str(e))
[1m[94m465 |[0m         return {"error": f"Failed to fetch recent races: {e!s}"}
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m464[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m462 |[0m         recent_races = iracing_service.member_recent_races(cust_id=cust_id)
[1m[94m463 |[0m     except Exception as e:
[1m[94m464 |[0m         logger.error("Failed to fetch recent races for cust_id %s: %s", cust_id, str(e))
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m465 |[0m         return {"error": f"Failed to fetch recent races: {e!s}"}
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/auto_create.py[0m[36m:[0m506[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m504 |[0m                 )
[1m[94m505 |[0m                 # 5. Process all drivers/teams in the results
[1m[94m506 |[0m                 logger.info(f"Calling process_results_participants for subsession {subsession_id}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m507 |[0m                 driver_counts = process_results_participants(
[1m[94m508 |[0m                     detailed_results, iracing_simulator,
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m506[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m504 |[0m                 )
[1m[94m505 |[0m                 # 5. Process all drivers/teams in the results
[1m[94m506 |[0m                 logger.info(f"Calling process_results_participants for subsession {subsession_id}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m507 |[0m                 driver_counts = process_results_participants(
[1m[94m508 |[0m                     detailed_results, iracing_simulator,
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m510[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m508 |[0m                     detailed_results, iracing_simulator,
[1m[94m509 |[0m                 )
[1m[94m510 |[0m                 logger.info(f"process_results_participants returned: {driver_counts}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m511 |[0m                 # Update counts
[1m[94m512 |[0m                 for key, value in {**driver_counts}.items():
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m515[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m513 |[0m                     created_counts[key] += value
[1m[94m514 |[0m                 processed_races += 1
[1m[94m515 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m516 |[0m                 error_msg = f"Failed to process subsession {subsession_id}: {e!s}"
[1m[94m517 |[0m                 logger.error(error_msg)
    [1m[94m|[0m

[1msimlane/iracing/auto_create.py[0m[36m:[0m517[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m515 |[0m             except Exception as e:
[1m[94m516 |[0m                 error_msg = f"Failed to process subsession {subsession_id}: {e!s}"
[1m[94m517 |[0m                 logger.error(error_msg)
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m518 |[0m                 errors.append(error_msg)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m23[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
   [1m[94m|[0m
[1m[94m21 |[0m         """
[1m[94m22 |[0m         Returns an IRacingAPIClient with a persistent session for the system account.
[1m[94m23 |[0m         Restores session cookies from cache if available and valid, otherwise authenticates and caches.
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m24 |[0m         """
[1m[94m25 |[0m         if not settings.IRACING_USERNAME or not settings.IRACING_PASSWORD:
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m37[36m:[0m47[36m:[0m [1;31mS301[0m `pickle` and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue
   [1m[94m|[0m
[1m[94m35 |[0m         if session_data:
[1m[94m36 |[0m             try:
[1m[94m37 |[0m                 client.session.cookies.update(pickle.loads(session_data))
   [1m[94m|[0m                                               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS301[0m
[1m[94m38 |[0m                 client.authenticated = True
[1m[94m39 |[0m                 # Validate session
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m42[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m40 |[0m                 try:
[1m[94m41 |[0m                     client.member_info()
[1m[94m42 |[0m                     logger.info("iRacing session restored and validated from cache", extra={
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m43 |[0m                         "auth_type": "system",
[1m[94m44 |[0m                         "cache_hit": True,
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m47[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m45 |[0m                     })
[1m[94m46 |[0m                     restored = True
[1m[94m47 |[0m                 except Exception:
   [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m48 |[0m                     logger.warning("Cached session invalid, re-authenticating")
[1m[94m49 |[0m                     cache.delete(cls.CACHE_KEY)
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m51[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
   [1m[94m|[0m
[1m[94m49 |[0m                     cache.delete(cls.CACHE_KEY)
[1m[94m50 |[0m             except Exception:
[1m[94m51 |[0m                 logger.exception("Failed to restore iRacing session from cache; re-authenticating")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m52 |[0m                 cache.delete(cls.CACHE_KEY)
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m64[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m63 |[0m         # Always cache the latest cookies after login or restore
[1m[94m64 |[0m         cache.set(cls.CACHE_KEY, pickle.dumps(client.session.cookies), cls.CACHE_TIMEOUT)
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m65 |[0m         return client
   [1m[94m|[0m

[1msimlane/iracing/iracing_api_client.py[0m[36m:[0m71[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m69 |[0m         Saves the current session cookies to cache. For future extensibility.
[1m[94m70 |[0m         """
[1m[94m71 |[0m         cache.set(self.CACHE_KEY, pickle.dumps(self.session.cookies), self.CACHE_TIMEOUT)
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m72 |[0m         logger.info("Saved iRacing session cookies to cache")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m49[36m:[0m9[36m:[0m [1;31mC901[0m `handle` is too complex (16 > 10)
   [1m[94m|[0m
[1m[94m47 |[0m         )
[1m[94m48 |[0m
[1m[94m49 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mC901[0m
[1m[94m50 |[0m         """Handle the management command execution."""
   [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m49[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (17 > 12)
   [1m[94m|[0m
[1m[94m47 |[0m         )
[1m[94m48 |[0m
[1m[94m49 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m50 |[0m         """Handle the management command execution."""
   [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m49[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (70 > 50)
   [1m[94m|[0m
[1m[94m47 |[0m         )
[1m[94m48 |[0m
[1m[94m49 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m50 |[0m         """Handle the management command execution."""
   [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m58[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m56 |[0m           # Check if iRacing service is available
[1m[94m57 |[0m           if not iracing_service.is_available():
[1m[94m58 |[0m               raise CommandError(
   [1m[94m|[0m  [1m[91m___________________^[0m
[1m[94m59 |[0m [1m[91m|[0m                 "iRacing API service is not available. "
[1m[94m60 |[0m [1m[91m|[0m                 "Please check your iRacing credentials in settings.",
[1m[94m61 |[0m [1m[91m|[0m             )
   [1m[94m|[0m [1m[91m|_____________^[0m [1m[91mTRY003[0m
[1m[94m62 |[0m
[1m[94m63 |[0m           # Get season parameters
   [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m59[36m:[0m17[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m57 |[0m           if not iracing_service.is_available():
[1m[94m58 |[0m               raise CommandError(
[1m[94m59 |[0m [1m[91m/[0m                 "iRacing API service is not available. "
[1m[94m60 |[0m [1m[91m|[0m                 "Please check your iRacing credentials in settings.",
   [1m[94m|[0m [1m[91m|____________________________________________________________________^[0m [1m[91mEM101[0m
[1m[94m61 |[0m               )
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m119[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (117 > 88)
    [1m[94m|[0m
[1m[94m117 |[0m                 try:
[1m[94m118 |[0m                     race_guide_data = iracing_service.get_season_race_guide()
[1m[94m119 |[0m                     self.stdout.write(f"Fetched race guide with {len(race_guide_data.get('sessions', []))} sessions")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m120 |[0m
[1m[94m121 |[0m                     if not dry_run:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m123[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m121 |[0m                     if not dry_run:
[1m[94m122 |[0m                         from simlane.iracing.tasks import _process_race_guide_events
[1m[94m123 |[0m                         created, updated, guide_errors = _process_race_guide_events(race_guide_data)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m124 |[0m                         events_created += created
[1m[94m125 |[0m                         events_updated += updated
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m128[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m126 |[0m                         errors.extend(guide_errors)
[1m[94m127 |[0m
[1m[94m128 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m129 |[0m                     error_msg = f"Error processing race guide: {e!s}"
[1m[94m130 |[0m                     self.stdout.write(self.style.ERROR(error_msg))
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m135[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m133 |[0m                 # Fetch series seasons
[1m[94m134 |[0m                 try:
[1m[94m135 |[0m                     series_seasons_data = iracing_service.get_series_seasons(include_series=True)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m136 |[0m                     self.stdout.write(f"Fetched {len(series_seasons_data)} series seasons")
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m136[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m134 |[0m                 try:
[1m[94m135 |[0m                     series_seasons_data = iracing_service.get_series_seasons(include_series=True)
[1m[94m136 |[0m                     self.stdout.write(f"Fetched {len(series_seasons_data)} series seasons")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m137 |[0m
[1m[94m138 |[0m                     if not dry_run:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m140[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m138 |[0m                     if not dry_run:
[1m[94m139 |[0m                         from simlane.iracing.tasks import _process_series_seasons
[1m[94m140 |[0m                         created, updated, season_errors = _process_series_seasons(series_seasons_data)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m141 |[0m                         events_created += created
[1m[94m142 |[0m                         events_updated += updated
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m145[36m:[0m24[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m143 |[0m                         errors.extend(season_errors)
[1m[94m144 |[0m
[1m[94m145 |[0m                 except Exception as e:
    [1m[94m|[0m                        [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m146 |[0m                     error_msg = f"Error processing series seasons: {e!s}"
[1m[94m147 |[0m                     self.stdout.write(self.style.ERROR(error_msg))
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m177[36m:[0m21[36m:[0m [1;31mTRY301[0m Abstract `raise` to an inner function
    [1m[94m|[0m
[1m[94m175 |[0m                             self.stdout.write(self.style.ERROR(f"  - {error}"))
[1m[94m176 |[0m                 else:
[1m[94m177 |[0m                     raise CommandError(f"Task failed: {result.get('error', 'Unknown error')}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY301[0m
[1m[94m178 |[0m
[1m[94m179 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m177[36m:[0m27[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m175 |[0m                             self.stdout.write(self.style.ERROR(f"  - {error}"))
[1m[94m176 |[0m                 else:
[1m[94m177 |[0m                     raise CommandError(f"Task failed: {result.get('error', 'Unknown error')}")
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m178 |[0m
[1m[94m179 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m177[36m:[0m40[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m175 |[0m                             self.stdout.write(self.style.ERROR(f"  - {error}"))
[1m[94m176 |[0m                 else:
[1m[94m177 |[0m                     raise CommandError(f"Task failed: {result.get('error', 'Unknown error')}")
    [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m178 |[0m
[1m[94m179 |[0m         except Exception as e:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m177[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m175 |[0m                             self.stdout.write(self.style.ERROR(f"  - {error}"))
[1m[94m176 |[0m                 else:
[1m[94m177 |[0m                     raise CommandError(f"Task failed: {result.get('error', 'Unknown error')}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m178 |[0m
[1m[94m179 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m181[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m179 |[0m         except Exception as e:
[1m[94m180 |[0m             logger.exception("Error executing fetch_iracing_events command")
[1m[94m181 |[0m             raise CommandError(f"Failed to fetch iRacing events: {e!s}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m182 |[0m
[1m[94m183 |[0m         self.stdout.write(
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m181[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m179 |[0m         except Exception as e:
[1m[94m180 |[0m             logger.exception("Error executing fetch_iracing_events command")
[1m[94m181 |[0m             raise CommandError(f"Failed to fetch iRacing events: {e!s}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m182 |[0m
[1m[94m183 |[0m         self.stdout.write(
    [1m[94m|[0m

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m181[36m:[0m32[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m179 |[0m         except Exception as e:
[1m[94m180 |[0m             logger.exception("Error executing fetch_iracing_events command")
[1m[94m181 |[0m             raise CommandError(f"Failed to fetch iRacing events: {e!s}")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m182 |[0m
[1m[94m183 |[0m         self.stdout.write(
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/management/commands/fetch_iracing_events.py[0m[36m:[0m189[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m187 |[0m     def show_api_endpoints(self):
[1m[94m188 |[0m         """Display available iRacing API endpoints for events."""
[1m[94m189 |[0m         self.stdout.write(self.style.SUCCESS("\n=== Available iRacing Event API Endpoints ===\n"))
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m190 |[0m
[1m[94m191 |[0m         endpoints_info = [
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_completed_events_check.py[0m[36m:[0m28[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
   [1m[94m|[0m
[1m[94m26 |[0m             # Display results
[1m[94m27 |[0m             self.stdout.write(self.style.SUCCESS("Task completed successfully!"))
[1m[94m28 |[0m             self.stdout.write(f"Completed events found: {result.get('completed_events_found', 0)}")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m29 |[0m             self.stdout.write(f"Queued for processing: {result.get('queued_for_processing', 0)}")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_completed_events_check.py[0m[36m:[0m29[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
   [1m[94m|[0m
[1m[94m27 |[0m             self.stdout.write(self.style.SUCCESS("Task completed successfully!"))
[1m[94m28 |[0m             self.stdout.write(f"Completed events found: {result.get('completed_events_found', 0)}")
[1m[94m29 |[0m             self.stdout.write(f"Queued for processing: {result.get('queued_for_processing', 0)}")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m30 |[0m
[1m[94m31 |[0m             if result.get("errors"):
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m9[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m 8 |[0m class Command(BaseCommand):
[1m[94m 9 |[0m     help = "Fetch and print iRacing results data for a specific subsession or session ID"
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m10 |[0m
[1m[94m11 |[0m     def add_arguments(self, parser):
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m34[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m33 |[0m         if not subsession_id and not session_id:
[1m[94m34 |[0m             self.stdout.write(self.style.ERROR("Please provide either --subsession-id or --session-id"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m35 |[0m             return
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m39[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m37 |[0m         try:
[1m[94m38 |[0m             if subsession_id:
[1m[94m39 |[0m                 self.stdout.write(f"Fetching results for subsession ID: {subsession_id}")
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m40 |[0m                 results = iracing_service.results_get(
[1m[94m41 |[0m                     subsession_id=subsession_id,
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m47[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m45 |[0m                 self.stdout.write(f"Fetching results for session ID: {session_id}")
[1m[94m46 |[0m                 # Note: We might need to implement session_get method
[1m[94m47 |[0m                 self.stdout.write(self.style.ERROR("Session ID fetching not implemented yet"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m48 |[0m                 return
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m56[36m:[0m17[36m:[0m [1;31mT201[0m `print` found
   [1m[94m|[0m
[1m[94m54 |[0m             if pretty:
[1m[94m55 |[0m                 # Pretty print the JSON
[1m[94m56 |[0m                 print(json.dumps(results, indent=2, default=str))
   [1m[94m|[0m                 [1m[91m^^^^^[0m [1m[91mT201[0m
[1m[94m57 |[0m             else:
[1m[94m58 |[0m                 # Print key structure info
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove `print`

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m60[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (123 > 88)
   [1m[94m|[0m
[1m[94m58 |[0m                 # Print key structure info
[1m[94m59 |[0m                 self.stdout.write(f"Response type: {type(results)}")
[1m[94m60 |[0m                 self.stdout.write(f"Top-level keys: {list(results.keys()) if isinstance(results, dict) else 'Not a dict'}")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m61 |[0m
[1m[94m62 |[0m                 if isinstance(results, dict):
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m67[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (144 > 88)
   [1m[94m|[0m
[1m[94m65 |[0m [1m[94m…[0m}: List with {len(value)} items")
[1m[94m66 |[0m [1m[94m…[0m> 0:
[1m[94m67 |[0m [1m[94m…[0m  First item keys: {list(value[0].keys()) if isinstance(value[0], dict) else 'Not a dict'}")
   [1m[94m|[0m                                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m68 |[0m [1m[94m…[0m:
[1m[94m69 |[0m [1m[94m…[0m}: Dict with keys: {list(value.keys())}")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m69[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m67 |[0m [1m[94m…[0m             self.stdout.write(f"  First item keys: {list(value[0].keys()) if isinstance(value[0], dict) else 'Not a dict'}")
[1m[94m68 |[0m [1m[94m…[0m     elif isinstance(value, dict):
[1m[94m69 |[0m [1m[94m…[0m         self.stdout.write(f"{key}: Dict with keys: {list(value.keys())}")
   [1m[94m|[0m                                                                       [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m70 |[0m [1m[94m…[0m     else:
[1m[94m71 |[0m [1m[94m…[0m         self.stdout.write(f"{key}: {type(value).__name__} = {value}")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m71[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m69 |[0m                             self.stdout.write(f"{key}: Dict with keys: {list(value.keys())}")
[1m[94m70 |[0m                         else:
[1m[94m71 |[0m                             self.stdout.write(f"{key}: {type(value).__name__} = {value}")
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m72 |[0m
[1m[94m73 |[0m                 # Also save to file for detailed inspection
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_results.py[0m[36m:[0m75[36m:[0m22[36m:[0m [1;31mPTH123[0m `open()` should be replaced by `Path.open()`
   [1m[94m|[0m
[1m[94m73 |[0m                 # Also save to file for detailed inspection
[1m[94m74 |[0m                 filename = f"results_{subsession_id or session_id}.json"
[1m[94m75 |[0m                 with open(filename, "w") as f:
   [1m[94m|[0m                      [1m[91m^^^^[0m [1m[91mPTH123[0m
[1m[94m76 |[0m                     json.dump(results, f, indent=2, default=str)
[1m[94m77 |[0m                 self.stdout.write(f"Full response saved to: {filename}")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m8[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
   [1m[94m|[0m
[1m[94m 7 |[0m class Command(BaseCommand):
[1m[94m 8 |[0m     help = "Test fetching recent races for the logged-in iRacing user and creating all relevant models"
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m 9 |[0m
[1m[94m10 |[0m     def add_arguments(self, parser):
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m18[36m:[0m9[36m:[0m [1;31mC901[0m `handle` is too complex (20 > 10)
   [1m[94m|[0m
[1m[94m16 |[0m         )
[1m[94m17 |[0m
[1m[94m18 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mC901[0m
[1m[94m19 |[0m         self.stdout.write("=" * 80)
[1m[94m20 |[0m         self.stdout.write(self.style.SUCCESS("Testing iRacing Recent Races Fetch"))
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m18[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (21 > 12)
   [1m[94m|[0m
[1m[94m16 |[0m         )
[1m[94m17 |[0m
[1m[94m18 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m19 |[0m         self.stdout.write("=" * 80)
[1m[94m20 |[0m         self.stdout.write(self.style.SUCCESS("Testing iRacing Recent Races Fetch"))
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m18[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (64 > 50)
   [1m[94m|[0m
[1m[94m16 |[0m         )
[1m[94m17 |[0m
[1m[94m18 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m19 |[0m         self.stdout.write("=" * 80)
[1m[94m20 |[0m         self.stdout.write(self.style.SUCCESS("Testing iRacing Recent Races Fetch"))
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m26[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m24 |[0m         if not iracing_service.is_available():
[1m[94m25 |[0m             self.stdout.write(self.style.ERROR("iRacing API service is not available!"))
[1m[94m26 |[0m             self.stdout.write("Please ensure IRACING_EMAIL and IRACING_PASSWORD are set in environment")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m27 |[0m             return
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m42[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m             if not cust_id:
[1m[94m42 |[0m                 self.stdout.write(self.style.ERROR("No customer ID found in member info"))
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m43 |[0m                 return
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m45[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
   [1m[94m|[0m
[1m[94m43 |[0m                 return
[1m[94m44 |[0m
[1m[94m45 |[0m             self.stdout.write(self.style.SUCCESS(f"✓ Logged in as: {display_name} (Customer ID: {cust_id})"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m46 |[0m
[1m[94m47 |[0m             # Now fetch recent races using the auto_create module
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m48[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m47 |[0m             # Now fetch recent races using the auto_create module
[1m[94m48 |[0m             self.stdout.write(f"\n2. Processing recent races (limit: {options['limit']})...")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m49 |[0m             self.stdout.write("This will create: Series → Season → Event → TimeSlot")
[1m[94m50 |[0m             self.stdout.write("-" * 60)
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m64[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
   [1m[94m|[0m
[1m[94m63 |[0m             if processed_races == 0:
[1m[94m64 |[0m                 self.stdout.write(self.style.ERROR("No races were processed. See errors below."))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m65 |[0m             elif errors:
[1m[94m66 |[0m                 self.stdout.write(self.style.WARNING(f"Processed {processed_races} races, but encountered {len(errors)} errors."))
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m66[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (130 > 88)
   [1m[94m|[0m
[1m[94m64 |[0m                 self.stdout.write(self.style.ERROR("No races were processed. See errors below."))
[1m[94m65 |[0m             elif errors:
[1m[94m66 |[0m                 self.stdout.write(self.style.WARNING(f"Processed {processed_races} races, but encountered {len(errors)} errors."))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m67 |[0m             else:
[1m[94m68 |[0m                 self.stdout.write(self.style.SUCCESS(f"\n✓ Processed {processed_races} races"))
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m68[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
   [1m[94m|[0m
[1m[94m66 |[0m                 self.stdout.write(self.style.WARNING(f"Processed {processed_races} races, but encountered {len(errors)} errors."))
[1m[94m67 |[0m             else:
[1m[94m68 |[0m                 self.stdout.write(self.style.SUCCESS(f"\n✓ Processed {processed_races} races"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m69 |[0m
[1m[94m70 |[0m             # Show created counts
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m74[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m72 |[0m             for model_type, count in created_counts.items():
[1m[94m73 |[0m                 if count > 0:
[1m[94m74 |[0m                     self.stdout.write(f"   • {model_type}: {self.style.SUCCESS(str(count))}")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m75 |[0m
[1m[94m76 |[0m             # Show any errors
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m78[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m76 |[0m             # Show any errors
[1m[94m77 |[0m             if errors:
[1m[94m78 |[0m                 self.stdout.write(self.style.WARNING(f"\n4. Errors encountered ({len(errors)}):"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m79 |[0m                 for i, error in enumerate(errors[:1]):  # Show first 1 errors
[1m[94m80 |[0m                     self.stdout.write(f"   {i+1}. {"error"}")
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m79[36m:[0m24[36m:[0m [1;31mB007[0m Loop control variable `error` not used within loop body
   [1m[94m|[0m
[1m[94m77 |[0m             if errors:
[1m[94m78 |[0m                 self.stdout.write(self.style.WARNING(f"\n4. Errors encountered ({len(errors)}):"))
[1m[94m79 |[0m                 for i, error in enumerate(errors[:1]):  # Show first 1 errors
   [1m[94m|[0m                        [1m[91m^^^^^[0m [1m[91mB007[0m
[1m[94m80 |[0m                     self.stdout.write(f"   {i+1}. {"error"}")
[1m[94m81 |[0m                 if len(errors) > 1:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Rename unused `error` to `_error`

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m94[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
   [1m[94m|[0m
[1m[94m92 |[0m             recent_time_slots = TimeSlot.objects.filter(
[1m[94m93 |[0m                 external_subsession_id__isnull=False,
[1m[94m94 |[0m             ).select_related("event", "event__series", "event__sim_layout").order_by("-start_time")[:5]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m95 |[0m
[1m[94m96 |[0m             if recent_time_slots:
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m101[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m 99 |[0m                     self.stdout.write(
[1m[94m100 |[0m                         f"   • {time_slot.event.name}\n"
[1m[94m101 |[0m                         f"     Start: {time_slot.start_time.strftime('%Y-%m-%d %H:%M')} | "
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m102 |[0m                         f"     Subsession: {time_slot.external_subsession_id}",
[1m[94m103 |[0m                     )
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m116[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m114 |[0m                     self.stdout.write(
[1m[94m115 |[0m                         f"   • {series.name} (ID: {series.external_series_id})\n"
[1m[94m116 |[0m                         f"     Seasons: {season_count} | Category: {series.category or 'N/A'}",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m117 |[0m                     )
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m130[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m128 |[0m                         f"   • {event.series.name} - Round {event.round_number}\n"
[1m[94m129 |[0m                         f"     Track: {event.sim_layout} | "
[1m[94m130 |[0m                         f"     Weather: {'Cached' if event.weather_forecast_data else 'URL Available'}",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m131 |[0m                     )
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m137[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m135 |[0m                 self.stdout.write(self.style.SUCCESS("Test completed successfully!"))
[1m[94m136 |[0m             else:
[1m[94m137 |[0m                 self.stdout.write(self.style.ERROR("Test did not complete successfully."))
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m138 |[0m
[1m[94m139 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_fetch_user_races.py[0m[36m:[0m139[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m137 |[0m                 self.stdout.write(self.style.ERROR("Test did not complete successfully."))
[1m[94m138 |[0m
[1m[94m139 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m140 |[0m             self.stdout.write(self.style.ERROR(f"\nUnexpected error: {e!s}"))
[1m[94m141 |[0m             import traceback
    [1m[94m|[0m

[1msimlane/iracing/management/commands/test_iracing_session.py[0m[36m:[0m13[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
   [1m[94m|[0m
[1m[94m12 |[0m     def handle(self, *args, **options):
[1m[94m13 |[0m         self.stdout.write(self.style.NOTICE("Initializing IRacingAPIClient from system cache..."))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m14 |[0m         client = IRacingAPIClient.from_system_cache()
[1m[94m15 |[0m         if not client:
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_iracing_session.py[0m[36m:[0m16[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m14 |[0m         client = IRacingAPIClient.from_system_cache()
[1m[94m15 |[0m         if not client:
[1m[94m16 |[0m             self.stdout.write(self.style.ERROR("Failed to initialize IRacingAPIClient."))
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m17 |[0m             return
[1m[94m18 |[0m         try:
   [1m[94m|[0m

[1msimlane/iracing/management/commands/test_iracing_session.py[0m[36m:[0m20[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m18 |[0m         try:
[1m[94m19 |[0m             info = client.member_info()
[1m[94m20 |[0m             self.stdout.write(self.style.SUCCESS("Successfully fetched current member info:"))
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m21 |[0m             self.stdout.write(str(info))
[1m[94m22 |[0m         except Exception as e:
   [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m44[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
   [1m[94m|[0m
[1m[94m43 |[0m             self.client = IRacingAPIClient.from_system_cache()
[1m[94m44 |[0m             logger.info("iRacing API client initialized successfully (via session manager)")
   [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m45 |[0m         except Exception:
[1m[94m46 |[0m             logger.exception("Failed to initialize iRacing API client")
   [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m313[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m311 |[0m         Args:
[1m[94m312 |[0m             start_from: ISO-8601 offset format timestamp. Defaults to current time.
[1m[94m313 |[0m             include_end_after_from: Include sessions that start before 'from' but end after.
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m314 |[0m
[1m[94m315 |[0m         Returns:
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m343[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m342 |[0m         Args:
[1m[94m343 |[0m             event_types: List of event type IDs (2: Practice, 3: Qualify, 4: Time Trial, 5: Race)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m344 |[0m
[1m[94m345 |[0m         Returns:
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m365[36m:[0m9[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m363 |[0m         self,
[1m[94m364 |[0m         series_ids: list[int] | None = None,
[1m[94m365 |[0m         include_series: bool = True,
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m366 |[0m     ) -> list[dict[str, Any]]:
[1m[94m367 |[0m         """
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m365[36m:[0m9[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m363 |[0m         self,
[1m[94m364 |[0m         series_ids: list[int] | None = None,
[1m[94m365 |[0m         include_series: bool = True,
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m366 |[0m     ) -> list[dict[str, Any]]:
[1m[94m367 |[0m         """
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m371[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m370 |[0m         Args:
[1m[94m371 |[0m             series_ids: List of series IDs to filter (optional) - Note: filtering happens client-side
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m372 |[0m             include_series: Whether to include detailed series data (schedules, tracks, etc.)
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m372[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m370 |[0m         Args:
[1m[94m371 |[0m             series_ids: List of series IDs to filter (optional) - Note: filtering happens client-side
[1m[94m372 |[0m             include_series: Whether to include detailed series data (schedules, tracks, etc.)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m373 |[0m
[1m[94m374 |[0m         Returns:
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m381[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m379 |[0m             raise IRacingServiceError(msg)
[1m[94m380 |[0m         try:
[1m[94m381 |[0m             # The iRacing API series_seasons method only accepts include_series parameter
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m382 |[0m             data = self.client.series_seasons(include_series=include_series)
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m386[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m384 |[0m             # Client-side filtering if series_ids provided
[1m[94m385 |[0m             if series_ids:
[1m[94m386 |[0m                 data = [season for season in data if season.get("series_id") in series_ids]
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m387 |[0m
[1m[94m388 |[0m             return data
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m388[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m386 |[0m                 data = [season for season in data if season.get("series_id") in series_ids]
[1m[94m387 |[0m
[1m[94m388 |[0m             return data
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m389 |[0m         except Exception as e:
[1m[94m390 |[0m             logger.exception("Error fetching series seasons")
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m451[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m449 |[0m             raise IRacingServiceError(msg) from e
[1m[94m450 |[0m
[1m[94m451 |[0m     def member_recent_races(self, cust_id: int, category_id: int | None = None) -> dict[str, Any]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m452 |[0m         """
[1m[94m453 |[0m         Get recent races for a member.
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m468[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m466 |[0m             return self.client.stats_member_recent_races(cust_id=cust_id)
[1m[94m467 |[0m         except Exception as e:
[1m[94m468 |[0m             logger.exception("Error fetching member recent races for cust_id %s", cust_id)
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m469 |[0m             msg = f"Failed to fetch member recent races: {e!s}"
[1m[94m470 |[0m             raise IRacingServiceError(msg) from e
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m472[36m:[0m47[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m470 |[0m             raise IRacingServiceError(msg) from e
[1m[94m471 |[0m
[1m[94m472 |[0m     def results_get(self, subsession_id: int, include_licenses: bool = False) -> dict[str, Any]:
    [1m[94m|[0m                                               [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m473 |[0m         """
[1m[94m474 |[0m         Get detailed results for a specific subsession.
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m472[36m:[0m47[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m470 |[0m             raise IRacingServiceError(msg) from e
[1m[94m471 |[0m
[1m[94m472 |[0m     def results_get(self, subsession_id: int, include_licenses: bool = False) -> dict[str, Any]:
    [1m[94m|[0m                                               [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m473 |[0m         """
[1m[94m474 |[0m         Get detailed results for a specific subsession.
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m472[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m470 |[0m             raise IRacingServiceError(msg) from e
[1m[94m471 |[0m
[1m[94m472 |[0m     def results_get(self, subsession_id: int, include_licenses: bool = False) -> dict[str, Any]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m473 |[0m         """
[1m[94m474 |[0m         Get detailed results for a specific subsession.
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m487[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m485 |[0m             raise IRacingServiceError(msg)
[1m[94m486 |[0m         try:
[1m[94m487 |[0m             return self.client.result(subsession_id=subsession_id, include_licenses=include_licenses)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m488 |[0m         except Exception as e:
[1m[94m489 |[0m             logger.exception("Error fetching results for subsession %s", subsession_id)
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m524[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (128 > 88)
    [1m[94m|[0m
[1m[94m522 |[0m             raise IRacingServiceError(msg) from e
[1m[94m523 |[0m
[1m[94m524 |[0m     def get_season_by_series_year_quarter(self, series_id: int, season_year: int, season_quarter: int) -> dict[str, Any] | None:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m525 |[0m         """
[1m[94m526 |[0m         Fetch a season for a given series_id, year, and quarter using the series_seasons API.
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m526[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m524 |[0m     def get_season_by_series_year_quarter(self, series_id: int, season_year: int, season_quarter: int) -> dict[str, Any] | None:
[1m[94m525 |[0m         """
[1m[94m526 |[0m         Fetch a season for a given series_id, year, and quarter using the series_seasons API.
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m527 |[0m         Returns the season dict if found, else None.
[1m[94m528 |[0m         """
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m530[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m528 |[0m         """
[1m[94m529 |[0m         try:
[1m[94m530 |[0m             seasons = self.get_series_seasons(series_ids=[series_id], include_series=True)
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m531 |[0m             # The data is now a list of seasons directly
[1m[94m532 |[0m             for season in seasons:
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m539[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m537 |[0m                 ):
[1m[94m538 |[0m                     return season
[1m[94m539 |[0m             return None
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m540 |[0m         except Exception as e:
[1m[94m541 |[0m             logger.error(
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m540[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m538 |[0m                     return season
[1m[94m539 |[0m             return None
[1m[94m540 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m541 |[0m             logger.error(
[1m[94m542 |[0m                 "Failed to fetch season for series_id=%s, year=%s, quarter=%s: %s",
    [1m[94m|[0m

[1msimlane/iracing/services.py[0m[36m:[0m541[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m539 |[0m               return None
[1m[94m540 |[0m           except Exception as e:
[1m[94m541 |[0m [1m[91m/[0m             logger.error(
[1m[94m542 |[0m [1m[91m|[0m                 "Failed to fetch season for series_id=%s, year=%s, quarter=%s: %s",
[1m[94m543 |[0m [1m[91m|[0m                 series_id, season_year, season_quarter, str(e),
[1m[94m544 |[0m [1m[91m|[0m             )
    [1m[94m|[0m [1m[91m|_____________^[0m [1m[91mTRY400[0m
[1m[94m545 |[0m               return None
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m458[36m:[0m32[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m457 |[0m @shared_task(bind=True, max_retries=3, default_retry_delay=60)
[1m[94m458 |[0m def fetch_series_seasons(self, include_series: bool = False) -> dict[str, Any]:
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m459 |[0m     """
[1m[94m460 |[0m     Fetch all series and seasons data.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m458[36m:[0m32[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m457 |[0m @shared_task(bind=True, max_retries=3, default_retry_delay=60)
[1m[94m458 |[0m def fetch_series_seasons(self, include_series: bool = False) -> dict[str, Any]:
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m459 |[0m     """
[1m[94m460 |[0m     Fetch all series and seasons data.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m503[36m:[0m5[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m501 |[0m     season_year: int | None = None,
[1m[94m502 |[0m     season_quarter: int | None = None,
[1m[94m503 |[0m     sync_to_database: bool = True,
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m504 |[0m ) -> dict[str, Any]:
[1m[94m505 |[0m     """
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m503[36m:[0m5[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m501 |[0m     season_year: int | None = None,
[1m[94m502 |[0m     season_quarter: int | None = None,
[1m[94m503 |[0m     sync_to_database: bool = True,
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m504 |[0m ) -> dict[str, Any]:
[1m[94m505 |[0m     """
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m542[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m540 |[0m         try:
[1m[94m541 |[0m             race_guide_data = iracing_service.get_season_race_guide()
[1m[94m542 |[0m             logger.info("Fetched race guide with %d sessions", len(race_guide_data.get("sessions", [])))
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m543 |[0m
[1m[94m544 |[0m             if sync_to_database:
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m546[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m544 |[0m             if sync_to_database:
[1m[94m545 |[0m                 # Process race guide sessions
[1m[94m546 |[0m                 created, updated, guide_errors = _process_race_guide_events(race_guide_data)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m547 |[0m                 events_created += created
[1m[94m548 |[0m                 events_updated += updated
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m558[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m556 |[0m         # Fetch series seasons for more comprehensive data
[1m[94m557 |[0m         try:
[1m[94m558 |[0m             series_seasons_data = iracing_service.get_series_seasons(include_series=True)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m559 |[0m             logger.info("Fetched %d series seasons", len(series_seasons_data))
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m563[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m561 |[0m             if sync_to_database:
[1m[94m562 |[0m                 # Process series seasons
[1m[94m563 |[0m                 created, updated, season_errors = _process_series_seasons(series_seasons_data)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m564 |[0m                 events_created += created
[1m[94m565 |[0m                 events_updated += updated
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m612[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m612 |[0m def _get_or_create_iracing_series(series_id: int, series_info: dict, iracing_simulator) -> tuple:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m613 |[0m     """
[1m[94m614 |[0m     Robust iRacing-specific Series get_or_create with proper lookup and update logic.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m638[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m637 |[0m     if not series_name:
[1m[94m638 |[0m         raise ValueError(f"No valid series name found for series_id {series_id}")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m639 |[0m
[1m[94m640 |[0m     # Prepare defaults
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m638[36m:[0m26[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m637 |[0m     if not series_name:
[1m[94m638 |[0m         raise ValueError(f"No valid series name found for series_id {series_id}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m639 |[0m
[1m[94m640 |[0m     # Prepare defaults
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/tasks.py[0m[36m:[0m654[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m652 |[0m         "max_team_drivers": series_info.get("max_team_drivers", 1),
[1m[94m653 |[0m         "region_competition": series_info.get("region_competition", True),
[1m[94m654 |[0m         "allowed_car_class_ids": [str(class_id) for class_id in series_info.get("car_class_ids", [])],
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m655 |[0m     }
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m709[36m:[0m20[36m:[0m [1;31mRET504[0m Unnecessary assignment to `preferred_layout` before `return` statement
    [1m[94m|[0m
[1m[94m707 |[0m             ).first() or layouts.first()
[1m[94m708 |[0m
[1m[94m709 |[0m             return preferred_layout
    [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mRET504[0m
[1m[94m710 |[0m
[1m[94m711 |[0m         # Try partial match
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/iracing/tasks.py[0m[36m:[0m720[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m718 |[0m             return layouts.first()
[1m[94m719 |[0m
[1m[94m720 |[0m         return None
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m721 |[0m
[1m[94m722 |[0m     except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m722[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m720 |[0m         return None
[1m[94m721 |[0m
[1m[94m722 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m723 |[0m         logger.warning(f"Error resolving track layout for '{track_name}': {e!s}")
[1m[94m724 |[0m         return None
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m723[36m:[0m24[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m722 |[0m     except Exception as e:
[1m[94m723 |[0m         logger.warning(f"Error resolving track layout for '{track_name}': {e!s}")
    [1m[94m|[0m                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m724 |[0m         return None
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m727[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (118 > 88)
    [1m[94m|[0m
[1m[94m727 |[0m def _get_or_create_iracing_event(lookup_criteria: dict, event_defaults: dict, unique_identifier: str = None) -> tuple:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m728 |[0m     """
[1m[94m729 |[0m     Robust iRacing-specific Event get_or_create with proper lookup and update logic.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m727[36m:[0m98[36m:[0m [1;31mRUF013[0m PEP 484 prohibits implicit `Optional`
    [1m[94m|[0m
[1m[94m727 |[0m def _get_or_create_iracing_event(lookup_criteria: dict, event_defaults: dict, unique_identifier: str = None) -> tuple:
    [1m[94m|[0m                                                                                                  [1m[91m^^^[0m [1m[91mRUF013[0m
[1m[94m728 |[0m     """
[1m[94m729 |[0m     Robust iRacing-specific Event get_or_create with proper lookup and update logic.
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Convert to `T | None`

[1msimlane/iracing/tasks.py[0m[36m:[0m760[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m758 |[0m         event_data = {**lookup_criteria, **event_defaults}
[1m[94m759 |[0m         event = Event.objects.create(**event_data)
[1m[94m760 |[0m         return event, True
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m761 |[0m
[1m[94m762 |[0m     except Exception as e:
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m763[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m762 |[0m     except Exception as e:
[1m[94m763 |[0m         error_msg = f"Error in _get_or_create_iracing_event for {unique_identifier}: {e!s}"
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m764 |[0m         logger.error(error_msg)
[1m[94m765 |[0m         raise
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m764[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m762 |[0m     except Exception as e:
[1m[94m763 |[0m         error_msg = f"Error in _get_or_create_iracing_event for {unique_identifier}: {e!s}"
[1m[94m764 |[0m         logger.error(error_msg)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m765 |[0m         raise
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m768[36m:[0m5[36m:[0m [1;31mC901[0m `_process_race_guide_events` is too complex (11 > 10)
    [1m[94m|[0m
[1m[94m768 |[0m def _process_race_guide_events(race_guide_data: dict) -> tuple[int, int, list[str]]:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m769 |[0m     """
[1m[94m770 |[0m     Process race guide data and create/update Event records.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m768[36m:[0m5[36m:[0m [1;31mPLR0915[0m Too many statements (56 > 50)
    [1m[94m|[0m
[1m[94m768 |[0m def _process_race_guide_events(race_guide_data: dict) -> tuple[int, int, list[str]]:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m769 |[0m     """
[1m[94m770 |[0m     Process race guide data and create/update Event records.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m790[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m788 |[0m     except Simulator.DoesNotExist:
[1m[94m789 |[0m         error_msg = "iRacing simulator not found in database"
[1m[94m790 |[0m         logger.error(error_msg)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m791 |[0m         errors.append(error_msg)
[1m[94m792 |[0m         return events_created, events_updated, errors
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m810[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m808 |[0m             try:
[1m[94m809 |[0m                 event_date = datetime.fromisoformat(start_time.replace("Z", "+00:00"))
[1m[94m810 |[0m                 event_date = timezone.make_aware(event_date) if timezone.is_naive(event_date) else event_date
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m811 |[0m             except (ValueError, AttributeError):
[1m[94m812 |[0m                 logger.warning("Could not parse start_time: %s", start_time)
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m816[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m815 |[0m             # Try to resolve track layout for race guide events
[1m[94m816 |[0m             sim_layout = _resolve_track_layout_for_race_guide(track_name, iracing_simulator)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m817 |[0m
[1m[94m818 |[0m             if not sim_layout:
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m821[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m819 |[0m                 # Skip race guide events without resolvable track info
[1m[94m820 |[0m                 # These are often generic/summary events anyway
[1m[94m821 |[0m                 logger.debug(f"Skipping race guide session {session_id} - no resolvable track layout for '{track_name}'")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m822 |[0m                 continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m821[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (121 > 88)
    [1m[94m|[0m
[1m[94m819 |[0m                 # Skip race guide events without resolvable track info
[1m[94m820 |[0m                 # These are often generic/summary events anyway
[1m[94m821 |[0m                 logger.debug(f"Skipping race guide session {session_id} - no resolvable track layout for '{track_name}'")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m822 |[0m                 continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m825[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m824 |[0m             # Create a unique name for the event
[1m[94m825 |[0m             event_name = f"{series_name} - {track_name}" if series_name and track_name else session_name
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m826 |[0m             if not event_name:
[1m[94m827 |[0m                 event_name = f"iRacing Event {session_id}"
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m836[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m834 |[0m                 "event_date": event_date,
[1m[94m835 |[0m                 "status": EventStatus.SCHEDULED,
[1m[94m836 |[0m                 "description": f"iRacing {series_name} session" if series_name else "iRacing session",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m837 |[0m                 "entry_requirements": {
[1m[94m838 |[0m                     "session_id": session_id,
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m859[36m:[0m36[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m857 |[0m                     event_defaults["series"] = series
[1m[94m858 |[0m                 except Series.DoesNotExist:
[1m[94m859 |[0m                     logger.warning(f"Series {series_id} not found for session {session_id}")
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m860 |[0m
[1m[94m861 |[0m             # Use robust get_or_create
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m859[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m857 |[0m                     event_defaults["series"] = series
[1m[94m858 |[0m                 except Series.DoesNotExist:
[1m[94m859 |[0m                     logger.warning(f"Series {series_id} not found for session {session_id}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m860 |[0m
[1m[94m861 |[0m             # Use robust get_or_create
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m876[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m875 |[0m         except Exception as e:
[1m[94m876 |[0m             error_msg = f"Error processing session {session.get('session_id', 'unknown')}: {e!s}"
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m877 |[0m             logger.exception(error_msg)
[1m[94m878 |[0m             errors.append(error_msg)
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m883[36m:[0m5[36m:[0m [1;31mC901[0m `_process_series_seasons` is too complex (37 > 10)
    [1m[94m|[0m
[1m[94m883 |[0m def _process_series_seasons(series_seasons_data: list) -> tuple[int, int, list[str]]:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m884 |[0m     """
[1m[94m885 |[0m     Process series seasons data and create/update Series and Event records.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m883[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (41 > 12)
    [1m[94m|[0m
[1m[94m883 |[0m def _process_series_seasons(series_seasons_data: list) -> tuple[int, int, list[str]]:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m884 |[0m     """
[1m[94m885 |[0m     Process series seasons data and create/update Series and Event records.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m883[36m:[0m5[36m:[0m [1;31mPLR0915[0m Too many statements (161 > 50)
    [1m[94m|[0m
[1m[94m883 |[0m def _process_series_seasons(series_seasons_data: list) -> tuple[int, int, list[str]]:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m884 |[0m     """
[1m[94m885 |[0m     Process series seasons data and create/update Series and Event records.
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m900[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m898 |[0m     except Simulator.DoesNotExist:
[1m[94m899 |[0m         error_msg = "iRacing simulator not found in database"
[1m[94m900 |[0m         logger.error(error_msg)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m901 |[0m         errors.append(error_msg)
[1m[94m902 |[0m         return events_created, events_updated, errors
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m922[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m920 |[0m                 series_lookup[series_id] = series_info
[1m[94m921 |[0m
[1m[94m922 |[0m         logger.info(f"Loaded {len(series_lookup)} series for lookup")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m923 |[0m     except Exception as e:
[1m[94m924 |[0m         error_msg = f"Failed to fetch series data for lookup: {e!s}"
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m923[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m922 |[0m         logger.info(f"Loaded {len(series_lookup)} series for lookup")
[1m[94m923 |[0m     except Exception as e:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m924 |[0m         error_msg = f"Failed to fetch series data for lookup: {e!s}"
[1m[94m925 |[0m         logger.error(error_msg)
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m925[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m923 |[0m     except Exception as e:
[1m[94m924 |[0m         error_msg = f"Failed to fetch series data for lookup: {e!s}"
[1m[94m925 |[0m         logger.error(error_msg)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m926 |[0m         errors.append(error_msg)
[1m[94m927 |[0m         # Continue processing without series lookup
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m945[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m943 |[0m             if not series_name and season_name:
[1m[94m944 |[0m                 series_name = season_name
[1m[94m945 |[0m                 # Common patterns to clean up: " - 2025 Season", " - Fixed", " - Open", etc.
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m946 |[0m                 import re
[1m[94m947 |[0m                 series_name = re.sub(r"\s*-\s*\d{4}\s*Season.*$", "", series_name)
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m952[36m:[0m32[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m951 |[0m             if not series_name:
[1m[94m952 |[0m                 logger.warning(f"No series name found for series_id {series_id}, skipping")
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m953 |[0m                 continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m952[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m951 |[0m             if not series_name:
[1m[94m952 |[0m                 logger.warning(f"No series name found for series_id {series_id}, skipping")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m953 |[0m                 continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m957[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `multiclass` is assigned to but never used
    [1m[94m|[0m
[1m[94m955 |[0m             # Extract car class and series-level data
[1m[94m956 |[0m             car_class_ids = season_data.get("car_class_ids", [])
[1m[94m957 |[0m             multiclass = season_data.get("multiclass", False)
    [1m[94m|[0m             [1m[91m^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m958 |[0m             fixed_setup = season_data.get("fixed_setup", False)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `multiclass`

[1msimlane/iracing/tasks.py[0m[36m:[0m958[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `fixed_setup` is assigned to but never used
    [1m[94m|[0m
[1m[94m956 |[0m             car_class_ids = season_data.get("car_class_ids", [])
[1m[94m957 |[0m             multiclass = season_data.get("multiclass", False)
[1m[94m958 |[0m             fixed_setup = season_data.get("fixed_setup", False)
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m959 |[0m
[1m[94m960 |[0m             # Convert car_class_ids to strings for consistency
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `fixed_setup`

[1msimlane/iracing/tasks.py[0m[36m:[0m961[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `allowed_car_class_ids` is assigned to but never used
    [1m[94m|[0m
[1m[94m960 |[0m             # Convert car_class_ids to strings for consistency
[1m[94m961 |[0m             allowed_car_class_ids = [str(class_id) for class_id in car_class_ids] if car_class_ids else []
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m962 |[0m
[1m[94m963 |[0m             # Use robust Series get_or_create
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `allowed_car_class_ids`

[1msimlane/iracing/tasks.py[0m[36m:[0m961[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m960 |[0m             # Convert car_class_ids to strings for consistency
[1m[94m961 |[0m             allowed_car_class_ids = [str(class_id) for class_id in car_class_ids] if car_class_ids else []
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m962 |[0m
[1m[94m963 |[0m             # Use robust Series get_or_create
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m976[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m974 |[0m                 # If no schedules, create a general season event (fallback)
[1m[94m975 |[0m                 if season_data.get("active", False):
[1m[94m976 |[0m                     event_name = f"{series_name} - {season_name}" if season_name else series_name
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m977 |[0m
[1m[94m978 |[0m                     # Skip events without track/layout info in this case
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m979[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (117 > 88)
    [1m[94m|[0m
[1m[94m978 |[0m                     # Skip events without track/layout info in this case
[1m[94m979 |[0m                     logger.warning("No schedules found for series %s, skipping detailed event creation", series_name)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m980 |[0m                     continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m991[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m990 |[0m                     if not track_id or not track_name:
[1m[94m991 |[0m                         logger.warning("Missing track info in schedule for series %s", series_name)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m992 |[0m                         continue
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m996[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m994 |[0m                     # Find the corresponding SimLayout
[1m[94m995 |[0m                     try:
[1m[94m996 |[0m                         # Direct lookup by layout_code which contains the track_id from iRacing API
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m997 |[0m                         sim_layout = SimLayout.objects.select_related("sim_track").get(
[1m[94m998 |[0m                             layout_code=str(track_id),
    [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1015[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m1013 |[0m                             if config_name and sim_layouts.exists():
[1m[94m1014 |[0m                                 # Try exact match first
[1m[94m1015 |[0m                                 sim_layout = sim_layouts.filter(name=config_name).first()
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m1016 |[0m
[1m[94m1017 |[0m                                 # Try partial match if exact match fails
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1019[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
     [1m[94m|[0m
[1m[94m1017 |[0m                                 # Try partial match if exact match fails
[1m[94m1018 |[0m                                 if not sim_layout:
[1m[94m1019 |[0m                                     sim_layout = sim_layouts.filter(name__icontains=config_name).first()
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1020 |[0m
[1m[94m1021 |[0m                             # Fallback to first layout if no match
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1025[36m:[0m37[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1023 |[0m   [1m[94m…[0m                     sim_layout = sim_layouts.first()
[1m[94m1024 |[0m   [1m[94m…[0m                     logger.warning(
[1m[94m1025 |[0m [1m[91m/[0m [1m[94m…[0m                         f"Could not find exact layout match for {config_name} at {track_name}, "
[1m[94m1026 |[0m [1m[91m|[0m [1m[94m…[0m                         f"using {sim_layout.name}",
     [1m[94m|[0m [1m[91m|____________________________________________________^[0m [1m[91mG004[0m
[1m[94m1027 |[0m   [1m[94m…[0m                     )
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1025[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
     [1m[94m|[0m
[1m[94m1023 |[0m [1m[94m…[0m                     sim_layout = sim_layouts.first()
[1m[94m1024 |[0m [1m[94m…[0m                     logger.warning(
[1m[94m1025 |[0m [1m[94m…[0m                         f"Could not find exact layout match for {config_name} at {track_name}, "
     [1m[94m|[0m                                                                               [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1026 |[0m [1m[94m…[0m                         f"using {sim_layout.name}",
[1m[94m1027 |[0m [1m[94m…[0m                     )
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1030[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (147 > 88)
     [1m[94m|[0m
[1m[94m1029 |[0m [1m[94m…[0m
[1m[94m1030 |[0m [1m[94m…[0m not found for track {track_name} (ID: {track_id}). Track data may need to be synced first."
     [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1031 |[0m [1m[94m…[0mg)
[1m[94m1032 |[0m [1m[94m…[0m)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1035[36m:[0m32[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1033 |[0m                                 continue
[1m[94m1034 |[0m
[1m[94m1035 |[0m                         except Exception as e:
     [1m[94m|[0m                                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1036 |[0m                             error_msg = f"Error finding SimLayout for track {track_name} (ID: {track_id}): {e!s}"
[1m[94m1037 |[0m                             logger.warning(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1036[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
     [1m[94m|[0m
[1m[94m1035 |[0m                         except Exception as e:
[1m[94m1036 |[0m                             error_msg = f"Error finding SimLayout for track {track_name} (ID: {track_id}): {e!s}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1037 |[0m                             logger.warning(error_msg)
[1m[94m1038 |[0m                             errors.append(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1043[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1041 |[0m                     # Create event name with track and layout info
[1m[94m1042 |[0m                     round_number = schedule.get("race_week_num", "")
[1m[94m1043 |[0m                     week_suffix = f" - Round {round_number}" if round_number is not None else ""
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1044 |[0m                     layout_suffix = f" ({config_name})" if config_name and config_name != track_name else ""
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1044[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
     [1m[94m|[0m
[1m[94m1042 |[0m                     round_number = schedule.get("race_week_num", "")
[1m[94m1043 |[0m                     week_suffix = f" - Round {round_number}" if round_number is not None else ""
[1m[94m1044 |[0m                     layout_suffix = f" ({config_name})" if config_name and config_name != track_name else ""
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1045 |[0m
[1m[94m1046 |[0m                     event_name = f"{series_name} - {track_name}{layout_suffix}{week_suffix}"
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1046[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1044 |[0m                     layout_suffix = f" ({config_name})" if config_name and config_name != track_name else ""
[1m[94m1045 |[0m
[1m[94m1046 |[0m                     event_name = f"{series_name} - {track_name}{layout_suffix}{week_suffix}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1047 |[0m
[1m[94m1048 |[0m                     # Create unique identifier for this specific event round
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1049[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
     [1m[94m|[0m
[1m[94m1048 |[0m                     # Create unique identifier for this specific event round
[1m[94m1049 |[0m                     unique_key = f"{series_id}_{season_data.get('season_id', '')}_{round_number}_{track_id}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1050 |[0m
[1m[94m1051 |[0m                     # Get start and end dates for the event round
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1053[36m:[0m21[36m:[0m [1;31mF841[0m Local variable `week_end_time` is assigned to but never used
     [1m[94m|[0m
[1m[94m1051 |[0m                     # Get start and end dates for the event round
[1m[94m1052 |[0m                     start_date = schedule.get("start_date")
[1m[94m1053 |[0m                     week_end_time = schedule.get("week_end_time")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m1054 |[0m
[1m[94m1055 |[0m                     event_date = None
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `week_end_time`

[1msimlane/iracing/tasks.py[0m[36m:[0m1058[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1056 |[0m                     if start_date:
[1m[94m1057 |[0m                         try:
[1m[94m1058 |[0m                             event_date = datetime.fromisoformat(start_date.replace("Z", "+00:00"))
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1059 |[0m                             event_date = timezone.make_aware(event_date) if timezone.is_naive(event_date) else event_date
[1m[94m1060 |[0m                         except (ValueError, AttributeError):
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1059[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (121 > 88)
     [1m[94m|[0m
[1m[94m1057 |[0m                         try:
[1m[94m1058 |[0m                             event_date = datetime.fromisoformat(start_date.replace("Z", "+00:00"))
[1m[94m1059 |[0m                             event_date = timezone.make_aware(event_date) if timezone.is_naive(event_date) else event_date
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1060 |[0m                         except (ValueError, AttributeError):
[1m[94m1061 |[0m                             logger.warning("Could not parse start_date: %s", start_date)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1070[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1068 |[0m                         "round_number": round_number,
[1m[94m1069 |[0m                         "config_name": config_name,
[1m[94m1070 |[0m                         "schedule_description": season_data.get("schedule_description", ""),
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1071 |[0m                         "category": track_info.get("category", ""),
[1m[94m1072 |[0m                         "race_lap_limit": schedule.get("race_lap_limit"),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1088[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
     [1m[94m|[0m
[1m[94m1086 |[0m                         "event_date": event_date,
[1m[94m1087 |[0m                         "status": EventStatus.SCHEDULED,
[1m[94m1088 |[0m                         "description": f"iRacing {series_name} - Round {round_number} at {track_name} ({config_name})",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1089 |[0m                         "entry_requirements": schedule_metadata,
[1m[94m1090 |[0m                         "max_entries": schedule.get("max_entries"),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1091[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1089 |[0m                         "entry_requirements": schedule_metadata,
[1m[94m1090 |[0m                         "max_entries": schedule.get("max_entries"),
[1m[94m1091 |[0m                         "weather": schedule.get("weather") if schedule.get("weather") else None,
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1092 |[0m                     }
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1119[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m1117 |[0m                     try:
[1m[94m1118 |[0m                         # Get car class IDs (from event or fall back to series)
[1m[94m1119 |[0m                         car_class_ids = event.allowed_car_class_ids or series.allowed_car_class_ids
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1120 |[0m
[1m[94m1121 |[0m                         if car_class_ids:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1136[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m1134 |[0m [1m[94m…[0m                     # Determine class name
[1m[94m1135 |[0m [1m[94m…[0m                     if len(car_class_ids) == 1:
[1m[94m1136 |[0m [1m[94m…[0m                         # Single class - use car class name or "Main Class"
     [1m[94m|[0m                                                                           [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m1137 |[0m [1m[94m…[0m                         class_name = car_class.name if car_class.name else "Main Class"
[1m[94m1138 |[0m [1m[94m…[0m                     else:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1137[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
     [1m[94m|[0m
[1m[94m1135 |[0m [1m[94m…[0m                     if len(car_class_ids) == 1:
[1m[94m1136 |[0m [1m[94m…[0m                         # Single class - use car class name or "Main Class"
[1m[94m1137 |[0m [1m[94m…[0m                         class_name = car_class.name if car_class.name else "Main Class"
     [1m[94m|[0m                                                                           [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1138 |[0m [1m[94m…[0m                     else:
[1m[94m1139 |[0m [1m[94m…[0m                         # Multi-class - use car class name with fallback
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1140[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
     [1m[94m|[0m
[1m[94m1138 |[0m                                     else:
[1m[94m1139 |[0m                                         # Multi-class - use car class name with fallback
[1m[94m1140 |[0m                                         class_name = car_class.name if car_class.name else f"Class {i+1}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1141 |[0m
[1m[94m1142 |[0m                                     event_class, ec_created = EventClass.objects.get_or_create(
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1142[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
     [1m[94m|[0m
[1m[94m1140 |[0m                                         class_name = car_class.name if car_class.name else f"Class {i+1}"
[1m[94m1141 |[0m
[1m[94m1142 |[0m                                     event_class, ec_created = EventClass.objects.get_or_create(
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m1143 |[0m                                         event=event,
[1m[94m1144 |[0m                                         car_class=car_class,
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1147[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1145 |[0m [1m[94m…[0m                     defaults={
[1m[94m1146 |[0m [1m[94m…[0m                         "name": class_name,
[1m[94m1147 |[0m [1m[94m…[0m                         "class_order": i,  # 0=fastest, 1=second fastest, etc.
     [1m[94m|[0m                                                                       [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1148 |[0m [1m[94m…[0m                         "inherit_series_restrictions": True,
[1m[94m1149 |[0m [1m[94m…[0m                     },
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1153[36m:[0m54[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1152 |[0m [1m[94m…[0m                     if ec_created:
[1m[94m1153 |[0m [1m[94m…[0m                         logger.debug(f"Created EventClass: {class_name} for {event_name}")
     [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1154 |[0m [1m[94m…[0m                     else:
[1m[94m1155 |[0m [1m[94m…[0m                         # Update existing EventClass
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1153[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
     [1m[94m|[0m
[1m[94m1152 |[0m [1m[94m…[0m                     if ec_created:
[1m[94m1153 |[0m [1m[94m…[0m                         logger.debug(f"Created EventClass: {class_name} for {event_name}")
     [1m[94m|[0m                                                                           [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1154 |[0m [1m[94m…[0m                     else:
[1m[94m1155 |[0m [1m[94m…[0m                         # Update existing EventClass
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1159[36m:[0m54[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1157 |[0m                                         event_class.class_order = i
[1m[94m1158 |[0m                                         event_class.save()
[1m[94m1159 |[0m                                         logger.debug(f"Updated EventClass: {class_name} for {event_name}")
     [1m[94m|[0m                                                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1160 |[0m
[1m[94m1161 |[0m                                 except CarClass.DoesNotExist:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1159[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
     [1m[94m|[0m
[1m[94m1157 |[0m                                         event_class.class_order = i
[1m[94m1158 |[0m                                         event_class.save()
[1m[94m1159 |[0m                                         logger.debug(f"Updated EventClass: {class_name} for {event_name}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1160 |[0m
[1m[94m1161 |[0m                                 except CarClass.DoesNotExist:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1162[36m:[0m52[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1161 |[0m                                 except CarClass.DoesNotExist:
[1m[94m1162 |[0m                                     logger.warning(f"CarClass with sim_api_id {class_id} not found for event {event_name}")
     [1m[94m|[0m                                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1163 |[0m                                     continue
[1m[94m1164 |[0m                         else:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1162[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (123 > 88)
     [1m[94m|[0m
[1m[94m1161 |[0m                                 except CarClass.DoesNotExist:
[1m[94m1162 |[0m                                     logger.warning(f"CarClass with sim_api_id {class_id} not found for event {event_name}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1163 |[0m                                     continue
[1m[94m1164 |[0m                         else:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1165[36m:[0m42[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1163 |[0m                                     continue
[1m[94m1164 |[0m                         else:
[1m[94m1165 |[0m                             logger.debug(f"No car class IDs found for event {event_name}")
     [1m[94m|[0m                                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1166 |[0m
[1m[94m1167 |[0m                     except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1165[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1163 |[0m                                     continue
[1m[94m1164 |[0m                         else:
[1m[94m1165 |[0m                             logger.debug(f"No car class IDs found for event {event_name}")
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1166 |[0m
[1m[94m1167 |[0m                     except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1167[36m:[0m28[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1165 |[0m                             logger.debug(f"No car class IDs found for event {event_name}")
[1m[94m1166 |[0m
[1m[94m1167 |[0m                     except Exception as e:
     [1m[94m|[0m                            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1168 |[0m                         logger.error(f"Error creating EventClass instances for {event_name}: {e!s}")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1168[36m:[0m25[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1167 |[0m                     except Exception as e:
[1m[94m1168 |[0m                         logger.error(f"Error creating EventClass instances for {event_name}: {e!s}")
     [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1169 |[0m
[1m[94m1170 |[0m                     # --- Ensure Season & Event exist for every schedule ---
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1168[36m:[0m38[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1167 |[0m                     except Exception as e:
[1m[94m1168 |[0m                         logger.error(f"Error creating EventClass instances for {event_name}: {e!s}")
     [1m[94m|[0m                                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1169 |[0m
[1m[94m1170 |[0m                     # --- Ensure Season & Event exist for every schedule ---
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1168[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
     [1m[94m|[0m
[1m[94m1167 |[0m                     except Exception as e:
[1m[94m1168 |[0m                         logger.error(f"Error creating EventClass instances for {event_name}: {e!s}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1169 |[0m
[1m[94m1170 |[0m                     # --- Ensure Season & Event exist for every schedule ---
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1184[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1182 |[0m [1m[94m…[0m     rw_defaults = {
[1m[94m1183 |[0m [1m[94m…[0m         "sim_layout": sim_layout,
[1m[94m1184 |[0m [1m[94m…[0m         "start_date": event_date.date() if event_date else timezone.now().date(),
     [1m[94m|[0m                                                                           [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1185 |[0m [1m[94m…[0m         "end_date": datetime.fromisoformat(schedule.get("week_end_time", "").replace("Z", "+00:00")) if schedule.get("week_end_tim[1m[94m…[0m
[1m[94m1186 |[0m [1m[94m…[0m         "category": track_info.get("category", ""),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1185[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (256 > 88)
     [1m[94m|[0m
[1m[94m1183 |[0m [1m[94m…[0m
[1m[94m1184 |[0m [1m[94m…[0m.now().date(),
[1m[94m1185 |[0m [1m[94m…[0mime", "").replace("Z", "+00:00")) if schedule.get("week_end_time") else (event_date.date() + timedelta(days=7) if event_date else timezone.now().date() + timedelta(days=7)),
     [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1186 |[0m [1m[94m…[0m
[1m[94m1187 |[0m [1m[94m…[0mollisions", False),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1187[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
     [1m[94m|[0m
[1m[94m1185 |[0m [1m[94m…[0m     "end_date": datetime.fromisoformat(schedule.get("week_end_time", "").replace("Z", "+00:00")) if schedule.get("week_end_time") [1m[94m…[0m
[1m[94m1186 |[0m [1m[94m…[0m     "category": track_info.get("category", ""),
[1m[94m1187 |[0m [1m[94m…[0m     "enable_pitlane_collisions": schedule.get("enable_pitlane_collisions", False),
     [1m[94m|[0m                                                                       [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1188 |[0m [1m[94m…[0m     "full_course_cautions": schedule.get("full_course_cautions", False),
[1m[94m1189 |[0m [1m[94m…[0m     "weather_config": schedule.get("weather"),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1188[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1186 |[0m                         "category": track_info.get("category", ""),
[1m[94m1187 |[0m                         "enable_pitlane_collisions": schedule.get("enable_pitlane_collisions", False),
[1m[94m1188 |[0m                         "full_course_cautions": schedule.get("full_course_cautions", False),
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1189 |[0m                         "weather_config": schedule.get("weather"),
[1m[94m1190 |[0m                         "weather_forecast_url": (schedule.get("weather") or {}).get("weather_url", ""),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1190[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
     [1m[94m|[0m
[1m[94m1188 |[0m                         "full_course_cautions": schedule.get("full_course_cautions", False),
[1m[94m1189 |[0m                         "weather_config": schedule.get("weather"),
[1m[94m1190 |[0m                         "weather_forecast_url": (schedule.get("weather") or {}).get("weather_url", ""),
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1191 |[0m                         "weather_forecast_version": (schedule.get("weather") or {}).get("version"),
[1m[94m1192 |[0m                     }
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1191[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m1189 |[0m                         "weather_config": schedule.get("weather"),
[1m[94m1190 |[0m                         "weather_forecast_url": (schedule.get("weather") or {}).get("weather_url", ""),
[1m[94m1191 |[0m                         "weather_forecast_version": (schedule.get("weather") or {}).get("version"),
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1192 |[0m                     }
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1209[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m1207 |[0m                     if event.weather_forecast_url and (not event.weather_forecast_data):
[1m[94m1208 |[0m                         # Note: This task will need to be updated to work with Events
[1m[94m1209 |[0m                         logger.info("Weather forecast fetch needed for Event %s", event.id)
     [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m1210 |[0m
[1m[94m1211 |[0m                     # --- Car Restrictions ---
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1218[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
     [1m[94m|[0m
[1m[94m1216 |[0m                             continue
[1m[94m1217 |[0m                         try:
[1m[94m1218 |[0m                             sim_car = SimCar.objects.get(simulator=iracing_simulator, sim_api_id=str(car_api_id))
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1219 |[0m                         except SimCar.DoesNotExist:
[1m[94m1220 |[0m                             logger.warning("SimCar not found for car_id %s, skipping restriction", car_api_id)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1220[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
     [1m[94m|[0m
[1m[94m1218 |[0m                             sim_car = SimCar.objects.get(simulator=iracing_simulator, sim_api_id=str(car_api_id))
[1m[94m1219 |[0m                         except SimCar.DoesNotExist:
[1m[94m1220 |[0m                             logger.warning("SimCar not found for car_id %s, skipping restriction", car_api_id)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1221 |[0m                             continue
[1m[94m1222 |[0m                         CarRestriction.objects.update_or_create(
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1226[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1224 |[0m [1m[94m…[0m                     sim_car=sim_car,
[1m[94m1225 |[0m [1m[94m…[0m                     defaults={
[1m[94m1226 |[0m [1m[94m…[0m                         "max_dry_tire_sets": restriction_data.get("max_dry_tire_sets", 0),
     [1m[94m|[0m                                                                                   [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1227 |[0m [1m[94m…[0m                         "max_pct_fuel_fill": restriction_data.get("max_pct_fuel_fill", 100),
[1m[94m1228 |[0m [1m[94m…[0m                         "power_adjust_pct": float(restriction_data.get("power_adjust_pct", 0)),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1227[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
     [1m[94m|[0m
[1m[94m1225 |[0m [1m[94m…[0m                     defaults={
[1m[94m1226 |[0m [1m[94m…[0m                         "max_dry_tire_sets": restriction_data.get("max_dry_tire_sets", 0),
[1m[94m1227 |[0m [1m[94m…[0m                         "max_pct_fuel_fill": restriction_data.get("max_pct_fuel_fill", 100),
     [1m[94m|[0m                                                                                   [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1228 |[0m [1m[94m…[0m                         "power_adjust_pct": float(restriction_data.get("power_adjust_pct", 0)),
[1m[94m1229 |[0m [1m[94m…[0m                         "weight_penalty_kg": restriction_data.get("weight_penalty_kg", 0),
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1228[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
     [1m[94m|[0m
[1m[94m1226 |[0m [1m[94m…[0m                         "max_dry_tire_sets": restriction_data.get("max_dry_tire_sets", 0),
[1m[94m1227 |[0m [1m[94m…[0m                         "max_pct_fuel_fill": restriction_data.get("max_pct_fuel_fill", 100),
[1m[94m1228 |[0m [1m[94m…[0m                         "power_adjust_pct": float(restriction_data.get("power_adjust_pct", 0)),
     [1m[94m|[0m                                                                                   [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1229 |[0m [1m[94m…[0m                         "weight_penalty_kg": restriction_data.get("weight_penalty_kg", 0),
[1m[94m1230 |[0m [1m[94m…[0m                     },
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1229[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1227 |[0m                                 "max_pct_fuel_fill": restriction_data.get("max_pct_fuel_fill", 100),
[1m[94m1228 |[0m                                 "power_adjust_pct": float(restriction_data.get("power_adjust_pct", 0)),
[1m[94m1229 |[0m                                 "weight_penalty_kg": restriction_data.get("weight_penalty_kg", 0),
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1230 |[0m                             },
[1m[94m1231 |[0m                         )
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1232[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (126 > 88)
     [1m[94m|[0m
[1m[94m1230 |[0m                             },
[1m[94m1231 |[0m                         )
[1m[94m1232 |[0m                         logger.debug("Created/updated car restriction for %s in round %s", sim_car.display_name, round_number)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1233 |[0m
[1m[94m1234 |[0m                 except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1235[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1234 |[0m                 except Exception as e:
[1m[94m1235 |[0m                     error_msg = f"Error processing schedule for series {series_name}: {e!s}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1236 |[0m                     logger.exception(error_msg)
[1m[94m1237 |[0m                     errors.append(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1240[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m1239 |[0m         except Exception as e:
[1m[94m1240 |[0m             error_msg = f"Error processing series {season_data.get('series_id', 'unknown')}: {e!s}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1241 |[0m             logger.exception(error_msg)
[1m[94m1242 |[0m             errors.append(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1250[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1248 |[0m def sync_iracing_owned_content(sim_profile_id):
[1m[94m1249 |[0m     """
[1m[94m1250 |[0m     Fetch owned cars and tracks for a SimProfile from the iRacing API and update ownership tables.
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1251 |[0m     Sends a websocket event to the user group when done.
[1m[94m1252 |[0m     """
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1256[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1254 |[0m [1m[94m…[0m = SimProfile.objects.get(id=sim_profile_id)
[1m[94m1255 |[0m [1m[94m…[0minfo = iracing_service.get_member_info()
[1m[94m1256 |[0m [1m[94m…[0minfo(f"[SYNC] iRacing member_info: cust_id={member_info.get('cust_id')}, name={member_info.get('display_name')}, car_packages={member_info.get('car_packages')}, track_packages={member_info.get('track_packages')}")
     [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1257 |[0m [1m[94m…[0mackage_id for ownership mapping
[1m[94m1258 |[0m [1m[94m…[0mar_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1256[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (228 > 88)
     [1m[94m|[0m
[1m[94m1254 |[0m [1m[94m…[0m
[1m[94m1255 |[0m [1m[94m…[0m
[1m[94m1256 |[0m [1m[94m…[0m')}, name={member_info.get('display_name')}, car_packages={member_info.get('car_packages')}, track_packages={member_info.get('track_packages')}")
     [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1257 |[0m [1m[94m…[0m
[1m[94m1258 |[0m [1m[94m…[0mges", []))
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1258[36m:[0m25[36m:[0m [1;31mC401[0m Unnecessary generator (rewrite as a set comprehension)
     [1m[94m|[0m
[1m[94m1256 |[0m [1m[94m…[0m     logger.info(f"[SYNC] iRacing member_info: cust_id={member_info.get('cust_id')}, name={member_info.get('display_name')}, car_pa[1m[94m…[0m
[1m[94m1257 |[0m [1m[94m…[0m     # Use package_id for ownership mapping
[1m[94m1258 |[0m [1m[94m…[0m     owned_car_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
     [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC401[0m
[1m[94m1259 |[0m [1m[94m…[0m     owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
[1m[94m1260 |[0m [1m[94m…[0m     logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Rewrite as a set comprehension

[1msimlane/iracing/tasks.py[0m[36m:[0m1258[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1256 |[0m [1m[94m…[0m     logger.info(f"[SYNC] iRacing member_info: cust_id={member_info.get('cust_id')}, name={member_info.get('display_name')}, car_pa[1m[94m…[0m
[1m[94m1257 |[0m [1m[94m…[0m     # Use package_id for ownership mapping
[1m[94m1258 |[0m [1m[94m…[0m     owned_car_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
     [1m[94m|[0m                                                                                       [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1259 |[0m [1m[94m…[0m     owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
[1m[94m1260 |[0m [1m[94m…[0m     logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1259[36m:[0m27[36m:[0m [1;31mC401[0m Unnecessary generator (rewrite as a set comprehension)
     [1m[94m|[0m
[1m[94m1257 |[0m         # Use package_id for ownership mapping
[1m[94m1258 |[0m         owned_car_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
[1m[94m1259 |[0m         owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
     [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC401[0m
[1m[94m1260 |[0m         logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Rewrite as a set comprehension

[1msimlane/iracing/tasks.py[0m[36m:[0m1259[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1257 |[0m         # Use package_id for ownership mapping
[1m[94m1258 |[0m         owned_car_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
[1m[94m1259 |[0m         owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1260 |[0m         logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1260[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1258 |[0m         owned_car_ids = set(pkg["package_id"] for pkg in member_info.get("car_packages", []))
[1m[94m1259 |[0m         owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
[1m[94m1260 |[0m         logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
[1m[94m1262 |[0m         sim_cars = SimCar.objects.filter(sim_api_id__in=owned_car_ids, simulator=profile.simulator)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1261[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1259 |[0m         owned_track_ids = set(pkg["package_id"] for pkg in member_info.get("track_packages", []))
[1m[94m1260 |[0m         logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1262 |[0m         sim_cars = SimCar.objects.filter(sim_api_id__in=owned_car_ids, simulator=profile.simulator)
[1m[94m1263 |[0m         sim_tracks = SimTrack.objects.filter(sim_api_id__in=owned_track_ids, simulator=profile.simulator)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1262[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m1260 |[0m         logger.info(f"[SYNC] owned_car_ids (package_id): {owned_car_ids}")
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
[1m[94m1262 |[0m         sim_cars = SimCar.objects.filter(sim_api_id__in=owned_car_ids, simulator=profile.simulator)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1263 |[0m         sim_tracks = SimTrack.objects.filter(sim_api_id__in=owned_track_ids, simulator=profile.simulator)
[1m[94m1264 |[0m         car_map = {car.sim_api_id: car for car in sim_cars}
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1263[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
     [1m[94m|[0m
[1m[94m1261 |[0m         logger.info(f"[SYNC] owned_track_ids (package_id): {owned_track_ids}")
[1m[94m1262 |[0m         sim_cars = SimCar.objects.filter(sim_api_id__in=owned_car_ids, simulator=profile.simulator)
[1m[94m1263 |[0m         sim_tracks = SimTrack.objects.filter(sim_api_id__in=owned_track_ids, simulator=profile.simulator)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1264 |[0m         car_map = {car.sim_api_id: car for car in sim_cars}
[1m[94m1265 |[0m         track_map = {track.sim_api_id: track for track in sim_tracks}
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1266[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1264 |[0m         car_map = {car.sim_api_id: car for car in sim_cars}
[1m[94m1265 |[0m         track_map = {track.sim_api_id: track for track in sim_tracks}
[1m[94m1266 |[0m         logger.info(f"[SYNC] SimCars found: {len(sim_cars)}; SimTracks found: {len(sim_tracks)}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1267 |[0m         with transaction.atomic():
[1m[94m1268 |[0m             SimProfileCarOwnership.objects.filter(sim_profile=profile).delete()
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1266[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1264 |[0m         car_map = {car.sim_api_id: car for car in sim_cars}
[1m[94m1265 |[0m         track_map = {track.sim_api_id: track for track in sim_tracks}
[1m[94m1266 |[0m         logger.info(f"[SYNC] SimCars found: {len(sim_cars)}; SimTracks found: {len(sim_tracks)}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1267 |[0m         with transaction.atomic():
[1m[94m1268 |[0m             SimProfileCarOwnership.objects.filter(sim_profile=profile).delete()
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1275[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1273 |[0m             ]
[1m[94m1274 |[0m             track_ownerships = [
[1m[94m1275 |[0m                 SimProfileTrackOwnership(sim_profile=profile, sim_track=track_map[api_id])
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1276 |[0m                 for api_id in owned_track_ids if api_id in track_map
[1m[94m1277 |[0m             ]
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1280[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1278 |[0m             SimProfileCarOwnership.objects.bulk_create(car_ownerships)
[1m[94m1279 |[0m             SimProfileTrackOwnership.objects.bulk_create(track_ownerships)
[1m[94m1280 |[0m         logger.info(f"[SYNC] Car ownerships created: {len(car_ownerships)}; Track ownerships created: {len(track_ownerships)}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1281 |[0m         # Notify user via websocket
[1m[94m1282 |[0m         channel_layer = get_channel_layer()
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1280[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (127 > 88)
     [1m[94m|[0m
[1m[94m1278 |[0m             SimProfileCarOwnership.objects.bulk_create(car_ownerships)
[1m[94m1279 |[0m             SimProfileTrackOwnership.objects.bulk_create(track_ownerships)
[1m[94m1280 |[0m         logger.info(f"[SYNC] Car ownerships created: {len(car_ownerships)}; Track ownerships created: {len(track_ownerships)}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1281 |[0m         # Notify user via websocket
[1m[94m1282 |[0m         channel_layer = get_channel_layer()
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1293[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1291 |[0m                 },
[1m[94m1292 |[0m             )
[1m[94m1293 |[0m         logger.info(f"Synced iRacing owned content for SimProfile {profile.id}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1294 |[0m     except Exception as e:
[1m[94m1295 |[0m         logger.error(f"Failed to sync iRacing owned content for SimProfile {sim_profile_id}: {e}")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1295[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1293 |[0m         logger.info(f"Synced iRacing owned content for SimProfile {profile.id}")
[1m[94m1294 |[0m     except Exception as e:
[1m[94m1295 |[0m         logger.error(f"Failed to sync iRacing owned content for SimProfile {sim_profile_id}: {e}")
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1296 |[0m         raise
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1295[36m:[0m22[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1293 |[0m         logger.info(f"Synced iRacing owned content for SimProfile {profile.id}")
[1m[94m1294 |[0m     except Exception as e:
[1m[94m1295 |[0m         logger.error(f"Failed to sync iRacing owned content for SimProfile {sim_profile_id}: {e}")
     [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1296 |[0m         raise
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1295[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1293 |[0m         logger.info(f"Synced iRacing owned content for SimProfile {profile.id}")
[1m[94m1294 |[0m     except Exception as e:
[1m[94m1295 |[0m         logger.error(f"Failed to sync iRacing owned content for SimProfile {sim_profile_id}: {e}")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1296 |[0m         raise
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1336[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1334 |[0m         if self.request.retries < self.max_retries:
[1m[94m1335 |[0m             logger.info("Retrying member recent races processing for %s", cust_id)
[1m[94m1336 |[0m             raise self.retry(countdown=60, exc=exc)
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1337 |[0m
[1m[94m1338 |[0m         return {
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1368[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1366 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1367 |[0m         except Simulator.DoesNotExist:
[1m[94m1368 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1369 |[0m
[1m[94m1370 |[0m         # Fetch detailed results
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1368[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1366 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1367 |[0m         except Simulator.DoesNotExist:
[1m[94m1368 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1369 |[0m
[1m[94m1370 |[0m         # Fetch detailed results
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1368[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1366 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1367 |[0m         except Simulator.DoesNotExist:
[1m[94m1368 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1369 |[0m
[1m[94m1370 |[0m         # Fetch detailed results
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/iracing/tasks.py[0m[36m:[0m1408[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1406 |[0m         if self.request.retries < self.max_retries:
[1m[94m1407 |[0m             logger.info("Retrying subsession sync for %s", subsession_id)
[1m[94m1408 |[0m             raise self.retry(countdown=60, exc=exc)
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1409 |[0m
[1m[94m1410 |[0m         return {
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1437[36m:[0m13[36m:[0m [1;31mF841[0m Local variable `iracing_simulator` is assigned to but never used
     [1m[94m|[0m
[1m[94m1435 |[0m         # Get iRacing simulator
[1m[94m1436 |[0m         try:
[1m[94m1437 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m1438 |[0m         except Simulator.DoesNotExist:
[1m[94m1439 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `iracing_simulator`

[1msimlane/iracing/tasks.py[0m[36m:[0m1439[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1437 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1438 |[0m         except Simulator.DoesNotExist:
[1m[94m1439 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1440 |[0m
[1m[94m1441 |[0m         # Get season results
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1439[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1437 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1438 |[0m         except Simulator.DoesNotExist:
[1m[94m1439 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1440 |[0m
[1m[94m1441 |[0m         # Get season results
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1439[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1437 |[0m             iracing_simulator = Simulator.objects.get(name="iRacing")
[1m[94m1438 |[0m         except Simulator.DoesNotExist:
[1m[94m1439 |[0m             raise ValueError("iRacing simulator not found in database")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1440 |[0m
[1m[94m1441 |[0m         # Get season results
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/iracing/tasks.py[0m[36m:[0m1452[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1450 |[0m                 subsession_id = result["subsession_id"]
[1m[94m1451 |[0m                 session_id = result.get("session_id")
[1m[94m1452 |[0m                 start_time = datetime.fromisoformat(result["start_time"].replace("Z", "+00:00"))
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1453 |[0m                 start_time = timezone.make_aware(start_time) if timezone.is_naive(start_time) else start_time
[1m[94m1454 |[0m                 track_id = result["track"]["track_id"]
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1453[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
     [1m[94m|[0m
[1m[94m1451 |[0m                 session_id = result.get("session_id")
[1m[94m1452 |[0m                 start_time = datetime.fromisoformat(result["start_time"].replace("Z", "+00:00"))
[1m[94m1453 |[0m                 start_time = timezone.make_aware(start_time) if timezone.is_naive(start_time) else start_time
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1454 |[0m                 track_id = result["track"]["track_id"]
[1m[94m1455 |[0m                 round_number = result.get("race_week_num")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1472[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m1470 |[0m                 if matching_instance:
[1m[94m1471 |[0m                     # Match found - update with actual data
[1m[94m1472 |[0m                     matching_instance.predicted_start_time = matching_instance.start_time
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m1473 |[0m                     matching_instance.external_subsession_id = subsession_id
[1m[94m1474 |[0m                     matching_instance.external_session_id = session_id
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1479[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1477 |[0m                     matching_instance.save()
[1m[94m1478 |[0m                     matched_count += 1
[1m[94m1479 |[0m                     logger.debug("Matched subsession %s to existing instance", subsession_id)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1480 |[0m
[1m[94m1481 |[0m                 else:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1485[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
     [1m[94m|[0m
[1m[94m1483 |[0m                     sync_subsession_results_task.delay(subsession_id)
[1m[94m1484 |[0m                     created_count += 1
[1m[94m1485 |[0m                     logger.debug("Queued creation for unmatched subsession %s", subsession_id)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m1486 |[0m
[1m[94m1487 |[0m             except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1487[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1485 |[0m                     logger.debug("Queued creation for unmatched subsession %s", subsession_id)
[1m[94m1486 |[0m
[1m[94m1487 |[0m             except Exception as e:
     [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1488 |[0m                 error_msg = f"Error processing result for subsession {result.get('subsession_id')}: {e!s}"
[1m[94m1489 |[0m                 logger.error(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1488[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
     [1m[94m|[0m
[1m[94m1487 |[0m             except Exception as e:
[1m[94m1488 |[0m                 error_msg = f"Error processing result for subsession {result.get('subsession_id')}: {e!s}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1489 |[0m                 logger.error(error_msg)
[1m[94m1490 |[0m                 errors.append(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1489[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1487 |[0m             except Exception as e:
[1m[94m1488 |[0m                 error_msg = f"Error processing result for subsession {result.get('subsession_id')}: {e!s}"
[1m[94m1489 |[0m                 logger.error(error_msg)
     [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1490 |[0m                 errors.append(error_msg)
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1507[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1505 |[0m         if self.request.retries < self.max_retries:
[1m[94m1506 |[0m             logger.info("Retrying season results matching for %s", season_id)
[1m[94m1507 |[0m             raise self.retry(countdown=60, exc=exc)
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1508 |[0m
[1m[94m1509 |[0m         return {
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1534[36m:[0m24[36m:[0m [1;31mF821[0m Undefined name `EventInstance`
     [1m[94m|[0m
[1m[94m1533 |[0m     # Find completed events that haven't been processed yet
[1m[94m1534 |[0m     completed_events = EventInstance.objects.filter(
     [1m[94m|[0m                        [1m[91m^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m1535 |[0m         end_time__lt=cutoff_time,  # Event has finished
[1m[94m1536 |[0m         external_subsession_id__isnull=False,  # Has iRacing subsession ID
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1538[36m:[0m9[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1536 |[0m         external_subsession_id__isnull=False,  # Has iRacing subsession ID
[1m[94m1537 |[0m         # TODO: Add a field to track if results have been fetched
[1m[94m1538 |[0m         # results_fetched__isnull=True,  # Results not yet fetched
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1539 |[0m     ).select_related("event", "event__simulator")
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/iracing/tasks.py[0m[36m:[0m1541[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1539 |[0m     ).select_related("event", "event__simulator")
[1m[94m1540 |[0m
[1m[94m1541 |[0m     logger.info(f"Found {completed_events.count()} completed events to process")
     [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1542 |[0m
[1m[94m1543 |[0m     queued_count = 0
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1551[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1549 |[0m             fetch_results_task.delay(time_slot.id)
[1m[94m1550 |[0m             queued_count += 1
[1m[94m1551 |[0m             logger.info(f"Queued result fetching for TimeSlot {time_slot.id} (subsession: {time_slot.external_subsession_id})")
     [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1552 |[0m
[1m[94m1553 |[0m         except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1551[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (127 > 88)
     [1m[94m|[0m
[1m[94m1549 |[0m             fetch_results_task.delay(time_slot.id)
[1m[94m1550 |[0m             queued_count += 1
[1m[94m1551 |[0m             logger.info(f"Queued result fetching for TimeSlot {time_slot.id} (subsession: {time_slot.external_subsession_id})")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1552 |[0m
[1m[94m1553 |[0m         except Exception as e:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1553[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1551 |[0m             logger.info(f"Queued result fetching for TimeSlot {time_slot.id} (subsession: {time_slot.external_subsession_id})")
[1m[94m1552 |[0m
[1m[94m1553 |[0m         except Exception as e:
     [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1554 |[0m             error_msg = f"Failed to queue result fetching for TimeSlot {time_slot.id}: {e!s}"
[1m[94m1555 |[0m             logger.error(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1554[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1553 |[0m         except Exception as e:
[1m[94m1554 |[0m             error_msg = f"Failed to queue result fetching for TimeSlot {time_slot.id}: {e!s}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1555 |[0m             logger.error(error_msg)
[1m[94m1556 |[0m             errors.append(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1555[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1553 |[0m         except Exception as e:
[1m[94m1554 |[0m             error_msg = f"Failed to queue result fetching for TimeSlot {time_slot.id}: {e!s}"
[1m[94m1555 |[0m             logger.error(error_msg)
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1556 |[0m             errors.append(error_msg)
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1566[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1564 |[0m     }
[1m[94m1565 |[0m
[1m[94m1566 |[0m     logger.info(f"Completed event check: {queued_count} events queued for result processing")
     [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1567 |[0m     return result
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1566[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1564 |[0m     }
[1m[94m1565 |[0m
[1m[94m1566 |[0m     logger.info(f"Completed event check: {queued_count} events queued for result processing")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1567 |[0m     return result
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1577[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1575 |[0m     from simlane.iracing.services import iracing_service
[1m[94m1576 |[0m
[1m[94m1577 |[0m     logger.info(f"Starting result fetch for TimeSlot {time_slot_id}")
     [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1578 |[0m
[1m[94m1579 |[0m     try:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1584[36m:[0m13[36m:[0m [1;31mTRY301[0m Abstract `raise` to an inner function
     [1m[94m|[0m
[1m[94m1583 |[0m         if not time_slot.external_subsession_id:
[1m[94m1584 |[0m             raise ValueError(f"TimeSlot {time_slot_id} has no external_subsession_id")
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY301[0m
[1m[94m1585 |[0m
[1m[94m1586 |[0m         # Get the simulator
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1584[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1583 |[0m         if not time_slot.external_subsession_id:
[1m[94m1584 |[0m             raise ValueError(f"TimeSlot {time_slot_id} has no external_subsession_id")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1585 |[0m
[1m[94m1586 |[0m         # Get the simulator
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1584[36m:[0m30[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1583 |[0m         if not time_slot.external_subsession_id:
[1m[94m1584 |[0m             raise ValueError(f"TimeSlot {time_slot_id} has no external_subsession_id")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m1585 |[0m
[1m[94m1586 |[0m         # Get the simulator
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/iracing/tasks.py[0m[36m:[0m1587[36m:[0m9[36m:[0m [1;31mF841[0m Local variable `simulator` is assigned to but never used
     [1m[94m|[0m
[1m[94m1586 |[0m         # Get the simulator
[1m[94m1587 |[0m         simulator = time_slot.event.simulator
     [1m[94m|[0m         [1m[91m^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m1588 |[0m
[1m[94m1589 |[0m         # Fetch results from iRacing API
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `simulator`

[1msimlane/iracing/tasks.py[0m[36m:[0m1590[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1589 |[0m         # Fetch results from iRacing API
[1m[94m1590 |[0m         logger.info(f"Fetching results for subsession {time_slot.external_subsession_id}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1591 |[0m         results_data = iracing_service.results_get(
[1m[94m1592 |[0m             subsession_id=time_slot.external_subsession_id,
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1590[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1589 |[0m         # Fetch results from iRacing API
[1m[94m1590 |[0m         logger.info(f"Fetching results for subsession {time_slot.external_subsession_id}")
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1591 |[0m         results_data = iracing_service.results_get(
[1m[94m1592 |[0m             subsession_id=time_slot.external_subsession_id,
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1602[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
     [1m[94m|[0m
[1m[94m1600 |[0m             # Team event
[1m[94m1601 |[0m             create_team_and_participant_results(event_result, results_data["results"])
[1m[94m1602 |[0m             participants_processed = sum(len(team.get("driver_results", [])) for team in results_data["results"])
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1603 |[0m         elif results_data.get("session_results"):
[1m[94m1604 |[0m             # Solo event (legacy/solo structure)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1617[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1615 |[0m         }
[1m[94m1616 |[0m
[1m[94m1617 |[0m         logger.info(f"Successfully processed results for TimeSlot {time_slot_id}")
     [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1618 |[0m         return result
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1618[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
     [1m[94m|[0m
[1m[94m1617 |[0m         logger.info(f"Successfully processed results for TimeSlot {time_slot_id}")
[1m[94m1618 |[0m         return result
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m1619 |[0m
[1m[94m1620 |[0m     except TimeSlot.DoesNotExist:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1622[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1620 |[0m     except TimeSlot.DoesNotExist:
[1m[94m1621 |[0m         error_msg = f"TimeSlot {time_slot_id} not found"
[1m[94m1622 |[0m         logger.error(error_msg)
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1623 |[0m         raise ValueError(error_msg)
[1m[94m1624 |[0m     except Exception as e:
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1623[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1621 |[0m         error_msg = f"TimeSlot {time_slot_id} not found"
[1m[94m1622 |[0m         logger.error(error_msg)
[1m[94m1623 |[0m         raise ValueError(error_msg)
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1624 |[0m     except Exception as e:
[1m[94m1625 |[0m         error_msg = f"Failed to fetch results for TimeSlot {time_slot_id}: {e!s}"
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1624[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1622 |[0m         logger.error(error_msg)
[1m[94m1623 |[0m         raise ValueError(error_msg)
[1m[94m1624 |[0m     except Exception as e:
     [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1625 |[0m         error_msg = f"Failed to fetch results for TimeSlot {time_slot_id}: {e!s}"
[1m[94m1626 |[0m         logger.error(error_msg)
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1626[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
     [1m[94m|[0m
[1m[94m1624 |[0m     except Exception as e:
[1m[94m1625 |[0m         error_msg = f"Failed to fetch results for TimeSlot {time_slot_id}: {e!s}"
[1m[94m1626 |[0m         logger.error(error_msg)
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m1627 |[0m         raise ValueError(error_msg)
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/iracing/tasks.py[0m[36m:[0m1627[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1625 |[0m         error_msg = f"Failed to fetch results for TimeSlot {time_slot_id}: {e!s}"
[1m[94m1626 |[0m         logger.error(error_msg)
[1m[94m1627 |[0m         raise ValueError(error_msg)
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1632[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1630 |[0m def process_event_results(time_slot, results_data, simulator):
[1m[94m1631 |[0m     """
[1m[94m1632 |[0m     Process results data for an EventInstance (legacy, now handled in fetch_results_task).
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1633 |[0m     """
[1m[94m1634 |[0m     logger.info(f"Processing results for TimeSlot {time_slot.id} (legacy stub)")
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1634[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
     [1m[94m|[0m
[1m[94m1632 |[0m     Process results data for an EventInstance (legacy, now handled in fetch_results_task).
[1m[94m1633 |[0m     """
[1m[94m1634 |[0m     logger.info(f"Processing results for TimeSlot {time_slot.id} (legacy stub)")
     [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m1635 |[0m     return {
[1m[94m1636 |[0m         "participants_processed": 0,
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1649[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1647 |[0m     "schedule": 300.0,  # 5 minutes in seconds
[1m[94m1648 |[0m     "enabled": True,
[1m[94m1649 |[0m     "description": "Periodically check for completed events and queue them for result fetching",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1650 |[0m }
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1672[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1670 |[0m         resp.raise_for_status()
[1m[94m1671 |[0m         data = resp.json()
[1m[94m1672 |[0m     except Exception as exc:
     [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1673 |[0m         logger.warning("Failed to fetch weather forecast for RaceWeek %s: %s", race_week.id, exc)
[1m[94m1674 |[0m         return
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1673[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1671 |[0m         data = resp.json()
[1m[94m1672 |[0m     except Exception as exc:
[1m[94m1673 |[0m         logger.warning("Failed to fetch weather forecast for RaceWeek %s: %s", race_week.id, exc)
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1674 |[0m         return
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1677[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1676 |[0m     if not isinstance(data, list):
[1m[94m1677 |[0m         logger.warning("Unexpected weather forecast format for RaceWeek %s", race_week.id)
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1678 |[0m         return
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1680[36m:[0m29[36m:[0m [1;31mRUF003[0m Comment contains ambiguous `–` (EN DASH). Did you mean `-` (HYPHEN-MINUS)?
     [1m[94m|[0m
[1m[94m1678 |[0m         return
[1m[94m1679 |[0m
[1m[94m1680 |[0m     # Compute summary stats – iRacing temps are hundredths of °C, convert.
     [1m[94m|[0m                             [1m[91m^[0m [1m[91mRUF003[0m
[1m[94m1681 |[0m     temps = [(pt.get("air_temp") or 0) / 100.0 for pt in data if "air_temp" in pt]
[1m[94m1682 |[0m     precip_chances = [pt.get("precip_chance", 0) for pt in data]
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1692[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (132 > 88)
     [1m[94m|[0m
[1m[94m1690 |[0m     race_week.weather_forecast_data = data
[1m[94m1691 |[0m     # version may be included in first point
[1m[94m1692 |[0m     race_week.weather_forecast_version = data[0].get("version") if isinstance(data[0], dict) else race_week.weather_forecast_version
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1693 |[0m     race_week.save(update_fields=[
[1m[94m1694 |[0m         "weather_forecast_data",
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1720[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
     [1m[94m|[0m
[1m[94m1718 |[0m       try:
[1m[94m1719 |[0m           _update_weather_forecast(race_week)
[1m[94m1720 |[0m [1m[91m/[0m         return {
[1m[94m1721 |[0m [1m[91m|[0m             "success": True,
[1m[94m1722 |[0m [1m[91m|[0m             "updated": True,
[1m[94m1723 |[0m [1m[91m|[0m             "race_week_id": race_week_id,
[1m[94m1724 |[0m [1m[91m|[0m         }
     [1m[94m|[0m [1m[91m|_________^[0m [1m[91mTRY300[0m
[1m[94m1725 |[0m       except Exception as exc:
[1m[94m1726 |[0m           # Retry on network errors
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1725[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
     [1m[94m|[0m
[1m[94m1723 |[0m             "race_week_id": race_week_id,
[1m[94m1724 |[0m         }
[1m[94m1725 |[0m     except Exception as exc:
     [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m1726 |[0m         # Retry on network errors
[1m[94m1727 |[0m         if self.request.retries < self.max_retries:
     [1m[94m|[0m

[1msimlane/iracing/tasks.py[0m[36m:[0m1728[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
     [1m[94m|[0m
[1m[94m1726 |[0m         # Retry on network errors
[1m[94m1727 |[0m         if self.request.retries < self.max_retries:
[1m[94m1728 |[0m             raise self.retry(exc=exc)
     [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m1729 |[0m         return {
[1m[94m1730 |[0m             "success": False,
     [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m43[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m @admin.register(SimProfile)
[1m[94m42 |[0m class SimProfileAdmin(ModelAdmin):
[1m[94m43 |[0m     list_display = ["profile_name", "linked_user", "simulator", "is_verified", "is_public", "last_active"]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m44 |[0m     list_filter = ["simulator", "is_verified", "is_public", "created_at"]
[1m[94m45 |[0m     search_fields = ["profile_name", "linked_user__username", "linked_user__email", "sim_api_id"]
   [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m45[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
   [1m[94m|[0m
[1m[94m43 |[0m     list_display = ["profile_name", "linked_user", "simulator", "is_verified", "is_public", "last_active"]
[1m[94m44 |[0m     list_filter = ["simulator", "is_verified", "is_public", "created_at"]
[1m[94m45 |[0m     search_fields = ["profile_name", "linked_user__username", "linked_user__email", "sim_api_id"]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m46 |[0m     readonly_fields = ["created_at", "updated_at", "linked_at"]
[1m[94m47 |[0m     raw_id_fields = ["linked_user", "simulator"]
   [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m148[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (125 > 88)
    [1m[94m|[0m
[1m[94m146 |[0m @admin.register(EventClass)
[1m[94m147 |[0m class EventClassAdmin(ModelAdmin):
[1m[94m148 |[0m     list_display = ["name", "event", "car_class", "class_order", "min_entries", "max_entries", "inherit_series_restrictions"]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m149 |[0m     list_filter = ["event", "car_class", "inherit_series_restrictions"]
[1m[94m150 |[0m     search_fields = ["name", "event__name", "car_class__name"]
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m236[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (132 > 88)
    [1m[94m|[0m
[1m[94m234 |[0m class SimProfileCarOwnershipAdmin(admin.ModelAdmin):
[1m[94m235 |[0m     list_display = ("sim_profile", "sim_car", "is_favorite", "acquired_at")
[1m[94m236 |[0m     search_fields = ("sim_profile__sim_api_id", "sim_profile__profile_name", "sim_car__car_model__name", "sim_car__simulator__name")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m237 |[0m     list_filter = ("is_favorite", "sim_car__simulator")
[1m[94m238 |[0m     autocomplete_fields = ["sim_profile", "sim_car"]
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m244[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (138 > 88)
    [1m[94m|[0m
[1m[94m242 |[0m [1m[94m…[0min):
[1m[94m243 |[0m [1m[94m…[0ms_favorite", "acquired_at")
[1m[94m244 |[0m [1m[94m…[0mim_profile__profile_name", "sim_track__track_model__name", "sim_track__simulator__name")
    [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m245 |[0m [1m[94m…[0mlator")
[1m[94m246 |[0m [1m[94m…[0mck"]
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m252[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m250 |[0m class EventResultAdmin(admin.ModelAdmin):
[1m[94m251 |[0m     list_display = (
[1m[94m252 |[0m         "id", "time_slot", "subsession_id", "num_drivers", "start_time", "end_time", "is_processed",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m253 |[0m     )
[1m[94m254 |[0m     search_fields = ("subsession_id", "time_slot__id")
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m262[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m260 |[0m class TeamResultAdmin(admin.ModelAdmin):
[1m[94m261 |[0m     list_display = (
[1m[94m262 |[0m         "id", "event_result", "team", "finish_position", "car_class_name", "champ_points", "is_dnf",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m263 |[0m     )
[1m[94m264 |[0m     search_fields = ("team__name", "event_result__subsession_id")
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m271[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (122 > 88)
    [1m[94m|[0m
[1m[94m269 |[0m class ParticipantResultAdmin(admin.ModelAdmin):
[1m[94m270 |[0m     list_display = (
[1m[94m271 |[0m         "id", "sim_profile", "event_result", "team_result", "finish_position", "car_class_name", "champ_points", "is_dnf",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m272 |[0m     )
[1m[94m273 |[0m     search_fields = ("sim_profile__user__username", "event_result__subsession_id", "team_result__team__name")
    [1m[94m|[0m

[1msimlane/sim/admin.py[0m[36m:[0m273[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m271 |[0m         "id", "sim_profile", "event_result", "team_result", "finish_position", "car_class_name", "champ_points", "is_dnf",
[1m[94m272 |[0m     )
[1m[94m273 |[0m     search_fields = ("sim_profile__user__username", "event_result__subsession_id", "team_result__team__name")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m274 |[0m     list_filter = ("car_class_name", "finish_position")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m43[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m         except Simulator.DoesNotExist:
[1m[94m42 |[0m             self.stdout.write(
[1m[94m43 |[0m                 self.style.ERROR(f"Simulator '{options['simulator']}' not found. Please create it first."),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m44 |[0m             )
[1m[94m45 |[0m             return
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m54[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m52 |[0m                 self.style.SUCCESS("Successfully loaded car classes!"),
[1m[94m53 |[0m             )
[1m[94m54 |[0m         except Exception as e:
   [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m55 |[0m             self.stdout.write(
[1m[94m56 |[0m                 self.style.ERROR(f"Error loading car classes: {e}"),
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m59[36m:[0m54[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
   [1m[94m|[0m
[1m[94m57 |[0m             )
[1m[94m58 |[0m
[1m[94m59 |[0m     def load_car_classes(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                      [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m60 |[0m         """Load and update car classes data from iRacing API"""
[1m[94m61 |[0m         self.stdout.write("Fetching car classes from iRacing API...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m59[36m:[0m54[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
   [1m[94m|[0m
[1m[94m57 |[0m             )
[1m[94m58 |[0m
[1m[94m59 |[0m     def load_car_classes(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                      [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m60 |[0m         """Load and update car classes data from iRacing API"""
[1m[94m61 |[0m         self.stdout.write("Fetching car classes from iRacing API...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m79[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (116 > 88)
   [1m[94m|[0m
[1m[94m77 |[0m             )
[1m[94m78 |[0m
[1m[94m79 |[0m     def process_car_classes(self, simulator: Simulator, car_classes_data: list[dict[str, Any]], force_update: bool):
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m80 |[0m         """Process car classes data from iRacing API"""
[1m[94m81 |[0m         self.stdout.write("Processing car classes...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m79[36m:[0m97[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
   [1m[94m|[0m
[1m[94m77 |[0m             )
[1m[94m78 |[0m
[1m[94m79 |[0m     def process_car_classes(self, simulator: Simulator, car_classes_data: list[dict[str, Any]], force_update: bool):
   [1m[94m|[0m                                                                                                 [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m80 |[0m         """Process car classes data from iRacing API"""
[1m[94m81 |[0m         self.stdout.write("Processing car classes...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m95[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m93 |[0m                 # Extract cars in class
[1m[94m94 |[0m                 cars_in_class = car_class_data.get("cars_in_class", [])
[1m[94m95 |[0m                 car_sim_api_ids = [str(car.get("car_id")) for car in cars_in_class if car.get("car_id")]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m96 |[0m
[1m[94m97 |[0m                 # Check if car class already exists
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m126[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m124 |[0m                 else:
[1m[94m125 |[0m                     skipped_count += 1
[1m[94m126 |[0m                     self.stdout.write(f"  - Skipped: {name} (ID: {car_class_id}) - already exists")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m127 |[0m
[1m[94m128 |[0m             except Exception as e:
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m128[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m126 |[0m                     self.stdout.write(f"  - Skipped: {name} (ID: {car_class_id}) - already exists")
[1m[94m127 |[0m
[1m[94m128 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m129 |[0m                 self.stdout.write(
[1m[94m130 |[0m                     self.style.ERROR(f"Error processing car class {car_class_data.get('car_class_id', 'unknown')}: {e}"),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_car_classes.py[0m[36m:[0m130[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (121 > 88)
    [1m[94m|[0m
[1m[94m128 |[0m             except Exception as e:
[1m[94m129 |[0m                 self.stdout.write(
[1m[94m130 |[0m                     self.style.ERROR(f"Error processing car class {car_class_data.get('car_class_id', 'unknown')}: {e}"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m131 |[0m                 )
[1m[94m132 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m62[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
   [1m[94m|[0m
[1m[94m60 |[0m         except Simulator.DoesNotExist:
[1m[94m61 |[0m             self.stdout.write(
[1m[94m62 |[0m                 self.style.ERROR(f"Simulator '{options['simulator']}' not found. Please create it first."),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m63 |[0m             )
[1m[94m64 |[0m             return
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m86[36m:[0m52[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
   [1m[94m|[0m
[1m[94m84 |[0m         )
[1m[94m85 |[0m
[1m[94m86 |[0m     def load_cars_data(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                    [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m87 |[0m         """Load and update cars data from iRacing API"""
[1m[94m88 |[0m         self.stdout.write("Fetching cars data from iRacing API...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m86[36m:[0m52[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
   [1m[94m|[0m
[1m[94m84 |[0m         )
[1m[94m85 |[0m
[1m[94m86 |[0m     def load_cars_data(self, simulator: Simulator, force_update: bool = False):
   [1m[94m|[0m                                                    [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m87 |[0m         """Load and update cars data from iRacing API"""
[1m[94m88 |[0m         self.stdout.write("Fetching cars data from iRacing API...")
   [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m106[36m:[0m54[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m104 |[0m             )
[1m[94m105 |[0m
[1m[94m106 |[0m     def load_tracks_data(self, simulator: Simulator, force_update: bool = False):
    [1m[94m|[0m                                                      [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m107 |[0m         """Load and update tracks data from iRacing API"""
[1m[94m108 |[0m         self.stdout.write("Fetching tracks data from iRacing API...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m106[36m:[0m54[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m104 |[0m             )
[1m[94m105 |[0m
[1m[94m106 |[0m     def load_tracks_data(self, simulator: Simulator, force_update: bool = False):
    [1m[94m|[0m                                                      [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m107 |[0m         """Load and update tracks data from iRacing API"""
[1m[94m108 |[0m         self.stdout.write("Fetching tracks data from iRacing API...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m126[36m:[0m9[36m:[0m [1;31mC901[0m `process_cars` is too complex (31 > 10)
    [1m[94m|[0m
[1m[94m124 |[0m             )
[1m[94m125 |[0m
[1m[94m126 |[0m     def process_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m127 |[0m         """Process cars data from iRacing API"""
[1m[94m128 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m126[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (36 > 12)
    [1m[94m|[0m
[1m[94m124 |[0m             )
[1m[94m125 |[0m
[1m[94m126 |[0m     def process_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m127 |[0m         """Process cars data from iRacing API"""
[1m[94m128 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m126[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (98 > 50)
    [1m[94m|[0m
[1m[94m124 |[0m             )
[1m[94m125 |[0m
[1m[94m126 |[0m     def process_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m127 |[0m         """Process cars data from iRacing API"""
[1m[94m128 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m126[36m:[0m66[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m124 |[0m             )
[1m[94m125 |[0m
[1m[94m126 |[0m     def process_cars(self, simulator: Simulator, cars_data: Any, force_update: bool):
    [1m[94m|[0m                                                                  [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m127 |[0m         """Process cars data from iRacing API"""
[1m[94m128 |[0m         self.stdout.write("Processing iRacing cars...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m181[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m179 |[0m                             continue
[1m[94m180 |[0m
[1m[94m181 |[0m                         # Normalize similar types (e.g., f1/formula1/formulaone -> formula1)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m182 |[0m                         if type_name in ["f1", "formulaone"]:
[1m[94m183 |[0m                             type_name = "formula1"
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m220[36m:[0m34[36m:[0m [1;31mRUF005[0m Consider iterable unpacking instead of concatenation
    [1m[94m|[0m
[1m[94m219 |[0m                   # Prepare search filters for easier searching
[1m[94m220 |[0m                   search_filters = [
    [1m[94m|[0m  [1m[91m__________________________________^[0m
[1m[94m221 |[0m [1m[91m|[0m                     car_make.lower(),
[1m[94m222 |[0m [1m[91m|[0m                     car_model_name.lower(),
[1m[94m223 |[0m [1m[91m|[0m                     normalized_category,
[1m[94m224 |[0m [1m[91m|[0m                 ] + cleaned_types
    [1m[94m|[0m [1m[91m|_________________________________^[0m [1m[91mRUF005[0m
[1m[94m225 |[0m
[1m[94m226 |[0m                   # Create or get car model with all new fields
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with iterable unpacking

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m236[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m234 |[0m                     "weight_lbs": car.get("car_weight", 0),
[1m[94m235 |[0m                     "has_headlights": car.get("has_headlights", False),
[1m[94m236 |[0m                     "has_multiple_dry_tire_types": car.get("has_multiple_dry_tire_types", False),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m237 |[0m                     "has_rain_capable_tire_types": car.get("has_rain_capable_tire_types", False),
[1m[94m238 |[0m                     "rain_enabled": car.get("rain_enabled", False),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m237[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m235 |[0m                     "has_headlights": car.get("has_headlights", False),
[1m[94m236 |[0m                     "has_multiple_dry_tire_types": car.get("has_multiple_dry_tire_types", False),
[1m[94m237 |[0m                     "has_rain_capable_tire_types": car.get("has_rain_capable_tire_types", False),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m238 |[0m                     "rain_enabled": car.get("rain_enabled", False),
[1m[94m239 |[0m                     "ai_enabled": car.get("ai_enabled", False),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m310[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
    [1m[94m|[0m
[1m[94m308 |[0m [1m[94m…[0m                     current_value = getattr(sim_car, field)
[1m[94m309 |[0m [1m[94m…[0m                     if url and self._should_update_image(current_value, url):
[1m[94m310 |[0m [1m[94m…[0m                         image_file = self._download_and_save_image(url, field, sim_car.display_name, car_folder)
    [1m[94m|[0m                                                                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m311 |[0m [1m[94m…[0m                         if image_file:
[1m[94m312 |[0m [1m[94m…[0m                             setattr(sim_car, field, image_file)
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m328[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (116 > 88)
    [1m[94m|[0m
[1m[94m326 |[0m                     for field, url in image_urls.items():
[1m[94m327 |[0m                         if url:
[1m[94m328 |[0m                             image_file = self._download_and_save_image(url, field, sim_car.display_name, car_folder)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m329 |[0m                             if image_file:
[1m[94m330 |[0m                                 setattr(sim_car, field, image_file)
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m333[36m:[0m21[36m:[0m [1;31mF841[0m Local variable `sim_created` is assigned to but never used
    [1m[94m|[0m
[1m[94m332 |[0m                     sim_car.save()  # Save again with images
[1m[94m333 |[0m                     sim_created = True
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m334 |[0m                     created_sim_cars += 1
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `sim_created`

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m336[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m334 |[0m                     created_sim_cars += 1
[1m[94m335 |[0m
[1m[94m336 |[0m                 # If this car is active, mark all other cars with the same package_id as inactive
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m337 |[0m                 if is_active:
[1m[94m338 |[0m                     SimCar.objects.filter(
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m343[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m341 |[0m                     ).exclude(sim_api_id=str(car["car_id"])).update(is_active=False)
[1m[94m342 |[0m
[1m[94m343 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m344 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
[1m[94m345 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m344[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m343 |[0m             except Exception as e:
[1m[94m344 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m345 |[0m                 continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m344[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m343 |[0m             except Exception as e:
[1m[94m344 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m345 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m344[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m343 |[0m             except Exception as e:
[1m[94m344 |[0m                 logger.error(f"Error processing car {car.get('car_name', 'Unknown')}: {e}")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m345 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m355[36m:[0m9[36m:[0m [1;31mC901[0m `process_tracks` is too complex (25 > 10)
    [1m[94m|[0m
[1m[94m353 |[0m         )
[1m[94m354 |[0m
[1m[94m355 |[0m     def process_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m356 |[0m         """Process tracks data from iRacing API"""
[1m[94m357 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m355[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (25 > 12)
    [1m[94m|[0m
[1m[94m353 |[0m         )
[1m[94m354 |[0m
[1m[94m355 |[0m     def process_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m356 |[0m         """Process tracks data from iRacing API"""
[1m[94m357 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m355[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (67 > 50)
    [1m[94m|[0m
[1m[94m353 |[0m         )
[1m[94m354 |[0m
[1m[94m355 |[0m     def process_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m356 |[0m         """Process tracks data from iRacing API"""
[1m[94m357 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m355[36m:[0m70[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m353 |[0m         )
[1m[94m354 |[0m
[1m[94m355 |[0m     def process_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m                                                                      [1m[91m^^^^^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m356 |[0m         """Process tracks data from iRacing API"""
[1m[94m357 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m355[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m353 |[0m         )
[1m[94m354 |[0m
[1m[94m355 |[0m     def process_tracks(self, simulator: Simulator, tracks_data: Any, force_update: bool):
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m356 |[0m         """Process tracks data from iRacing API"""
[1m[94m357 |[0m         self.stdout.write("Processing iRacing tracks...")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m372[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m370 |[0m         updated_sim_layouts = 0
[1m[94m371 |[0m
[1m[94m372 |[0m         # Group tracks by track_name since each API entry is actually a track configuration
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m373 |[0m         tracks_by_name = {}
[1m[94m374 |[0m         for track in tracks:
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m391[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m389 |[0m                 track_model_defaults = {
[1m[94m390 |[0m                     "slug": slugify(track_name),
[1m[94m391 |[0m                     "country": self._parse_location_country(base_track.get("location", "")),
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m392 |[0m                     "location": base_track.get("location", ""),
[1m[94m393 |[0m                     "latitude": base_track.get("latitude"),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m417[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m416 |[0m                 # Prepare image URLs for downloading
[1m[94m417 |[0m                 track_folder = base_track.get("folder", "")  # Get the folder path from API
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m418 |[0m                 image_urls = {
[1m[94m419 |[0m                     "logo": base_track.get("logo", ""),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m434[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m432 |[0m                     "display_name": track_name,
[1m[94m433 |[0m                     "slug": slugify(f"iracing-{track_name}"),
[1m[94m434 |[0m                     "is_laser_scanned": any(config.get("tech_track", False) for config in track_configs),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m435 |[0m                     "rain_enabled": any(config.get("rain_enabled", False) for config in track_configs),
[1m[94m436 |[0m                     "price": base_track.get("price"),  # May be None
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m435[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m433 |[0m                     "slug": slugify(f"iracing-{track_name}"),
[1m[94m434 |[0m                     "is_laser_scanned": any(config.get("tech_track", False) for config in track_configs),
[1m[94m435 |[0m                     "rain_enabled": any(config.get("rain_enabled", False) for config in track_configs),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m436 |[0m                     "price": base_track.get("price"),  # May be None
[1m[94m437 |[0m                     "is_free": base_track.get("free_with_subscription", False),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m439[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m437 |[0m                     "is_free": base_track.get("free_with_subscription", False),
[1m[94m438 |[0m                     "is_purchasable": base_track.get("is_ps_purchasable", True),
[1m[94m439 |[0m                     "search_filters": self._build_track_search_filters(track_name, track_configs),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m440 |[0m                     "is_active": True,
[1m[94m441 |[0m                 }
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m452[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m450 |[0m                     # Update existing sim track
[1m[94m451 |[0m                     for field, value in sim_track_defaults.items():
[1m[94m452 |[0m                         if field not in ["sim_api_id", "slug"]:  # Don't update these IDs
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m453 |[0m                             setattr(sim_track, field, value)
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m459[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
    [1m[94m|[0m
[1m[94m457 |[0m                         current_value = getattr(sim_track, field)
[1m[94m458 |[0m                         if url and self._should_update_image(current_value, url):
[1m[94m459 |[0m                             image_file = self._download_and_save_image(url, field, sim_track.display_name, track_folder)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m460 |[0m                             if image_file:
[1m[94m461 |[0m                                 setattr(sim_track, field, image_file)
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m470[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
    [1m[94m|[0m
[1m[94m468 |[0m                     for field, url in image_urls.items():
[1m[94m469 |[0m                         if url:
[1m[94m470 |[0m                             image_file = self._download_and_save_image(url, field, sim_track.display_name, track_folder)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m471 |[0m                             if image_file:
[1m[94m472 |[0m                                 setattr(sim_track, field, image_file)
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m479[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m477 |[0m                 # Create SimLayout for each track configuration
[1m[94m478 |[0m                 for config in track_configs:
[1m[94m479 |[0m                     track_type = self._determine_track_type(config.get("config_name", ""))
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m480 |[0m                     config_name = config.get("config_name", "Unknown Configuration")
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m487[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (125 > 88)
    [1m[94m|[0m
[1m[94m485 |[0m                         "type": track_type,
[1m[94m486 |[0m                         "layout_type": track_type,  # Set both fields for compatibility
[1m[94m487 |[0m                         "length_km": config.get("track_config_length", 0) / 1000 if config.get("track_config_length") else 0,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m488 |[0m                         "image_url": config.get("track_map_image", ""),
[1m[94m489 |[0m                         "retired": config.get("retired", False),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m504[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m502 |[0m                     layout, layout_created = SimLayout.objects.get_or_create(
[1m[94m503 |[0m                         sim_track=sim_track,
[1m[94m504 |[0m                         layout_code=str(config["track_id"]),  # Use track_id as layout code
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m505 |[0m                         defaults=layout_defaults,
[1m[94m506 |[0m                     )
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m519[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m517 |[0m                         created_sim_layouts += 1
[1m[94m518 |[0m
[1m[94m519 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m520 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
[1m[94m521 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m520[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m519 |[0m             except Exception as e:
[1m[94m520 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m521 |[0m                 continue
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m520[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m519 |[0m             except Exception as e:
[1m[94m520 |[0m                 logger.error(f"Error processing track {track_name}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m521 |[0m                 continue
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m525[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m523 |[0m         self.stdout.write(
[1m[94m524 |[0m             self.style.SUCCESS(
[1m[94m525 |[0m                 f"Tracks: Created {created_track_models} models, {created_sim_tracks} sim tracks, "
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m526 |[0m                 f"{created_sim_layouts} layouts. Updated {updated_track_models} models, "
[1m[94m527 |[0m                 f"{updated_sim_tracks} sim tracks, {updated_sim_layouts} layouts.",
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m526[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m524 |[0m             self.style.SUCCESS(
[1m[94m525 |[0m                 f"Tracks: Created {created_track_models} models, {created_sim_tracks} sim tracks, "
[1m[94m526 |[0m                 f"{created_sim_layouts} layouts. Updated {updated_track_models} models, "
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m527 |[0m                 f"{updated_sim_tracks} sim tracks, {updated_sim_layouts} layouts.",
[1m[94m528 |[0m             ),
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m568[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m567 |[0m     def _parse_location_country(self, location: str) -> str:
[1m[94m568 |[0m         """Parse country from location string (e.g., 'Lakeville, Connecticut, USA' -> 'USA')"""
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m569 |[0m         if not location:
[1m[94m570 |[0m             return ""
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m635[36m:[0m20[36m:[0m [1;31mPTH110[0m `os.path.exists()` should be replaced by `Path.exists()`
    [1m[94m|[0m
[1m[94m633 |[0m         try:
[1m[94m634 |[0m             if current_image and hasattr(current_image, "path") and current_image.path:
[1m[94m635 |[0m                 if os.path.exists(current_image.path):
    [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^^[0m [1m[91mPTH110[0m
[1m[94m636 |[0m                     return False  # File exists, no need to re-download
[1m[94m637 |[0m         except (ValueError, OSError):
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m643[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (136 > 88)
    [1m[94m|[0m
[1m[94m641 |[0m [1m[94m…[0mcan't verify file existence
[1m[94m642 |[0m [1m[94m…[0m
[1m[94m643 |[0m [1m[94m…[0m str, field_name: str, car_name: str, folder: str | None = None) -> ContentFile | None:
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m644 |[0m [1m[94m…[0m
[1m[94m645 |[0m [1m[94m…[0m a ContentFile for saving to ImageField.
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m645[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m643 |[0m     def _download_and_save_image(self, image_url: str, field_name: str, car_name: str, folder: str | None = None) -> ContentFile | No[1m[94m…[0m
[1m[94m644 |[0m         """
[1m[94m645 |[0m         Download an image from iRacing and return a ContentFile for saving to ImageField.
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m646 |[0m
[1m[94m647 |[0m         Args:
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m663[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m661 |[0m                 full_url = f"https://images-static.iracing.com{image_url}"
[1m[94m662 |[0m             elif not image_url.startswith("http"):
[1m[94m663 |[0m                 # Handle filenames like "skipbarberformula2000-small.jpg" using provided folder
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m664 |[0m                 if folder:
[1m[94m665 |[0m                     full_url = f"https://images-static.iracing.com{folder}/{image_url}"
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m668[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m666 |[0m                 # Fallback: Extract car name by removing -small/-large suffix
[1m[94m667 |[0m                 elif "-small." in image_url or "-large." in image_url:
[1m[94m668 |[0m                     car_folder = image_url.rsplit("-", 1)[0]  # Remove -small/-large part
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m669 |[0m                     full_url = f"https://images-static.iracing.com/img/cars/{car_folder}/{image_url}"
[1m[94m670 |[0m                 else:
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m689[36m:[0m13[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
    [1m[94m|[0m
[1m[94m688 |[0m             self.stdout.write(f"    Downloaded {field_name}: {filename}")
[1m[94m689 |[0m             return content_file
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m690 |[0m
[1m[94m691 |[0m         except requests.RequestException as e:
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m693[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m691 |[0m         except requests.RequestException as e:
[1m[94m692 |[0m             self.stdout.write(
[1m[94m693 |[0m                 self.style.WARNING(f"    Failed to download {field_name} from {image_url}: {e}"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m694 |[0m             )
[1m[94m695 |[0m             return None
    [1m[94m|[0m

[1msimlane/sim/management/commands/load_iracing_data.py[0m[36m:[0m696[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m694 |[0m             )
[1m[94m695 |[0m             return None
[1m[94m696 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m697 |[0m             self.stdout.write(
[1m[94m698 |[0m                 self.style.WARNING(f"    Error processing {field_name} image: {e}"),
    [1m[94m|[0m

[1msimlane/sim/middleware.py[0m[36m:[0m17[36m:[0m5[36m:[0m [1;31mS110[0m `try`-`except`-`pass` detected, consider logging the exception
   [1m[94m|[0m
[1m[94m15 |[0m           if user and user.is_active:
[1m[94m16 |[0m               return user
[1m[94m17 |[0m [1m[91m/[0m     except Exception:
[1m[94m18 |[0m [1m[91m|[0m         pass
   [1m[94m|[0m [1m[91m|____________^[0m [1m[91mS110[0m
[1m[94m19 |[0m       return AnonymousUser()
   [1m[94m|[0m

[1msimlane/sim/middleware.py[0m[36m:[0m17[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m15 |[0m         if user and user.is_active:
[1m[94m16 |[0m             return user
[1m[94m17 |[0m     except Exception:
   [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m18 |[0m         pass
[1m[94m19 |[0m     return AnonymousUser()
   [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m213[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m211 |[0m         if self.linked_user:
[1m[94m212 |[0m             from django.urls import reverse
[1m[94m213 |[0m             return reverse("users:profile_sim_profile_manage", kwargs={"profile_id": self.pk})
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m214 |[0m         return None
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m234[36m:[0m34[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m232 |[0m         return self.linked_user == user
[1m[94m233 |[0m
[1m[94m234 |[0m     def link_to_user(self, user, verified=False):
    [1m[94m|[0m                                  [1m[91m^^^^^^^^[0m [1m[91mFBT002[0m
[1m[94m235 |[0m         """Link this profile to a user"""
[1m[94m236 |[0m         from django.utils import timezone
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m239[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m238 |[0m         if self.linked_user and self.linked_user != user:
[1m[94m239 |[0m             raise ValueError(f"Profile already linked to {self.linked_user}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m240 |[0m
[1m[94m241 |[0m         self.linked_user = user
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m239[36m:[0m30[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m238 |[0m         if self.linked_user and self.linked_user != user:
[1m[94m239 |[0m             raise ValueError(f"Profile already linked to {self.linked_user}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m240 |[0m
[1m[94m241 |[0m         self.linked_user = user
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/sim/models.py[0m[36m:[0m279[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (112 > 88)
    [1m[94m|[0m
[1m[94m277 |[0m     name = models.CharField(max_length=100)
[1m[94m278 |[0m     slug = models.SlugField(max_length=120, blank=True)
[1m[94m279 |[0m     short_name = models.CharField(max_length=50, blank=True, help_text="Short display name (e.g., 'GT3 Class')")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m280 |[0m     category = models.CharField(max_length=100, blank=True)
[1m[94m281 |[0m     description = models.TextField(blank=True)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m293[36m:[0m18[36m:[0m [1;31mDJ001[0m Avoid using `null=True` on string-based fields such as `CharField`
    [1m[94m|[0m
[1m[94m291 |[0m           blank=True,
[1m[94m292 |[0m       )
[1m[94m293 |[0m       sim_api_id = models.CharField(
    [1m[94m|[0m  [1m[91m__________________^[0m
[1m[94m294 |[0m [1m[91m|[0m         max_length=50,
[1m[94m295 |[0m [1m[91m|[0m         help_text="Car class ID from simulator API (e.g., car_class_id from iRacing)",
[1m[94m296 |[0m [1m[91m|[0m         null=True,
[1m[94m297 |[0m [1m[91m|[0m         blank=True,
[1m[94m298 |[0m [1m[91m|[0m     )
    [1m[94m|[0m [1m[91m|_____^[0m [1m[91mDJ001[0m
[1m[94m299 |[0m
[1m[94m300 |[0m       # Additional API fields
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m316[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m314 |[0m         blank=True,
[1m[94m315 |[0m         default=list,
[1m[94m316 |[0m         help_text="Array of car sim_api_ids in this class (from cars_in_class API field)",
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m317 |[0m     )
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m358[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m356 |[0m     slug = models.SlugField(max_length=280, blank=True)
[1m[94m357 |[0m     manufacturer = models.CharField(max_length=255)  # car_make (e.g., "Pontiac")
[1m[94m358 |[0m     full_name = models.CharField(max_length=255, blank=True)  # car_name from API (e.g., "Pontiac Solstice")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m359 |[0m     abbreviated_name = models.CharField(max_length=20, blank=True)  # car_name_abbreviated (e.g., "SOL")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m359[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m357 |[0m     manufacturer = models.CharField(max_length=255)  # car_make (e.g., "Pontiac")
[1m[94m358 |[0m     full_name = models.CharField(max_length=255, blank=True)  # car_name from API (e.g., "Pontiac Solstice")
[1m[94m359 |[0m     abbreviated_name = models.CharField(max_length=20, blank=True)  # car_name_abbreviated (e.g., "SOL")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m360 |[0m
[1m[94m361 |[0m     # GROUP 2: Categorization
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m381[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m380 |[0m     # GROUP 3: Technical Specifications (Base Car Properties)
[1m[94m381 |[0m     horsepower = models.IntegerField(null=True, blank=True, help_text="HP from iRacing API")
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m382 |[0m     weight_lbs = models.IntegerField(null=True, blank=True, help_text="Car weight in pounds")
[1m[94m383 |[0m     has_headlights = models.BooleanField(default=False, help_text="Whether car has headlights")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m382[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m380 |[0m     # GROUP 3: Technical Specifications (Base Car Properties)
[1m[94m381 |[0m     horsepower = models.IntegerField(null=True, blank=True, help_text="HP from iRacing API")
[1m[94m382 |[0m     weight_lbs = models.IntegerField(null=True, blank=True, help_text="Car weight in pounds")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m383 |[0m     has_headlights = models.BooleanField(default=False, help_text="Whether car has headlights")
[1m[94m384 |[0m     has_multiple_dry_tire_types = models.BooleanField(default=False, help_text="Multiple dry tire compounds available")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m383[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m381 |[0m     horsepower = models.IntegerField(null=True, blank=True, help_text="HP from iRacing API")
[1m[94m382 |[0m     weight_lbs = models.IntegerField(null=True, blank=True, help_text="Car weight in pounds")
[1m[94m383 |[0m     has_headlights = models.BooleanField(default=False, help_text="Whether car has headlights")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m384 |[0m     has_multiple_dry_tire_types = models.BooleanField(default=False, help_text="Multiple dry tire compounds available")
[1m[94m385 |[0m     has_rain_capable_tire_types = models.BooleanField(default=False, help_text="Rain tires available")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m384[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
    [1m[94m|[0m
[1m[94m382 |[0m     weight_lbs = models.IntegerField(null=True, blank=True, help_text="Car weight in pounds")
[1m[94m383 |[0m     has_headlights = models.BooleanField(default=False, help_text="Whether car has headlights")
[1m[94m384 |[0m     has_multiple_dry_tire_types = models.BooleanField(default=False, help_text="Multiple dry tire compounds available")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m385 |[0m     has_rain_capable_tire_types = models.BooleanField(default=False, help_text="Rain tires available")
[1m[94m386 |[0m     rain_enabled = models.BooleanField(default=False, help_text="Can race in rain conditions")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m385[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m383 |[0m     has_headlights = models.BooleanField(default=False, help_text="Whether car has headlights")
[1m[94m384 |[0m     has_multiple_dry_tire_types = models.BooleanField(default=False, help_text="Multiple dry tire compounds available")
[1m[94m385 |[0m     has_rain_capable_tire_types = models.BooleanField(default=False, help_text="Rain tires available")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m386 |[0m     rain_enabled = models.BooleanField(default=False, help_text="Can race in rain conditions")
[1m[94m387 |[0m     ai_enabled = models.BooleanField(default=True, help_text="AI can drive this car")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m386[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m384 |[0m     has_multiple_dry_tire_types = models.BooleanField(default=False, help_text="Multiple dry tire compounds available")
[1m[94m385 |[0m     has_rain_capable_tire_types = models.BooleanField(default=False, help_text="Rain tires available")
[1m[94m386 |[0m     rain_enabled = models.BooleanField(default=False, help_text="Can race in rain conditions")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m387 |[0m     ai_enabled = models.BooleanField(default=True, help_text="AI can drive this car")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m458[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (117 > 88)
    [1m[94m|[0m
[1m[94m456 |[0m         sim_cars = [sc for sc in list(self.sim_cars.all()) if sc.is_active]
[1m[94m457 |[0m         if simulator_preference:
[1m[94m458 |[0m             preferred_sim_cars = [sc for sc in sim_cars if simulator_preference.lower() in sc.simulator.name.lower()]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m459 |[0m             for sim_car in preferred_sim_cars:
[1m[94m460 |[0m                 image = getattr(sim_car, image_field, None)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m489[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m487 |[0m         sim_cars_manager = self.sim_cars
[1m[94m488 |[0m         sim_car_ct = ContentType.objects.get_for_model(sim_cars_manager.model)
[1m[94m489 |[0m         sim_car_ids = list(sim_cars_manager.filter(is_active=True).values_list("id", flat=True))
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m490 |[0m
[1m[94m491 |[0m         if simulator_preference:
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m502[36m:[0m48[36m:[0m [1;31mA001[0m Variable `id` is shadowing a Python builtin
    [1m[94m|[0m
[1m[94m500 |[0m                 gallery_images = MediaGallery.objects.filter(
[1m[94m501 |[0m                     content_type=sim_car_ct,
[1m[94m502 |[0m                     object_id__in=[str(id) for id in preferred_sim_car_ids],
    [1m[94m|[0m                                                [1m[91m^^[0m [1m[91mA001[0m
[1m[94m503 |[0m                     gallery_type=gallery_type,
[1m[94m504 |[0m                 ).order_by("order")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m511[36m:[0m40[36m:[0m [1;31mA001[0m Variable `id` is shadowing a Python builtin
    [1m[94m|[0m
[1m[94m509 |[0m         return MediaGallery.objects.filter(
[1m[94m510 |[0m             content_type=sim_car_ct,
[1m[94m511 |[0m             object_id__in=[str(id) for id in sim_car_ids],
    [1m[94m|[0m                                        [1m[91m^^[0m [1m[91mA001[0m
[1m[94m512 |[0m             gallery_type=gallery_type,
[1m[94m513 |[0m         ).order_by("order")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m515[36m:[0m5[36m:[0m [1;31mDJ012[0m Order of model's inner classes, methods, and fields does not follow the Django Style Guide: `save` method should come before custom method
    [1m[94m|[0m
[1m[94m513 |[0m           ).order_by("order")
[1m[94m514 |[0m
[1m[94m515 |[0m [1m[91m/[0m     def save(self, *args, **kwargs):
[1m[94m516 |[0m [1m[91m|[0m         if not self.slug:
[1m[94m517 |[0m [1m[91m|[0m             self.slug = slugify(f"{self.manufacturer} {self.name}")
[1m[94m518 |[0m [1m[91m|[0m             # Ensure uniqueness
[1m[94m519 |[0m [1m[91m|[0m             counter = 1
[1m[94m520 |[0m [1m[91m|[0m             original_slug = self.slug
[1m[94m521 |[0m [1m[91m|[0m             while CarModel.objects.filter(slug=self.slug).exists():
[1m[94m522 |[0m [1m[91m|[0m                 self.slug = f"{original_slug}-{counter}"
[1m[94m523 |[0m [1m[91m|[0m                 counter += 1
[1m[94m524 |[0m [1m[91m|[0m         super().save(*args, **kwargs)
    [1m[94m|[0m [1m[91m|_____________________________________^[0m [1m[91mDJ012[0m
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m543[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m542 |[0m     # GROUP 1: API IDs - CRITICAL for ownership tracking
[1m[94m543 |[0m     sim_api_id = models.CharField(max_length=255, help_text="car_id from iRacing API for API calls")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m544 |[0m     package_id = models.IntegerField(help_text="package_id from iRacing API for ownership tracking")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m544[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m542 |[0m     # GROUP 1: API IDs - CRITICAL for ownership tracking
[1m[94m543 |[0m     sim_api_id = models.CharField(max_length=255, help_text="car_id from iRacing API for API calls")
[1m[94m544 |[0m     package_id = models.IntegerField(help_text="package_id from iRacing API for ownership tracking")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m545 |[0m
[1m[94m546 |[0m     # Display and configuration
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m547[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (114 > 88)
    [1m[94m|[0m
[1m[94m546 |[0m     # Display and configuration
[1m[94m547 |[0m     display_name = models.CharField(max_length=255, blank=True, help_text="Full display name from car_name field")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m548 |[0m     bop_version = models.CharField(max_length=50, blank=True)
[1m[94m549 |[0m     is_active = models.BooleanField(default=True)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m552[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m551 |[0m     # GROUP 3: BOP (Balance of Performance) Adjustments - Simulator Specific
[1m[94m552 |[0m     max_power_adjust_pct = models.IntegerField(default=0, help_text="Maximum power adjustment percentage")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m553 |[0m     min_power_adjust_pct = models.IntegerField(default=0, help_text="Minimum power adjustment percentage")
[1m[94m554 |[0m     max_weight_penalty_kg = models.IntegerField(default=0, help_text="Maximum weight penalty in kg")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m553[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m551 |[0m     # GROUP 3: BOP (Balance of Performance) Adjustments - Simulator Specific
[1m[94m552 |[0m     max_power_adjust_pct = models.IntegerField(default=0, help_text="Maximum power adjustment percentage")
[1m[94m553 |[0m     min_power_adjust_pct = models.IntegerField(default=0, help_text="Minimum power adjustment percentage")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m554 |[0m     max_weight_penalty_kg = models.IntegerField(default=0, help_text="Maximum weight penalty in kg")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m554[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m552 |[0m     max_power_adjust_pct = models.IntegerField(default=0, help_text="Maximum power adjustment percentage")
[1m[94m553 |[0m     min_power_adjust_pct = models.IntegerField(default=0, help_text="Minimum power adjustment percentage")
[1m[94m554 |[0m     max_weight_penalty_kg = models.IntegerField(default=0, help_text="Maximum weight penalty in kg")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m555 |[0m
[1m[94m556 |[0m     # GROUP 4: Pricing & Ownership - Simulator Specific
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m557[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m556 |[0m     # GROUP 4: Pricing & Ownership - Simulator Specific
[1m[94m557 |[0m     price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, help_text="Price in USD")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m558 |[0m     price_display = models.CharField(max_length=50, blank=True, help_text="Formatted price string")
[1m[94m559 |[0m     free_with_subscription = models.BooleanField(default=False, help_text="Free with base subscription")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m558[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m556 |[0m     # GROUP 4: Pricing & Ownership - Simulator Specific
[1m[94m557 |[0m     price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, help_text="Price in USD")
[1m[94m558 |[0m     price_display = models.CharField(max_length=50, blank=True, help_text="Formatted price string")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m559 |[0m     free_with_subscription = models.BooleanField(default=False, help_text="Free with base subscription")
[1m[94m560 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased (is_ps_purchasable)")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m559[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m557 |[0m     price = models.DecimalField(max_digits=10, decimal_places=2, null=True, blank=True, help_text="Price in USD")
[1m[94m558 |[0m     price_display = models.CharField(max_length=50, blank=True, help_text="Formatted price string")
[1m[94m559 |[0m     free_with_subscription = models.BooleanField(default=False, help_text="Free with base subscription")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m560 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased (is_ps_purchasable)")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m560[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m558 |[0m     price_display = models.CharField(max_length=50, blank=True, help_text="Formatted price string")
[1m[94m559 |[0m     free_with_subscription = models.BooleanField(default=False, help_text="Free with base subscription")
[1m[94m560 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased (is_ps_purchasable)")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m561 |[0m
[1m[94m562 |[0m     # GROUP 6: Media Fields - Simulator Specific Images
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m563[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m562 |[0m     # GROUP 6: Media Fields - Simulator Specific Images
[1m[94m563 |[0m     logo = models.ImageField(upload_to="cars/logos/", blank=True, null=True, help_text="Car/manufacturer logo")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m564 |[0m     small_image = models.ImageField(upload_to="cars/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
[1m[94m565 |[0m     large_image = models.ImageField(upload_to="cars/images/", blank=True, null=True, help_text="Main/hero image")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m564[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (117 > 88)
    [1m[94m|[0m
[1m[94m562 |[0m     # GROUP 6: Media Fields - Simulator Specific Images
[1m[94m563 |[0m     logo = models.ImageField(upload_to="cars/logos/", blank=True, null=True, help_text="Car/manufacturer logo")
[1m[94m564 |[0m     small_image = models.ImageField(upload_to="cars/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m565 |[0m     large_image = models.ImageField(upload_to="cars/images/", blank=True, null=True, help_text="Main/hero image")
[1m[94m566 |[0m     pit_data = models.OneToOneField(
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m565[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m563 |[0m     logo = models.ImageField(upload_to="cars/logos/", blank=True, null=True, help_text="Car/manufacturer logo")
[1m[94m564 |[0m     small_image = models.ImageField(upload_to="cars/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
[1m[94m565 |[0m     large_image = models.ImageField(upload_to="cars/images/", blank=True, null=True, help_text="Main/hero image")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m566 |[0m     pit_data = models.OneToOneField(
[1m[94m567 |[0m         PitData,
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m593[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m592 |[0m     def __str__(self):
[1m[94m593 |[0m         return f"{self.simulator.name}: {self.display_name or self.car_model.full_name or self.car_model.name}"
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m607[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m606 |[0m     # Basic track categorization - universal across simulators
[1m[94m607 |[0m     category = models.CharField(max_length=20, blank=True, help_text="Track category: 'road' or 'oval'")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m608 |[0m     time_zone = models.CharField(max_length=50, blank=True, help_text="Track time zone (e.g., 'America/New_York')")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m608[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (115 > 88)
    [1m[94m|[0m
[1m[94m606 |[0m     # Basic track categorization - universal across simulators
[1m[94m607 |[0m     category = models.CharField(max_length=20, blank=True, help_text="Track category: 'road' or 'oval'")
[1m[94m608 |[0m     time_zone = models.CharField(max_length=50, blank=True, help_text="Track time zone (e.g., 'America/New_York')")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m609 |[0m
[1m[94m610 |[0m     class Meta:
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m648[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
    [1m[94m|[0m
[1m[94m646 |[0m         sim_tracks = [st for st in list(self.sim_tracks.all()) if st.is_active]
[1m[94m647 |[0m         if simulator_preference:
[1m[94m648 |[0m             preferred = [st for st in sim_tracks if simulator_preference.lower() in st.simulator.name.lower()]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m649 |[0m             for sim_track in preferred:
[1m[94m650 |[0m                 image = getattr(sim_track, image_field, None)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m678[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (116 > 88)
    [1m[94m|[0m
[1m[94m677 |[0m     # Ownership & Pricing - simulator-specific
[1m[94m678 |[0m     package_id = models.CharField(max_length=50, blank=True, help_text="Package ID from API for ownership tracking")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m679 |[0m     price = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True, help_text="Track price in USD")
[1m[94m680 |[0m     is_free = models.BooleanField(default=False, help_text="Free with subscription")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m679[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (118 > 88)
    [1m[94m|[0m
[1m[94m677 |[0m     # Ownership & Pricing - simulator-specific
[1m[94m678 |[0m     package_id = models.CharField(max_length=50, blank=True, help_text="Package ID from API for ownership tracking")
[1m[94m679 |[0m     price = models.DecimalField(max_digits=8, decimal_places=2, null=True, blank=True, help_text="Track price in USD")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m680 |[0m     is_free = models.BooleanField(default=False, help_text="Free with subscription")
[1m[94m681 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m682[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m680 |[0m     is_free = models.BooleanField(default=False, help_text="Free with subscription")
[1m[94m681 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased")
[1m[94m682 |[0m     rain_enabled = models.BooleanField(default=False, help_text="Rain weather supported")
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m683 |[0m     search_filters = models.CharField(max_length=500, blank=True, help_text="Search filters from API for optimization")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m683[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
    [1m[94m|[0m
[1m[94m681 |[0m     is_purchasable = models.BooleanField(default=True, help_text="Can be purchased")
[1m[94m682 |[0m     rain_enabled = models.BooleanField(default=False, help_text="Rain weather supported")
[1m[94m683 |[0m     search_filters = models.CharField(max_length=500, blank=True, help_text="Search filters from API for optimization")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m684 |[0m
[1m[94m685 |[0m     # Media Fields
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m686[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m685 |[0m     # Media Fields
[1m[94m686 |[0m     logo = models.ImageField(upload_to="tracks/logos/", blank=True, null=True, help_text="Track logo")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m687 |[0m     small_image = models.ImageField(upload_to="tracks/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
[1m[94m688 |[0m     large_image = models.ImageField(upload_to="tracks/images/", blank=True, null=True, help_text="Main/hero image")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m687[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
    [1m[94m|[0m
[1m[94m685 |[0m     # Media Fields
[1m[94m686 |[0m     logo = models.ImageField(upload_to="tracks/logos/", blank=True, null=True, help_text="Track logo")
[1m[94m687 |[0m     small_image = models.ImageField(upload_to="tracks/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m688 |[0m     large_image = models.ImageField(upload_to="tracks/images/", blank=True, null=True, help_text="Main/hero image")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m688[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (115 > 88)
    [1m[94m|[0m
[1m[94m686 |[0m     logo = models.ImageField(upload_to="tracks/logos/", blank=True, null=True, help_text="Track logo")
[1m[94m687 |[0m     small_image = models.ImageField(upload_to="tracks/thumbnails/", blank=True, null=True, help_text="Thumbnail image")
[1m[94m688 |[0m     large_image = models.ImageField(upload_to="tracks/images/", blank=True, null=True, help_text="Main/hero image")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m689 |[0m
[1m[94m690 |[0m     is_active = models.BooleanField(default=True)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m747[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m745 |[0m         help_text="Specific layout type (road, oval, dirt_road, dirt_oval, etc.)",
[1m[94m746 |[0m     )
[1m[94m747 |[0m     retired = models.BooleanField(default=False, help_text="Layout is retired/deprecated")
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m748 |[0m
[1m[94m749 |[0m     # Technical specifications - layout-specific
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m750[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m749 |[0m     # Technical specifications - layout-specific
[1m[94m750 |[0m     max_cars = models.IntegerField(null=True, blank=True, help_text="Maximum cars supported on this layout")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m751 |[0m     grid_stalls = models.IntegerField(null=True, blank=True, help_text="Number of grid starting positions")
[1m[94m752 |[0m     number_pitstalls = models.IntegerField(null=True, blank=True, help_text="Number of pit stalls available")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m751[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
    [1m[94m|[0m
[1m[94m749 |[0m     # Technical specifications - layout-specific
[1m[94m750 |[0m     max_cars = models.IntegerField(null=True, blank=True, help_text="Maximum cars supported on this layout")
[1m[94m751 |[0m     grid_stalls = models.IntegerField(null=True, blank=True, help_text="Number of grid starting positions")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m752 |[0m     number_pitstalls = models.IntegerField(null=True, blank=True, help_text="Number of pit stalls available")
[1m[94m753 |[0m     corners_per_lap = models.IntegerField(null=True, blank=True, help_text="Number of corners per lap")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m752[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
    [1m[94m|[0m
[1m[94m750 |[0m     max_cars = models.IntegerField(null=True, blank=True, help_text="Maximum cars supported on this layout")
[1m[94m751 |[0m     grid_stalls = models.IntegerField(null=True, blank=True, help_text="Number of grid starting positions")
[1m[94m752 |[0m     number_pitstalls = models.IntegerField(null=True, blank=True, help_text="Number of pit stalls available")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m753 |[0m     corners_per_lap = models.IntegerField(null=True, blank=True, help_text="Number of corners per lap")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m753[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m751 |[0m     grid_stalls = models.IntegerField(null=True, blank=True, help_text="Number of grid starting positions")
[1m[94m752 |[0m     number_pitstalls = models.IntegerField(null=True, blank=True, help_text="Number of pit stalls available")
[1m[94m753 |[0m     corners_per_lap = models.IntegerField(null=True, blank=True, help_text="Number of corners per lap")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m754 |[0m
[1m[94m755 |[0m     # Session configuration - layout-specific
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m756[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m755 |[0m     # Session configuration - layout-specific
[1m[94m756 |[0m     qualify_laps = models.IntegerField(null=True, blank=True, help_text="Number of qualifying laps")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m757 |[0m     allow_rolling_start = models.BooleanField(default=True, help_text="Whether rolling starts are allowed")
[1m[94m758 |[0m     pit_road_speed_limit = models.IntegerField(null=True, blank=True, help_text="Pit road speed limit (mph/kph)")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m757[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (107 > 88)
    [1m[94m|[0m
[1m[94m755 |[0m     # Session configuration - layout-specific
[1m[94m756 |[0m     qualify_laps = models.IntegerField(null=True, blank=True, help_text="Number of qualifying laps")
[1m[94m757 |[0m     allow_rolling_start = models.BooleanField(default=True, help_text="Whether rolling starts are allowed")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m758 |[0m     pit_road_speed_limit = models.IntegerField(null=True, blank=True, help_text="Pit road speed limit (mph/kph)")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m758[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m756 |[0m     qualify_laps = models.IntegerField(null=True, blank=True, help_text="Number of qualifying laps")
[1m[94m757 |[0m     allow_rolling_start = models.BooleanField(default=True, help_text="Whether rolling starts are allowed")
[1m[94m758 |[0m     pit_road_speed_limit = models.IntegerField(null=True, blank=True, help_text="Pit road speed limit (mph/kph)")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m759 |[0m
[1m[94m760 |[0m     # Lighting capabilities - layout-specific
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m761[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m760 |[0m     # Lighting capabilities - layout-specific
[1m[94m761 |[0m     night_lighting = models.BooleanField(default=False, help_text="Track has night lighting capabilities")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m762 |[0m     fully_lit = models.BooleanField(default=False, help_text="Track is fully lit for night racing")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m762[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m760 |[0m     # Lighting capabilities - layout-specific
[1m[94m761 |[0m     night_lighting = models.BooleanField(default=False, help_text="Track has night lighting capabilities")
[1m[94m762 |[0m     fully_lit = models.BooleanField(default=False, help_text="Track is fully lit for night racing")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m763 |[0m
[1m[94m764 |[0m     pit_data = models.OneToOneField(
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m825[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (122 > 88)
    [1m[94m|[0m
[1m[94m824 |[0m     # Enhanced simulator-specific fields
[1m[94m825 |[0m     external_series_id = models.IntegerField(unique=True, null=True, blank=True, help_text="Series ID from simulator API")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m826 |[0m     simulator = models.ForeignKey(
[1m[94m827 |[0m         Simulator,
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m834[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m832 |[0m         help_text="Simulator this series belongs to (if simulator-specific)",
[1m[94m833 |[0m     )
[1m[94m834 |[0m     category = models.CharField(max_length=50, blank=True, help_text="Track category: 'oval', 'road', etc.")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m835 |[0m     license_group = models.IntegerField(null=True, blank=True, help_text="Required license group")
[1m[94m836 |[0m     is_official = models.BooleanField(default=True, help_text="Official series")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m835[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m833 |[0m     )
[1m[94m834 |[0m     category = models.CharField(max_length=50, blank=True, help_text="Track category: 'oval', 'road', etc.")
[1m[94m835 |[0m     license_group = models.IntegerField(null=True, blank=True, help_text="Required license group")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m836 |[0m     is_official = models.BooleanField(default=True, help_text="Official series")
[1m[94m837 |[0m     multiclass = models.BooleanField(default=False, help_text="Multi-class racing")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m838[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m836 |[0m     is_official = models.BooleanField(default=True, help_text="Official series")
[1m[94m837 |[0m     multiclass = models.BooleanField(default=False, help_text="Multi-class racing")
[1m[94m838 |[0m     cross_license = models.BooleanField(default=False, help_text="Cross-license allowed")
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m839 |[0m
[1m[94m840 |[0m     # Series-wide settings
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m841[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m840 |[0m     # Series-wide settings
[1m[94m841 |[0m     car_switching = models.BooleanField(default=False, help_text="Car switching allowed")
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m842 |[0m     fixed_setup = models.BooleanField(default=False, help_text="Fixed setup series")
[1m[94m843 |[0m     incident_limit = models.IntegerField(null=True, blank=True, help_text="Incident limit per race")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m843[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m841 |[0m     car_switching = models.BooleanField(default=False, help_text="Car switching allowed")
[1m[94m842 |[0m     fixed_setup = models.BooleanField(default=False, help_text="Fixed setup series")
[1m[94m843 |[0m     incident_limit = models.IntegerField(null=True, blank=True, help_text="Incident limit per race")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m844 |[0m     max_team_drivers = models.IntegerField(default=1, help_text="Maximum drivers per team")
[1m[94m845 |[0m     region_competition = models.BooleanField(default=True, help_text="Region-based competition")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m844[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m842 |[0m     fixed_setup = models.BooleanField(default=False, help_text="Fixed setup series")
[1m[94m843 |[0m     incident_limit = models.IntegerField(null=True, blank=True, help_text="Incident limit per race")
[1m[94m844 |[0m     max_team_drivers = models.IntegerField(default=1, help_text="Maximum drivers per team")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m845 |[0m     region_competition = models.BooleanField(default=True, help_text="Region-based competition")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m845[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m843 |[0m     incident_limit = models.IntegerField(null=True, blank=True, help_text="Incident limit per race")
[1m[94m844 |[0m     max_team_drivers = models.IntegerField(default=1, help_text="Maximum drivers per team")
[1m[94m845 |[0m     region_competition = models.BooleanField(default=True, help_text="Region-based competition")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m846 |[0m
[1m[94m847 |[0m     # Car class restrictions (simplified approach)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m852[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m850 |[0m         blank=True,
[1m[94m851 |[0m         default=list,
[1m[94m852 |[0m         help_text="Array of car class sim_api_ids allowed in this series (from car_class_ids API field)",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m853 |[0m     )
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m894[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m893 |[0m     # Core season identification
[1m[94m894 |[0m     external_season_id = models.IntegerField(unique=True, help_text="Season ID from simulator API")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m895 |[0m     name = models.CharField(max_length=255)
[1m[94m896 |[0m     slug = models.SlugField(max_length=300, blank=True)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m941[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m939 |[0m class CarRestriction(models.Model):
[1m[94m940 |[0m     id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
[1m[94m941 |[0m     event = models.ForeignKey("Event", on_delete=models.CASCADE, related_name="car_restrictions")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m942 |[0m     sim_car = models.ForeignKey(SimCar, on_delete=models.CASCADE, related_name="event_restrictions")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m942[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m940 |[0m     id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
[1m[94m941 |[0m     event = models.ForeignKey("Event", on_delete=models.CASCADE, related_name="car_restrictions")
[1m[94m942 |[0m     sim_car = models.ForeignKey(SimCar, on_delete=models.CASCADE, related_name="event_restrictions")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m943 |[0m
[1m[94m944 |[0m     # BOP restrictions per car per week (from iRacing car_restrictions data)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m945[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m944 |[0m     # BOP restrictions per car per week (from iRacing car_restrictions data)
[1m[94m945 |[0m     max_dry_tire_sets = models.IntegerField(default=0, help_text="Maximum dry tire sets allowed")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m946 |[0m     max_pct_fuel_fill = models.IntegerField(default=100, help_text="Maximum fuel fill percentage")
[1m[94m947 |[0m     power_adjust_pct = models.FloatField(default=0.0, help_text="Power adjustment percentage (can be decimal)")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m946[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m944 |[0m     # BOP restrictions per car per week (from iRacing car_restrictions data)
[1m[94m945 |[0m     max_dry_tire_sets = models.IntegerField(default=0, help_text="Maximum dry tire sets allowed")
[1m[94m946 |[0m     max_pct_fuel_fill = models.IntegerField(default=100, help_text="Maximum fuel fill percentage")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m947 |[0m     power_adjust_pct = models.FloatField(default=0.0, help_text="Power adjustment percentage (can be decimal)")
[1m[94m948 |[0m     weight_penalty_kg = models.IntegerField(default=0, help_text="Weight penalty in kilograms")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m947[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m945 |[0m     max_dry_tire_sets = models.IntegerField(default=0, help_text="Maximum dry tire sets allowed")
[1m[94m946 |[0m     max_pct_fuel_fill = models.IntegerField(default=100, help_text="Maximum fuel fill percentage")
[1m[94m947 |[0m     power_adjust_pct = models.FloatField(default=0.0, help_text="Power adjustment percentage (can be decimal)")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m948 |[0m     weight_penalty_kg = models.IntegerField(default=0, help_text="Weight penalty in kilograms")
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m948[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m946 |[0m     max_pct_fuel_fill = models.IntegerField(default=100, help_text="Maximum fuel fill percentage")
[1m[94m947 |[0m     power_adjust_pct = models.FloatField(default=0.0, help_text="Power adjustment percentage (can be decimal)")
[1m[94m948 |[0m     weight_penalty_kg = models.IntegerField(default=0, help_text="Weight penalty in kilograms")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m949 |[0m
[1m[94m950 |[0m     # Simplified setup restriction
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m951[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m950 |[0m     # Simplified setup restriction
[1m[94m951 |[0m     is_fixed_setup = models.BooleanField(default=False, help_text="Whether this car uses fixed setup")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m952 |[0m
[1m[94m953 |[0m     created_at = models.DateTimeField(auto_now_add=True)
    [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1073[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m1071 |[0m         blank=True,
[1m[94m1072 |[0m         default=list,
[1m[94m1073 |[0m         help_text="Array of car class sim_api_ids allowed in this event (overrides series if set)",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1074 |[0m     )
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1089[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
     [1m[94m|[0m
[1m[94m1088 |[0m     # Track-specific settings
[1m[94m1089 |[0m     category = models.CharField(max_length=20, blank=True, help_text="Track category: 'oval', 'road'")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1090 |[0m     enable_pitlane_collisions = models.BooleanField(default=False)
[1m[94m1091 |[0m     full_course_cautions = models.BooleanField(default=True)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1097[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (117 > 88)
     [1m[94m|[0m
[1m[94m1095 |[0m         null=True,
[1m[94m1096 |[0m         blank=True,
[1m[94m1097 |[0m         help_text="race_time_descriptors from API - e.g., {'first_session_time': '00:45:00', 'repeat_minutes': 120}",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1098 |[0m     )
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1104[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (114 > 88)
     [1m[94m|[0m
[1m[94m1102 |[0m         null=True,
[1m[94m1103 |[0m         blank=True,
[1m[94m1104 |[0m         help_text="Full weather configuration from iRacing API including forecast_options, weather_summary, etc.",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1105 |[0m     )
[1m[94m1106 |[0m     weather_forecast_url = models.URLField(
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1140[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1139 |[0m     # Track state
[1m[94m1140 |[0m     track_state = models.JSONField(null=True, blank=True, help_text="leave_marbles, etc.")
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1141 |[0m
[1m[94m1142 |[0m     # Existing fields
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1177[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m1175 |[0m                 check=(
[1m[94m1176 |[0m                     # Must have exactly one organizer type (or none for imported events)
[1m[94m1177 |[0m                     models.Q(organizing_club__isnull=False, organizing_user__isnull=True) |
     [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m1178 |[0m                     models.Q(organizing_club__isnull=True, organizing_user__isnull=False) |
[1m[94m1179 |[0m                     models.Q(organizing_club__isnull=True, organizing_user__isnull=True)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1178[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m1176 |[0m                     # Must have exactly one organizer type (or none for imported events)
[1m[94m1177 |[0m                     models.Q(organizing_club__isnull=False, organizing_user__isnull=True) |
[1m[94m1178 |[0m                     models.Q(organizing_club__isnull=True, organizing_user__isnull=False) |
     [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m1179 |[0m                     models.Q(organizing_club__isnull=True, organizing_user__isnull=True)
[1m[94m1180 |[0m                 ),
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1248[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1246 |[0m                 if self.visibility == EventVisibility.CLUB_ONLY:
[1m[94m1247 |[0m                     return True  # Any club member can view
[1m[94m1248 |[0m                 if self.visibility in [EventVisibility.INVITE_ONLY, EventVisibility.PRIVATE]:
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1249 |[0m                     return member.can_manage_club()  # Only club managers can view
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1273[36m:[0m9[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1271 |[0m         # Check entry limits (TODO: implement when EventParticipation model is ready)
[1m[94m1272 |[0m         # if self.max_entries:
[1m[94m1273 |[0m         #     current_entries = self.participations.count()
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1274 |[0m         #     if current_entries >= self.max_entries:
[1m[94m1275 |[0m         #         return False
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/sim/models.py[0m[36m:[0m1275[36m:[0m9[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1273 |[0m         #     current_entries = self.participations.count()
[1m[94m1274 |[0m         #     if current_entries >= self.max_entries:
[1m[94m1275 |[0m         #         return False
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1276 |[0m
[1m[94m1277 |[0m         # Check skill requirements (if user has sim profiles)
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/sim/models.py[0m[36m:[0m1462[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
     [1m[94m|[0m
[1m[94m1461 |[0m     def get_bop_restrictions(self, round_number=None):
[1m[94m1462 |[0m         """Get BOP restrictions for a given round_number (replaces legacy race_week logic)."""
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m1463 |[0m         if round_number is None:
[1m[94m1464 |[0m             round_number = self.event.round_number
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1500[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m1498 |[0m class TimeSlot(models.Model):
[1m[94m1499 |[0m     id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
[1m[94m1500 |[0m     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name="time_slots")
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m1501 |[0m     slug = models.SlugField(max_length=300, blank=True)
[1m[94m1502 |[0m     start_time = models.DateTimeField()
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1575[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1573 |[0m     @property
[1m[94m1574 |[0m     def weather_forecast(self):
[1m[94m1575 |[0m         """Return cached weather forecast JSON from the event (legacy RaceWeek logic removed)."""
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1576 |[0m         return self.event.weather_forecast_data
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1692[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1690 |[0m     )
[1m[94m1691 |[0m     time_offset = models.IntegerField(help_text="Minutes from event start")
[1m[94m1692 |[0m     timestamp = models.DateTimeField(help_text="Absolute timestamp for this forecast point")
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1693 |[0m     is_sun_up = models.BooleanField(help_text="True if sun is up at this time")
[1m[94m1694 |[0m     affects_session = models.BooleanField(help_text="True if a session is running at this time")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1694[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1692 |[0m     timestamp = models.DateTimeField(help_text="Absolute timestamp for this forecast point")
[1m[94m1693 |[0m     is_sun_up = models.BooleanField(help_text="True if sun is up at this time")
[1m[94m1694 |[0m     affects_session = models.BooleanField(help_text="True if a session is running at this time")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1695 |[0m
[1m[94m1696 |[0m     # Temperature and Pressure
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1701[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
     [1m[94m|[0m
[1m[94m1699 |[0m     )
[1m[94m1700 |[0m     pressure = models.FloatField(
[1m[94m1701 |[0m         help_text="Atmospheric pressure in hectopascals/hPa (convert from simulator-specific units)",
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1702 |[0m     )
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1706[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1704 |[0m     # Wind
[1m[94m1705 |[0m     wind_speed = models.FloatField(
[1m[94m1706 |[0m         help_text="Wind speed in meters per second (convert from simulator-specific units)",
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1707 |[0m     )
[1m[94m1708 |[0m     wind_direction = models.IntegerField(
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1717[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1715 |[0m     )
[1m[94m1716 |[0m     precipitation_amount = models.FloatField(
[1m[94m1717 |[0m         help_text="Precipitation rate in mm/hour (convert from simulator-specific units)",
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1718 |[0m     )
[1m[94m1719 |[0m     allow_precipitation = models.BooleanField(
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1766[36m:[0m7[36m:[0m [1;31mDJ008[0m Model does not define `__str__` method
     [1m[94m|[0m
[1m[94m1766 |[0m class SimProfileCarOwnership(models.Model):
     [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ008[0m
[1m[94m1767 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_cars")
[1m[94m1768 |[0m     sim_car = models.ForeignKey("sim.SimCar", on_delete=models.CASCADE, related_name="owners")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1767[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
     [1m[94m|[0m
[1m[94m1766 |[0m class SimProfileCarOwnership(models.Model):
[1m[94m1767 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_cars")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1768 |[0m     sim_car = models.ForeignKey("sim.SimCar", on_delete=models.CASCADE, related_name="owners")
[1m[94m1769 |[0m     acquired_at = models.DateTimeField(auto_now_add=True)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1768[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
     [1m[94m|[0m
[1m[94m1766 |[0m class SimProfileCarOwnership(models.Model):
[1m[94m1767 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_cars")
[1m[94m1768 |[0m     sim_car = models.ForeignKey("sim.SimCar", on_delete=models.CASCADE, related_name="owners")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m1769 |[0m     acquired_at = models.DateTimeField(auto_now_add=True)
[1m[94m1770 |[0m     is_favorite = models.BooleanField(default=False)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1779[36m:[0m7[36m:[0m [1;31mDJ008[0m Model does not define `__str__` method
     [1m[94m|[0m
[1m[94m1779 |[0m class SimProfileTrackOwnership(models.Model):
     [1m[94m|[0m       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mDJ008[0m
[1m[94m1780 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_tracks")
[1m[94m1781 |[0m     sim_track = models.ForeignKey("sim.SimTrack", on_delete=models.CASCADE, related_name="owners")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1780[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
     [1m[94m|[0m
[1m[94m1779 |[0m class SimProfileTrackOwnership(models.Model):
[1m[94m1780 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_tracks")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1781 |[0m     sim_track = models.ForeignKey("sim.SimTrack", on_delete=models.CASCADE, related_name="owners")
[1m[94m1782 |[0m     acquired_at = models.DateTimeField(auto_now_add=True)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1781[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
     [1m[94m|[0m
[1m[94m1779 |[0m class SimProfileTrackOwnership(models.Model):
[1m[94m1780 |[0m     sim_profile = models.ForeignKey("sim.SimProfile", on_delete=models.CASCADE, related_name="owned_tracks")
[1m[94m1781 |[0m     sim_track = models.ForeignKey("sim.SimTrack", on_delete=models.CASCADE, related_name="owners")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1782 |[0m     acquired_at = models.DateTimeField(auto_now_add=True)
[1m[94m1783 |[0m     is_favorite = models.BooleanField(default=False)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1804[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1803 |[0m     # Core identifiers (simulator agnostic)
[1m[94m1804 |[0m     subsession_id = models.BigIntegerField(unique=True, help_text="Simulator subsession ID")
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m1805 |[0m     session_id = models.BigIntegerField(null=True, blank=True, help_text="Simulator session ID")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1805[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1803 |[0m     # Core identifiers (simulator agnostic)
[1m[94m1804 |[0m     subsession_id = models.BigIntegerField(unique=True, help_text="Simulator subsession ID")
[1m[94m1805 |[0m     session_id = models.BigIntegerField(null=True, blank=True, help_text="Simulator session ID")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1806 |[0m
[1m[94m1807 |[0m     # Event summary statistics (universal)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1820[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1818 |[0m     )
[1m[94m1819 |[0m
[1m[94m1820 |[0m     # Timing (universal)
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1821 |[0m     start_time = models.DateTimeField(help_text="Race start time")
[1m[94m1822 |[0m     end_time = models.DateTimeField(help_text="Race end time")
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/sim/models.py[0m[36m:[0m1842[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
     [1m[94m|[0m
[1m[94m1841 |[0m     # Processing status
[1m[94m1842 |[0m     results_fetched_at = models.DateTimeField(auto_now_add=True, help_text="When results were fetched")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1843 |[0m     is_processed = models.BooleanField(default=False, help_text="Whether results have been processed")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1843[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
     [1m[94m|[0m
[1m[94m1841 |[0m     # Processing status
[1m[94m1842 |[0m     results_fetched_at = models.DateTimeField(auto_now_add=True, help_text="When results were fetched")
[1m[94m1843 |[0m     is_processed = models.BooleanField(default=False, help_text="Whether results have been processed")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1844 |[0m
[1m[94m1845 |[0m     # Raw data backup (includes simulator-specific fields)
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1904[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1902 |[0m                 results = session_results[0]["results"]
[1m[94m1903 |[0m                 # Check if first result has team_id and driver_results
[1m[94m1904 |[0m                 if results and "team_id" in results[0] and "driver_results" in results[0]:
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1905 |[0m                     return True
[1m[94m1906 |[0m         return False
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1963[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m1962 |[0m     # Points and race outcome
[1m[94m1963 |[0m     champ_points = models.IntegerField(default=0, help_text="Championship points earned")
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m1964 |[0m     reason_out = models.CharField(
[1m[94m1965 |[0m         max_length=50,
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1978[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
     [1m[94m|[0m
[1m[94m1976 |[0m     # Car and class info
[1m[94m1977 |[0m     car_id = models.IntegerField(null=True, blank=True, help_text="Car identifier")
[1m[94m1978 |[0m     car_class_id = models.IntegerField(null=True, blank=True, help_text="Car class identifier")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m1979 |[0m     car_class_name = models.CharField(max_length=100, blank=True, help_text="Car class name")
[1m[94m1980 |[0m     car_name = models.CharField(max_length=100, blank=True, help_text="Car name")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m1979[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m1977 |[0m     car_id = models.IntegerField(null=True, blank=True, help_text="Car identifier")
[1m[94m1978 |[0m     car_class_id = models.IntegerField(null=True, blank=True, help_text="Car class identifier")
[1m[94m1979 |[0m     car_class_name = models.CharField(max_length=100, blank=True, help_text="Car class name")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m1980 |[0m     car_name = models.CharField(max_length=100, blank=True, help_text="Car name")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2004[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
     [1m[94m|[0m
[1m[94m2003 |[0m     def __str__(self):
[1m[94m2004 |[0m         return f"Team Result: {self.team} - {self.event_result} (Position: {self.finish_position})"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m2005 |[0m
[1m[94m2006 |[0m     @property
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2110[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m2109 |[0m     # Points and ratings
[1m[94m2110 |[0m     champ_points = models.IntegerField(default=0, help_text="Championship points earned")
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m2111 |[0m     oldi_rating = models.IntegerField(
[1m[94m2112 |[0m         null=True,
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2157[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
     [1m[94m|[0m
[1m[94m2155 |[0m     # Car and class info
[1m[94m2156 |[0m     car_id = models.IntegerField(null=True, blank=True, help_text="Car identifier")
[1m[94m2157 |[0m     car_class_id = models.IntegerField(null=True, blank=True, help_text="Car class identifier")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m2158 |[0m     car_class_name = models.CharField(max_length=100, blank=True, help_text="Car class name")
[1m[94m2159 |[0m     car_name = models.CharField(max_length=100, blank=True, help_text="Car name")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2158[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
     [1m[94m|[0m
[1m[94m2156 |[0m     car_id = models.IntegerField(null=True, blank=True, help_text="Car identifier")
[1m[94m2157 |[0m     car_class_id = models.IntegerField(null=True, blank=True, help_text="Car class identifier")
[1m[94m2158 |[0m     car_class_name = models.CharField(max_length=100, blank=True, help_text="Car class name")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m2159 |[0m     car_name = models.CharField(max_length=100, blank=True, help_text="Car name")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2162[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m2161 |[0m     # Additional data
[1m[94m2162 |[0m     country_code = models.CharField(max_length=3, blank=True, help_text="Driver country")
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m2163 |[0m     division = models.IntegerField(null=True, blank=True, help_text="Driver division")
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2189[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
     [1m[94m|[0m
[1m[94m2187 |[0m     def __str__(self):
[1m[94m2188 |[0m         if self.team_result:
[1m[94m2189 |[0m             return f"Participant: {self.sim_profile} - Team: {self.team_result.team} (Position: {self.finish_position})"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m2190 |[0m         return f"Participant: {self.sim_profile} - Solo (Position: {self.finish_position})"
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2190[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m2188 |[0m         if self.team_result:
[1m[94m2189 |[0m             return f"Participant: {self.sim_profile} - Team: {self.team_result.team} (Position: {self.finish_position})"
[1m[94m2190 |[0m         return f"Participant: {self.sim_profile} - Solo (Position: {self.finish_position})"
     [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m2191 |[0m
[1m[94m2192 |[0m     def clean(self):
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2197[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m2196 |[0m         if bool(self.team_result) == bool(self.event_result):
[1m[94m2197 |[0m             raise ValidationError("Must have either team_result (team event) or event_result (solo event), but not both")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m2198 |[0m
[1m[94m2199 |[0m     @property
     [1m[94m|[0m

[1msimlane/sim/models.py[0m[36m:[0m2197[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m2196 |[0m         if bool(self.team_result) == bool(self.event_result):
[1m[94m2197 |[0m             raise ValidationError("Must have either team_result (team event) or event_result (solo event), but not both")
     [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m2198 |[0m
[1m[94m2199 |[0m     @property
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/models.py[0m[36m:[0m2197[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (121 > 88)
     [1m[94m|[0m
[1m[94m2196 |[0m         if bool(self.team_result) == bool(self.event_result):
[1m[94m2197 |[0m             raise ValidationError("Must have either team_result (team event) or event_result (solo event), but not both")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m2198 |[0m
[1m[94m2199 |[0m     @property
     [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m10[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
   [1m[94m|[0m
[1m[94m 8 |[0m urlpatterns = [
[1m[94m 9 |[0m     # Currently empty - profiles and dashboard moved to root level
[1m[94m10 |[0m     path("refresh-iracing-owned/", views.refresh_iracing_owned_content, name="refresh_iracing_owned"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m11 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m24[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m22 |[0m     path("", views.profiles_list, name="profiles_list"),
[1m[94m23 |[0m     path("search/", views.profiles_search, name="profiles_search"),
[1m[94m24 |[0m     path("search-to-link/", views.profile_search_to_link, name="profile_search_to_link"),
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m25 |[0m     path("<slug:simulator_slug>/", views.profiles_by_simulator, name="profiles_by_simulator"),
[1m[94m26 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/", views.profile_detail, name="profile_detail"),
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m25[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m23 |[0m     path("search/", views.profiles_search, name="profiles_search"),
[1m[94m24 |[0m     path("search-to-link/", views.profile_search_to_link, name="profile_search_to_link"),
[1m[94m25 |[0m     path("<slug:simulator_slug>/", views.profiles_by_simulator, name="profiles_by_simulator"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m26 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/", views.profile_detail, name="profile_detail"),
[1m[94m27 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/link/", views.profile_link, name="profile_link"),
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m26[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
   [1m[94m|[0m
[1m[94m24 |[0m     path("search-to-link/", views.profile_search_to_link, name="profile_search_to_link"),
[1m[94m25 |[0m     path("<slug:simulator_slug>/", views.profiles_by_simulator, name="profiles_by_simulator"),
[1m[94m26 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/", views.profile_detail, name="profile_detail"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m27 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/link/", views.profile_link, name="profile_link"),
[1m[94m28 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/unlink/", views.profile_unlink, name="profile_unlink"),
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m27[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
   [1m[94m|[0m
[1m[94m25 |[0m     path("<slug:simulator_slug>/", views.profiles_by_simulator, name="profiles_by_simulator"),
[1m[94m26 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/", views.profile_detail, name="profile_detail"),
[1m[94m27 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/link/", views.profile_link, name="profile_link"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m28 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/unlink/", views.profile_unlink, name="profile_unlink"),
[1m[94m29 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m28[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (112 > 88)
   [1m[94m|[0m
[1m[94m26 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/", views.profile_detail, name="profile_detail"),
[1m[94m27 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/link/", views.profile_link, name="profile_link"),
[1m[94m28 |[0m     path("<slug:simulator_slug>/<str:profile_identifier>/unlink/", views.profile_unlink, name="profile_unlink"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m29 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m34[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m32 |[0m dashboard_patterns = [
[1m[94m33 |[0m     path("", views.dashboard_home, name="dashboard_home"),
[1m[94m34 |[0m     path("<slug:simulator_slug>/", views.simulator_dashboard, name="simulator_dashboard"),
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m35 |[0m     path("<slug:simulator_slug>/<str:section>/", views.simulator_dashboard_section, name="simulator_dashboard_section"),
[1m[94m36 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m35[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
   [1m[94m|[0m
[1m[94m33 |[0m     path("", views.dashboard_home, name="dashboard_home"),
[1m[94m34 |[0m     path("<slug:simulator_slug>/", views.simulator_dashboard, name="simulator_dashboard"),
[1m[94m35 |[0m     path("<slug:simulator_slug>/<str:section>/", views.simulator_dashboard_section, name="simulator_dashboard_section"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m36 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/urls.py[0m[36m:[0m48[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
   [1m[94m|[0m
[1m[94m46 |[0m     path("", views.tracks_list, name="tracks_list"),
[1m[94m47 |[0m     path("<slug:track_slug>/", views.track_detail, name="track_detail"),
[1m[94m48 |[0m     path("<slug:track_slug>/<slug:layout_slug>/", views.layout_detail, name="layout_detail"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m49 |[0m ]
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m39[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
   [1m[94m|[0m
[1m[94m37 |[0m             url = urljoin(IRACING_BASE_URL, url)
[1m[94m38 |[0m
[1m[94m39 |[0m         logger.info(f"Downloading image from: {url}")
   [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m40 |[0m
[1m[94m41 |[0m         response = requests.get(url, timeout=timeout, stream=True)
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m47[36m:[0m28[36m:[0m [1;31mG004[0m Logging statement uses f-string
   [1m[94m|[0m
[1m[94m45 |[0m         content_type = response.headers.get("content-type", "").lower()
[1m[94m46 |[0m         if not content_type.startswith("image/"):
[1m[94m47 |[0m             logger.warning(f"URL does not return an image: {url} (content-type: {content_type})")
   [1m[94m|[0m                            [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m48 |[0m             return None
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m47[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
   [1m[94m|[0m
[1m[94m45 |[0m         content_type = response.headers.get("content-type", "").lower()
[1m[94m46 |[0m         if not content_type.startswith("image/"):
[1m[94m47 |[0m             logger.warning(f"URL does not return an image: {url} (content-type: {content_type})")
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m48 |[0m             return None
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m59[36m:[0m20[36m:[0m [1;31mPTH119[0m `os.path.basename()` should be replaced by `Path.name`
   [1m[94m|[0m
[1m[94m57 |[0m         # Generate filename from URL
[1m[94m58 |[0m         parsed_url = urlparse(url)
[1m[94m59 |[0m         filename = os.path.basename(parsed_url.path)
   [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPTH119[0m
[1m[94m60 |[0m         if not filename or "." not in filename:
[1m[94m61 |[0m             # Generate a filename if none exists
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m68[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
   [1m[94m|[0m
[1m[94m67 |[0m     except requests.RequestException as e:
[1m[94m68 |[0m         logger.error(f"Failed to download image from {url}: {e}")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m69 |[0m         return None
[1m[94m70 |[0m     except Exception as e:
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m68[36m:[0m22[36m:[0m [1;31mG004[0m Logging statement uses f-string
   [1m[94m|[0m
[1m[94m67 |[0m     except requests.RequestException as e:
[1m[94m68 |[0m         logger.error(f"Failed to download image from {url}: {e}")
   [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m69 |[0m         return None
[1m[94m70 |[0m     except Exception as e:
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m70[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m68 |[0m         logger.error(f"Failed to download image from {url}: {e}")
[1m[94m69 |[0m         return None
[1m[94m70 |[0m     except Exception as e:
   [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m71 |[0m         logger.error(f"Unexpected error downloading image from {url}: {e}")
[1m[94m72 |[0m         return None
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m71[36m:[0m9[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
   [1m[94m|[0m
[1m[94m69 |[0m         return None
[1m[94m70 |[0m     except Exception as e:
[1m[94m71 |[0m         logger.error(f"Unexpected error downloading image from {url}: {e}")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m72 |[0m         return None
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m71[36m:[0m22[36m:[0m [1;31mG004[0m Logging statement uses f-string
   [1m[94m|[0m
[1m[94m69 |[0m         return None
[1m[94m70 |[0m     except Exception as e:
[1m[94m71 |[0m         logger.error(f"Unexpected error downloading image from {url}: {e}")
   [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m72 |[0m         return None
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m75[36m:[0m5[36m:[0m [1;31mC901[0m `save_car_images` is too complex (14 > 10)
   [1m[94m|[0m
[1m[94m75 |[0m def save_car_images(car_model, car_data: dict) -> dict:
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m76 |[0m     """
[1m[94m77 |[0m     Download and save images for a car model from iRacing API data.
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m75[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (15 > 12)
   [1m[94m|[0m
[1m[94m75 |[0m def save_car_images(car_model, car_data: dict) -> dict:
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m76 |[0m     """
[1m[94m77 |[0m     Download and save images for a car model from iRacing API data.
   [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m101[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m 99 |[0m             car_model.logo.save(logo_file.name, logo_file, save=True)
[1m[94m100 |[0m             results["logo"] = True
[1m[94m101 |[0m             logger.info(f"Saved logo for {car_model.full_name}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m102 |[0m
[1m[94m103 |[0m     small_image_url = car_data.get("small_image")
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m113[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m111 |[0m             car_model.small_image.save(small_file.name, small_file, save=True)
[1m[94m112 |[0m             results["small_image"] = True
[1m[94m113 |[0m             logger.info(f"Saved small image for {car_model.full_name}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m114 |[0m
[1m[94m115 |[0m     large_image_url = car_data.get("large_image")
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m125[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m123 |[0m             car_model.large_image.save(large_file.name, large_file, save=True)
[1m[94m124 |[0m             results["large_image"] = True
[1m[94m125 |[0m             logger.info(f"Saved large image for {car_model.full_name}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m126 |[0m
[1m[94m127 |[0m     # Download gallery images (screenshots)
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m130[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m128 |[0m     screenshot_images = car_data.get("detail_screen_shot_images", "")
[1m[94m129 |[0m     if screenshot_images:
[1m[94m130 |[0m         screenshot_list = [img.strip() for img in screenshot_images.split(",") if img.strip()]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m131 |[0m
[1m[94m132 |[0m         for i, screenshot_name in enumerate(screenshot_list):
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m136[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m134 |[0m                 # Construct full URL for screenshot
[1m[94m135 |[0m                 if not screenshot_name.startswith("http"):
[1m[94m136 |[0m                     screenshot_url = f"{IRACING_BASE_URL}/img/cars/{screenshot_name}.jpg"
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m137 |[0m                 else:
[1m[94m138 |[0m                     screenshot_url = screenshot_name
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m153[36m:[0m33[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m151 |[0m                     )
[1m[94m152 |[0m                     results["gallery_images"] += 1
[1m[94m153 |[0m                     logger.info(f"Saved screenshot {i + 1} for {car_model.full_name}")
    [1m[94m|[0m                                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m154 |[0m                 else:
[1m[94m155 |[0m                     results["gallery_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m157[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m155 |[0m                     results["gallery_errors"] += 1
[1m[94m156 |[0m
[1m[94m157 |[0m             except Exception as e:
    [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m158 |[0m                 logger.error(f"Error saving screenshot {screenshot_name} for {car_model.full_name}: {e}")
[1m[94m159 |[0m                 results["gallery_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m158[36m:[0m17[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m157 |[0m             except Exception as e:
[1m[94m158 |[0m                 logger.error(f"Error saving screenshot {screenshot_name} for {car_model.full_name}: {e}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m159 |[0m                 results["gallery_errors"] += 1
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m158[36m:[0m30[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m157 |[0m             except Exception as e:
[1m[94m158 |[0m                 logger.error(f"Error saving screenshot {screenshot_name} for {car_model.full_name}: {e}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m159 |[0m                 results["gallery_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m158[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m157 |[0m             except Exception as e:
[1m[94m158 |[0m                 logger.error(f"Error saving screenshot {screenshot_name} for {car_model.full_name}: {e}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m159 |[0m                 results["gallery_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m190[36m:[0m5[36m:[0m [1;31mC901[0m `save_track_images` is too complex (14 > 10)
    [1m[94m|[0m
[1m[94m190 |[0m def save_track_images(sim_track, track_data: dict) -> dict:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m191 |[0m     """
[1m[94m192 |[0m     Download and save images for a track from iRacing API data.
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m190[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (16 > 12)
    [1m[94m|[0m
[1m[94m190 |[0m def save_track_images(sim_track, track_data: dict) -> dict:
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m191 |[0m     """
[1m[94m192 |[0m     Download and save images for a track from iRacing API data.
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m218[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m216 |[0m                 sim_track.logo.save(logo_file.name, logo_file, save=True)
[1m[94m217 |[0m                 results["logo"] = True
[1m[94m218 |[0m                 logger.info(f"Saved logo for {sim_track.display_name}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m219 |[0m         else:
[1m[94m220 |[0m             results["skipped"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m221[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m219 |[0m         else:
[1m[94m220 |[0m             results["skipped"] += 1
[1m[94m221 |[0m             logger.info(f"Skipped logo for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m222 |[0m
[1m[94m223 |[0m     # Check and download small image
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m221[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m219 |[0m         else:
[1m[94m220 |[0m             results["skipped"] += 1
[1m[94m221 |[0m             logger.info(f"Skipped logo for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m222 |[0m
[1m[94m223 |[0m     # Check and download small image
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m237[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m235 |[0m                 sim_track.small_image.save(small_file.name, small_file, save=True)
[1m[94m236 |[0m                 results["small_image"] = True
[1m[94m237 |[0m                 logger.info(f"Saved small image for {sim_track.display_name}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m238 |[0m         else:
[1m[94m239 |[0m             results["skipped"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m240[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m238 |[0m         else:
[1m[94m239 |[0m             results["skipped"] += 1
[1m[94m240 |[0m             logger.info(f"Skipped small image for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m241 |[0m
[1m[94m242 |[0m     # Check and download large image
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m240[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m238 |[0m         else:
[1m[94m239 |[0m             results["skipped"] += 1
[1m[94m240 |[0m             logger.info(f"Skipped small image for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m241 |[0m
[1m[94m242 |[0m     # Check and download large image
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m256[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m254 |[0m                 sim_track.large_image.save(large_file.name, large_file, save=True)
[1m[94m255 |[0m                 results["large_image"] = True
[1m[94m256 |[0m                 logger.info(f"Saved large image for {sim_track.display_name}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m257 |[0m         else:
[1m[94m258 |[0m             results["skipped"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m259[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m257 |[0m         else:
[1m[94m258 |[0m             results["skipped"] += 1
[1m[94m259 |[0m             logger.info(f"Skipped large image for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m260 |[0m
[1m[94m261 |[0m     return results
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m259[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m257 |[0m         else:
[1m[94m258 |[0m             results["skipped"] += 1
[1m[94m259 |[0m             logger.info(f"Skipped large image for {sim_track.display_name} - file already exists")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m260 |[0m
[1m[94m261 |[0m     return results
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m295[36m:[0m29[36m:[0m [1;31mC401[0m Unnecessary generator (rewrite as a set comprehension)
    [1m[94m|[0m
[1m[94m293 |[0m         # Check if we have all expected layers
[1m[94m294 |[0m         existing_captions = set(existing_svg_maps.values_list("caption", flat=True))
[1m[94m295 |[0m         expected_captions = set(layer_name.replace("-", " ").title() for layer_name in layers_data.keys())
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC401[0m
[1m[94m296 |[0m
[1m[94m297 |[0m         if existing_captions >= expected_captions:  # We have all or more layers
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Rewrite as a set comprehension

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m295[36m:[0m74[36m:[0m [1;31mSIM118[0m Use `key in dict` instead of `key in dict.keys()`
    [1m[94m|[0m
[1m[94m293 |[0m         # Check if we have all expected layers
[1m[94m294 |[0m         existing_captions = set(existing_svg_maps.values_list("caption", flat=True))
[1m[94m295 |[0m         expected_captions = set(layer_name.replace("-", " ").title() for layer_name in layers_data.keys())
    [1m[94m|[0m                                                                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mSIM118[0m
[1m[94m296 |[0m
[1m[94m297 |[0m         if existing_captions >= expected_captions:  # We have all or more layers
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove `.keys()`

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m295[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m293 |[0m         # Check if we have all expected layers
[1m[94m294 |[0m         existing_captions = set(existing_svg_maps.values_list("caption", flat=True))
[1m[94m295 |[0m         expected_captions = set(layer_name.replace("-", " ").title() for layer_name in layers_data.keys())
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m296 |[0m
[1m[94m297 |[0m         if existing_captions >= expected_captions:  # We have all or more layers
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m298[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m297 |[0m         if existing_captions >= expected_captions:  # We have all or more layers
[1m[94m298 |[0m             logger.info(f"Skipped SVG maps for {sim_layout} - files already exist")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m299 |[0m             results["svg_layers"] = len(existing_captions)
[1m[94m300 |[0m             return results
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m302[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m300 |[0m             return results
[1m[94m301 |[0m         # Some layers missing, clean up and re-download all
[1m[94m302 |[0m         logger.info(f"Some SVG layers missing for {sim_layout}, re-downloading all")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m303 |[0m         clean_existing_track_svg_maps(sim_layout)
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m320[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m318 |[0m                     gallery_type="track_maps",
[1m[94m319 |[0m                     image=svg_file,
[1m[94m320 |[0m                     caption=layer_name.replace("-", " ").title(),  # "start-finish" -> "Start Finish"
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m321 |[0m                     order=i,
[1m[94m322 |[0m                     original_filename=filename,
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m326[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m324 |[0m                 )
[1m[94m325 |[0m                 results["svg_layers"] += 1
[1m[94m326 |[0m                 logger.info(f"Saved SVG layer '{layer_name}' for {sim_layout}")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m327 |[0m             else:
[1m[94m328 |[0m                 results["svg_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m330[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m328 |[0m                 results["svg_errors"] += 1
[1m[94m329 |[0m
[1m[94m330 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m331 |[0m             logger.error(f"Error saving SVG layer {layer_name} for {sim_layout}: {e}")
[1m[94m332 |[0m             results["svg_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m331[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m330 |[0m         except Exception as e:
[1m[94m331 |[0m             logger.error(f"Error saving SVG layer {layer_name} for {sim_layout}: {e}")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m332 |[0m             results["svg_errors"] += 1
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m331[36m:[0m26[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m330 |[0m         except Exception as e:
[1m[94m331 |[0m             logger.error(f"Error saving SVG layer {layer_name} for {sim_layout}: {e}")
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m332 |[0m             results["svg_errors"] += 1
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m362[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m360 |[0m         item.delete()
[1m[94m361 |[0m
[1m[94m362 |[0m     logger.info(f"Cleaned existing images for {car_model.full_name}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
    [1m[94m|[0m

[1msimlane/sim/utils/image_downloader.py[0m[36m:[0m388[36m:[0m17[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m386 |[0m     # No metadata to clear - MediaGallery entries were the only storage
[1m[94m387 |[0m
[1m[94m388 |[0m     logger.info(f"Cleaned existing SVG track maps for {sim_layout}")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
    [1m[94m|[0m

[1msimlane/sim/utils/result_processing.py[0m[36m:[0m40[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m38 |[0m     """
[1m[94m39 |[0m     solo = list(event_result.participants.all())
[1m[94m40 |[0m     team = list(ParticipantResult.objects.filter(team_result__event_result=event_result))
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m41 |[0m     return solo + team
   [1m[94m|[0m

[1msimlane/sim/utils/result_processing.py[0m[36m:[0m67[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m65 |[0m                 sim_api_id=team_data["team_id"],
[1m[94m66 |[0m                 defaults={
[1m[94m67 |[0m                     "name": team_data.get("display_name", f"Team {team_data['team_id']}"),
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m68 |[0m                 },
[1m[94m69 |[0m             )
   [1m[94m|[0m

[1msimlane/sim/utils/result_processing.py[0m[36m:[0m99[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m 97 |[0m                     sim_api_id=driver_data["cust_id"],
[1m[94m 98 |[0m                     defaults={
[1m[94m 99 |[0m                         "display_name": driver_data.get("display_name", f"Driver {driver_data['cust_id']}"),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m100 |[0m                     },
[1m[94m101 |[0m                 )
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m43[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m     return list(SimProfile.objects.filter(
[1m[94m42 |[0m         is_public=True,
[1m[94m43 |[0m     ).select_related("simulator", "linked_user").order_by("-last_active", "-created_at"))
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m44 |[0m
[1m[94m45 |[0m @cache_query(timeout=1800, cache_alias="query_cache")  # 30 minutes
   [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m55[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (140 > 88)
   [1m[94m|[0m
[1m[94m53 |[0m [1m[94m…[0m
[1m[94m54 |[0m [1m[94m…[0m("simulator").only(
[1m[94m55 |[0m [1m[94m…[0mimage", "large_image", "is_active", "simulator__icon", "simulator__name", "simulator__id",
   [1m[94m|[0m                                        [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m56 |[0m [1m[94m…[0m
[1m[94m57 |[0m [1m[94m…[0m
   [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m59[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m57 |[0m         ),
[1m[94m58 |[0m     ).only(
[1m[94m59 |[0m         "id", "name", "manufacturer", "slug", "category", "default_image_url", "release_year",
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m60 |[0m     ).annotate(
[1m[94m61 |[0m         simulator_count=Count("sim_cars__simulator", distinct=True),
   [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m70[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (142 > 88)
   [1m[94m|[0m
[1m[94m68 |[0m [1m[94m…[0m
[1m[94m69 |[0m [1m[94m…[0md("simulator").only(
[1m[94m70 |[0m [1m[94m…[0m_image", "large_image", "is_active", "simulator__icon", "simulator__name", "simulator__id",
   [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m71 |[0m [1m[94m…[0m
[1m[94m72 |[0m [1m[94m…[0m
   [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m116[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m114 |[0m     if request.headers.get("HX-Request"):
[1m[94m115 |[0m         if request.GET:
[1m[94m116 |[0m             return render(request, "sim/profiles/profiles_results_partial.html", context)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m117 |[0m         return render(request, "sim/profiles/list_partial.html", context)
[1m[94m118 |[0m     return render(request, "sim/profiles/list.html", context)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m214[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m212 |[0m             )
[1m[94m213 |[0m         except SimProfile.DoesNotExist:
[1m[94m214 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m215 |[0m
[1m[94m216 |[0m     # Get current ratings
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m214[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m212 |[0m             )
[1m[94m213 |[0m         except SimProfile.DoesNotExist:
[1m[94m214 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m215 |[0m
[1m[94m216 |[0m     # Get current ratings
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m214[36m:[0m27[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m212 |[0m             )
[1m[94m213 |[0m         except SimProfile.DoesNotExist:
[1m[94m214 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m215 |[0m
[1m[94m216 |[0m     # Get current ratings
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/views.py[0m[36m:[0m217[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m216 |[0m     # Get current ratings
[1m[94m217 |[0m     current_ratings = profile.ratings.select_related("rating_system").order_by("-recorded_at")[:6]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m218 |[0m
[1m[94m219 |[0m     # Get recent lap times
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m265[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m263 |[0m             )
[1m[94m264 |[0m         except SimProfile.DoesNotExist:
[1m[94m265 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m266 |[0m
[1m[94m267 |[0m     # Check if user can link this profile
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m265[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m263 |[0m             )
[1m[94m264 |[0m         except SimProfile.DoesNotExist:
[1m[94m265 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m266 |[0m
[1m[94m267 |[0m     # Check if user can link this profile
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m265[36m:[0m27[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m263 |[0m             )
[1m[94m264 |[0m         except SimProfile.DoesNotExist:
[1m[94m265 |[0m             raise Http404("Profile not found")
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m266 |[0m
[1m[94m267 |[0m     # Check if user can link this profile
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/views.py[0m[36m:[0m277[36m:[0m25[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m275 |[0m         try:
[1m[94m276 |[0m             profile.link_to_user(request.user, verified=False)
[1m[94m277 |[0m             logger.info(f"[PROFILE LINK] Linking profile id: {profile.id} for user {request.user.id}")
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m278 |[0m             # Trigger iRacing owned content sync in the background
[1m[94m279 |[0m             sync_iracing_owned_content.delay(profile.id)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m277[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m275 |[0m         try:
[1m[94m276 |[0m             profile.link_to_user(request.user, verified=False)
[1m[94m277 |[0m             logger.info(f"[PROFILE LINK] Linking profile id: {profile.id} for user {request.user.id}")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m278 |[0m             # Trigger iRacing owned content sync in the background
[1m[94m279 |[0m             sync_iracing_owned_content.delay(profile.id)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m282[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m280 |[0m             messages.success(
[1m[94m281 |[0m                 request,
[1m[94m282 |[0m                 f"Successfully linked {profile.simulator.name} profile: {profile.profile_name}. "
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m283 |[0m                 "Please verify your ownership to complete the process. Owned content is being synced.",
[1m[94m284 |[0m             )
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m283[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m281 |[0m                 request,
[1m[94m282 |[0m                 f"Successfully linked {profile.simulator.name} profile: {profile.profile_name}. "
[1m[94m283 |[0m                 "Please verify your ownership to complete the process. Owned content is being synced.",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m284 |[0m             )
[1m[94m285 |[0m             return redirect("drivers:profile_detail",
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m323[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m321 |[0m             )
[1m[94m322 |[0m         except SimProfile.DoesNotExist:
[1m[94m323 |[0m             raise Http404("Profile not found or not linked to your account")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m324 |[0m
[1m[94m325 |[0m     if request.method == "POST":
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m323[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m321 |[0m             )
[1m[94m322 |[0m         except SimProfile.DoesNotExist:
[1m[94m323 |[0m             raise Http404("Profile not found or not linked to your account")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m324 |[0m
[1m[94m325 |[0m     if request.method == "POST":
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m323[36m:[0m27[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m321 |[0m             )
[1m[94m322 |[0m         except SimProfile.DoesNotExist:
[1m[94m323 |[0m             raise Http404("Profile not found or not linked to your account")
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m324 |[0m
[1m[94m325 |[0m     if request.method == "POST":
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/views.py[0m[36m:[0m402[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m400 |[0m def dashboard_home(request):
[1m[94m401 |[0m     """Main dashboard showing all simulators and user's profiles"""
[1m[94m402 |[0m     user_profiles = request.user.linked_sim_profiles.select_related("simulator").order_by("simulator__name")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m403 |[0m     simulators = Simulator.objects.filter(is_active=True).order_by("name")
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m436[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m434 |[0m             try:
[1m[94m435 |[0m                 selected_profile = user_profiles.get(id=profile_id)
[1m[94m436 |[0m                 request.session[f"selected_{simulator_slug}_profile_id"] = str(profile_id)
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m437 |[0m             except SimProfile.DoesNotExist:
[1m[94m438 |[0m                 pass
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m451[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m449 |[0m         selected_profile = user_profiles.first()
[1m[94m450 |[0m         if selected_profile:
[1m[94m451 |[0m             request.session[f"selected_{simulator_slug}_profile_id"] = str(selected_profile.id)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m452 |[0m
[1m[94m453 |[0m     context = {
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m462[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
    [1m[94m|[0m
[1m[94m460 |[0m     # HTMX requests return partial content
[1m[94m461 |[0m     if request.headers.get("HX-Request"):
[1m[94m462 |[0m         return render(request, f"sim/{simulator_slug}/dashboard_content_partial.html", context)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m463 |[0m
[1m[94m464 |[0m     # Regular requests return full page
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m485[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
    [1m[94m|[0m
[1m[94m483 |[0m     # TODO: Update car class filtering to use new system
[1m[94m484 |[0m     # if car_class_slug:
[1m[94m485 |[0m     #     cars = cars.filter(car_class__slug=car_class_slug)
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m486 |[0m
[1m[94m487 |[0m     if manufacturer:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/sim/views.py[0m[36m:[0m500[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m498 |[0m     simulators = Simulator.objects.filter(is_active=True).order_by("name")
[1m[94m499 |[0m     car_classes = CarClass.objects.order_by("name")
[1m[94m500 |[0m     manufacturers = CarModel.objects.values_list("manufacturer", flat=True).distinct().order_by("manufacturer")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m501 |[0m
[1m[94m502 |[0m     # Pagination
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m509[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (132 > 88)
    [1m[94m|[0m
[1m[94m507 |[0m     # Annotate owned status
[1m[94m508 |[0m     owned_car_ids = set()
[1m[94m509 |[0m     if request.user.is_authenticated and hasattr(request.user, "linked_sim_profiles") and request.user.linked_sim_profiles.exists():
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m510 |[0m         sim_profile = request.user.linked_sim_profiles.first()
[1m[94m511 |[0m         owned_car_ids = set(
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m531[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m530 |[0m     if request.htmx:
[1m[94m531 |[0m         # Distinguish between initial HTMX load and subsequent filter/pagination requests
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m532 |[0m         if request.GET:
[1m[94m533 |[0m             return render(request, "sim/cars/cars_list_partial.html", context)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m544[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m542 |[0m             Prefetch(
[1m[94m543 |[0m                 "sim_cars",
[1m[94m544 |[0m                 queryset=SimCar.objects.select_related("simulator", "pit_data").filter(is_active=True),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m545 |[0m             ),
[1m[94m546 |[0m         ),
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m568[36m:[0m5[36m:[0m [1;31mC901[0m `tracks_list` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m567 |[0m # Tracks Views
[1m[94m568 |[0m def tracks_list(request):
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m569 |[0m     """Public listing of all tracks"""
[1m[94m570 |[0m     # Use cached queryset
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m601[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m599 |[0m     # Get filter options
[1m[94m600 |[0m     simulators = Simulator.objects.filter(is_active=True).order_by("name")
[1m[94m601 |[0m     countries = TrackModel.objects.values_list("country", flat=True).distinct().order_by("country")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m602 |[0m     track_types = SimLayout.type.field.choices
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m611[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (132 > 88)
    [1m[94m|[0m
[1m[94m609 |[0m     # Annotate owned status (if needed)
[1m[94m610 |[0m     owned_track_ids = set()
[1m[94m611 |[0m     if request.user.is_authenticated and hasattr(request.user, "linked_sim_profiles") and request.user.linked_sim_profiles.exists():
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m612 |[0m         sim_profile = request.user.linked_sim_profiles.first()
[1m[94m613 |[0m         owned_track_ids = set(
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m618[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m616 |[0m         )
[1m[94m617 |[0m
[1m[94m618 |[0m     # Prefetch sim_tracks and their simulators in a single query for all tracks on the page, with caching
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m619 |[0m     track_ids = tuple(sorted(t.id for t in page_obj))
[1m[94m620 |[0m     cache_key = f"tracksimtracks:{'-'.join(str(tid) for tid in track_ids)}"
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m624[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m622 |[0m     if sim_track_map is None:
[1m[94m623 |[0m         sim_track_map = {}
[1m[94m624 |[0m         sim_track_qs = SimTrack.objects.filter(track_model__in=track_ids).select_related("simulator")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m625 |[0m         for st in sim_track_qs:
[1m[94m626 |[0m             sim_track_map.setdefault(st.track_model_id, []).append(st)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m632[36m:[0m9[36m:[0m [1;31mSLF001[0m Private member accessed: `_prefetched_sim_tracks`
    [1m[94m|[0m
[1m[94m630 |[0m         track.is_owned = track.id in owned_track_ids
[1m[94m631 |[0m         prefetched_sim_tracks = sim_track_map.get(track.id, [])
[1m[94m632 |[0m         track._prefetched_sim_tracks = prefetched_sim_tracks
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mSLF001[0m
[1m[94m633 |[0m         track.active_sim_tracks = [st for st in prefetched_sim_tracks if st.is_active]
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m672[36m:[0m5[36m:[0m [1;31mF841[0m Local variable `all_layouts` is assigned to but never used
    [1m[94m|[0m
[1m[94m671 |[0m     # Get all unique layouts across simulators
[1m[94m672 |[0m     all_layouts = []
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m673 |[0m     layout_simulators = {}  # Track which simulators have which layouts
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `all_layouts`

[1msimlane/sim/views.py[0m[36m:[0m730[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m729 |[0m     if not layout:
[1m[94m730 |[0m         raise Http404("Layout not found")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m731 |[0m
[1m[94m732 |[0m     # Get lap times for this layout
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m730[36m:[0m23[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m729 |[0m     if not layout:
[1m[94m730 |[0m         raise Http404("Layout not found")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m731 |[0m
[1m[94m732 |[0m     # Get lap times for this layout
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/views.py[0m[36m:[0m748[36m:[0m53[36m:[0m [1;31mE741[0m Ambiguous variable name: `l`
    [1m[94m|[0m
[1m[94m746 |[0m     for sim_track in track.sim_tracks.all():
[1m[94m747 |[0m         for other_layout in sim_track.layouts.exclude(slug=layout_slug):
[1m[94m748 |[0m             if other_layout.slug not in [l.slug for l in other_layouts]:
    [1m[94m|[0m                                                     [1m[91m^[0m [1m[91mE741[0m
[1m[94m749 |[0m                 other_layouts.append(other_layout)
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m765[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m763 |[0m @login_required
[1m[94m764 |[0m def refresh_iracing_owned_content(request):
[1m[94m765 |[0m     """HTMX endpoint to trigger iRacing owned content sync for the user's sim profile."""
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m766 |[0m     sim_profile_id = request.POST.get("sim_profile_id")
[1m[94m767 |[0m     if not sim_profile_id:
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m772[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m770 |[0m         profile = SimProfile.objects.get(id=sim_profile_id, linked_user=request.user)
[1m[94m771 |[0m     except SimProfile.DoesNotExist:
[1m[94m772 |[0m         return JsonResponse({"error": "SimProfile not found or not linked to user."}, status=404)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m773 |[0m     sync_iracing_owned_content.delay(profile.id)
[1m[94m774 |[0m     return render(request, "sim/components/refresh_status.html", {"status": "syncing"})
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m965[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m963 |[0m     # Check if user can view this event
[1m[94m964 |[0m     if not event.can_user_view(request.user):
[1m[94m965 |[0m         raise Http404("Event not found")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m966 |[0m
[1m[94m967 |[0m     # Get upcoming time slots
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m965[36m:[0m23[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m963 |[0m     # Check if user can view this event
[1m[94m964 |[0m     if not event.can_user_view(request.user):
[1m[94m965 |[0m         raise Http404("Event not found")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m966 |[0m
[1m[94m967 |[0m     # Get upcoming time slots
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/sim/views.py[0m[36m:[0m981[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m979 |[0m     weather_forecasts = []
[1m[94m980 |[0m     if next_time_slot:
[1m[94m981 |[0m         weather_forecasts = next_time_slot.weather_forecasts.order_by("timestamp")[:24]  # Next 24 hours
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m982 |[0m
[1m[94m983 |[0m     # Check if current user can join this event
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m995[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
    [1m[94m|[0m
[1m[94m993 |[0m     if event.series:
[1m[94m994 |[0m         series_context = event.series
[1m[94m995 |[0m         season_context = event.series.seasons.filter(active=True).first() if hasattr(event.series, "seasons") else None
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m996 |[0m
[1m[94m997 |[0m     # Build per-class car + restriction data
    [1m[94m|[0m

[1msimlane/sim/views.py[0m[36m:[0m1004[36m:[0m13[36m:[0m [1;31mPERF401[0m Use a list comprehension to create a transformed list
     [1m[94m|[0m
[1m[94m1002 |[0m           entries = []
[1m[94m1003 |[0m           for car in allowed_cars:
[1m[94m1004 |[0m [1m[91m/[0m             entries.append({
[1m[94m1005 |[0m [1m[91m|[0m                 "car": car,
[1m[94m1006 |[0m [1m[91m|[0m                 "restrictions": restrictions_map.get(car.sim_api_id, {}),
[1m[94m1007 |[0m [1m[91m|[0m             })
     [1m[94m|[0m [1m[91m|______________^[0m [1m[91mPERF401[0m
[1m[94m1008 |[0m           class_car_data.append({"event_class": ec, "entries": entries})
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace for loop with list comprehension

[1msimlane/teams/admin.py[0m[36m:[0m47[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
   [1m[94m|[0m
[1m[94m45 |[0m @admin.register(Team)
[1m[94m46 |[0m class TeamAdmin(ModelAdmin):
[1m[94m47 |[0m     list_display = ["name", "club", "owner_user", "owner_sim_profile", "is_active", "is_temporary", "created_at"]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m48 |[0m     list_filter = ["club", "is_active", "is_temporary", "is_public", "created_at"]
[1m[94m49 |[0m     search_fields = ["name", "description", "club__name", "owner_user__username"]
   [1m[94m|[0m

[1msimlane/teams/admin.py[0m[36m:[0m339[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m337 |[0m     ]
[1m[94m338 |[0m     list_filter = ["status", "event", "created_at", "expires_at"]
[1m[94m339 |[0m     search_fields = ["team_name", "invitee_email", "organizer_user__username", "event__name"]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m340 |[0m     readonly_fields = ["token", "created_at", "responded_at"]
[1m[94m341 |[0m     raw_id_fields = ["event", "organizer_user", "invitee_user"]
    [1m[94m|[0m

[1msimlane/teams/admin.py[0m[36m:[0m511[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m509 |[0m                 count += 1
[1m[94m510 |[0m             except ValueError as e:
[1m[94m511 |[0m                 self.message_user(request, f"Could not open {sheet.title}: {e!s}", level="ERROR")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m512 |[0m
[1m[94m513 |[0m         if count:
    [1m[94m|[0m

[1msimlane/teams/admin.py[0m[36m:[0m524[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m522 |[0m                 count += 1
[1m[94m523 |[0m             except ValueError as e:
[1m[94m524 |[0m                 self.message_user(request, f"Could not close {sheet.title}: {e!s}", level="ERROR")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m525 |[0m
[1m[94m526 |[0m         if count:
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m29[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m27 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m28 |[0m             except Club.DoesNotExist:
[1m[94m29 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m30 |[0m
[1m[94m31 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m29[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m27 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m28 |[0m             except Club.DoesNotExist:
[1m[94m29 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m30 |[0m
[1m[94m31 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m29[36m:[0m31[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m27 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m28 |[0m             except Club.DoesNotExist:
[1m[94m29 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                               [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m30 |[0m
[1m[94m31 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m38[36m:[0m21[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m36 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m37 |[0m                 except Club.DoesNotExist:
[1m[94m38 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m39 |[0m
[1m[94m40 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m38[36m:[0m27[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m36 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m37 |[0m                 except Club.DoesNotExist:
[1m[94m38 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m39 |[0m
[1m[94m40 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m38[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m36 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m37 |[0m                 except Club.DoesNotExist:
[1m[94m38 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m39 |[0m
[1m[94m40 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m82[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m80 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m81 |[0m             except Club.DoesNotExist:
[1m[94m82 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m83 |[0m
[1m[94m84 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m82[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m80 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m81 |[0m             except Club.DoesNotExist:
[1m[94m82 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m83 |[0m
[1m[94m84 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m82[36m:[0m31[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m80 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m81 |[0m             except Club.DoesNotExist:
[1m[94m82 |[0m                 raise Http404("Club not found")
   [1m[94m|[0m                               [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m83 |[0m
[1m[94m84 |[0m         # Fallback to club_id (legacy support)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m91[36m:[0m21[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m89 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m90 |[0m                 except Club.DoesNotExist:
[1m[94m91 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m92 |[0m
[1m[94m93 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m91[36m:[0m27[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m89 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m90 |[0m                 except Club.DoesNotExist:
[1m[94m91 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m92 |[0m
[1m[94m93 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m91[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m89 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m90 |[0m                 except Club.DoesNotExist:
[1m[94m91 |[0m                     raise Http404("Club not found")
   [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m92 |[0m
[1m[94m93 |[0m         # Try to get from related objects if still not found
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m121[36m:[0m5[36m:[0m [1;31mC901[0m `club_member_required` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m121 |[0m def club_member_required(view_func):
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m122 |[0m     """Decorator to ensure user is club member (any role)"""
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m126[36m:[0m9[36m:[0m [1;31mC901[0m `wrapper` is too complex (11 > 10)
    [1m[94m|[0m
[1m[94m124 |[0m     @wraps(view_func)
[1m[94m125 |[0m     @login_required
[1m[94m126 |[0m     def wrapper(request, *args, **kwargs):
    [1m[94m|[0m         [1m[91m^^^^^^^[0m [1m[91mC901[0m
[1m[94m127 |[0m         # Handle invitation token access first
[1m[94m128 |[0m         token = kwargs.get("token")
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m141[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m139 |[0m                 return view_func(request, *args, **kwargs)
[1m[94m140 |[0m             except ClubInvitation.DoesNotExist:
[1m[94m141 |[0m                 raise Http404("Invalid invitation")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m142 |[0m
[1m[94m143 |[0m         # Try to get club from various sources
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m141[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m139 |[0m                 return view_func(request, *args, **kwargs)
[1m[94m140 |[0m             except ClubInvitation.DoesNotExist:
[1m[94m141 |[0m                 raise Http404("Invalid invitation")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m142 |[0m
[1m[94m143 |[0m         # Try to get club from various sources
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m141[36m:[0m31[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m139 |[0m                 return view_func(request, *args, **kwargs)
[1m[94m140 |[0m             except ClubInvitation.DoesNotExist:
[1m[94m141 |[0m                 raise Http404("Invalid invitation")
    [1m[94m|[0m                               [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m142 |[0m
[1m[94m143 |[0m         # Try to get club from various sources
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m152[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m150 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m151 |[0m             except Club.DoesNotExist:
[1m[94m152 |[0m                 raise Http404("Club not found")
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m153 |[0m
[1m[94m154 |[0m         # Fallback to club_id (legacy support)
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m152[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m150 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m151 |[0m             except Club.DoesNotExist:
[1m[94m152 |[0m                 raise Http404("Club not found")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m153 |[0m
[1m[94m154 |[0m         # Fallback to club_id (legacy support)
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m152[36m:[0m31[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m150 |[0m                 club = Club.objects.get(slug=club_slug)
[1m[94m151 |[0m             except Club.DoesNotExist:
[1m[94m152 |[0m                 raise Http404("Club not found")
    [1m[94m|[0m                               [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m153 |[0m
[1m[94m154 |[0m         # Fallback to club_id (legacy support)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/decorators.py[0m[36m:[0m161[36m:[0m21[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m159 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m160 |[0m                 except Club.DoesNotExist:
[1m[94m161 |[0m                     raise Http404("Club not found")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m162 |[0m
[1m[94m163 |[0m         # Try to get from related objects if still not found
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m161[36m:[0m27[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m159 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m160 |[0m                 except Club.DoesNotExist:
[1m[94m161 |[0m                     raise Http404("Club not found")
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m162 |[0m
[1m[94m163 |[0m         # Try to get from related objects if still not found
    [1m[94m|[0m

[1msimlane/teams/decorators.py[0m[36m:[0m161[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m159 |[0m                     club = Club.objects.get(id=club_id)
[1m[94m160 |[0m                 except Club.DoesNotExist:
[1m[94m161 |[0m                     raise Http404("Club not found")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m162 |[0m
[1m[94m163 |[0m         # Try to get from related objects if still not found
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m117[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m115 |[0m         name = self.cleaned_data.get("name")
[1m[94m116 |[0m         if Club.objects.filter(name__iexact=name).exists():
[1m[94m117 |[0m             raise ValidationError("A club with this name already exists.")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m118 |[0m         return name
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m117[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m115 |[0m         name = self.cleaned_data.get("name")
[1m[94m116 |[0m         if Club.objects.filter(name__iexact=name).exists():
[1m[94m117 |[0m             raise ValidationError("A club with this name already exists.")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m118 |[0m         return name
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m125[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m123 |[0m             # Validate file size (max 5MB)
[1m[94m124 |[0m             if logo.size > 5 * 1024 * 1024:
[1m[94m125 |[0m                 raise ValidationError("Logo file size must be less than 5MB.")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m126 |[0m
[1m[94m127 |[0m             # Validate file type
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m125[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m123 |[0m             # Validate file size (max 5MB)
[1m[94m124 |[0m             if logo.size > 5 * 1024 * 1024:
[1m[94m125 |[0m                 raise ValidationError("Logo file size must be less than 5MB.")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m126 |[0m
[1m[94m127 |[0m             # Validate file type
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m130[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m128 |[0m             valid_types = ["image/jpeg", "image/png", "image/gif", "image/webp"]
[1m[94m129 |[0m             if logo.content_type not in valid_types:
[1m[94m130 |[0m                 raise ValidationError("Logo must be a JPEG, PNG, GIF, or WebP image.")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m131 |[0m
[1m[94m132 |[0m         return logo
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m130[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m128 |[0m             valid_types = ["image/jpeg", "image/png", "image/gif", "image/webp"]
[1m[94m129 |[0m             if logo.content_type not in valid_types:
[1m[94m130 |[0m                 raise ValidationError("Logo must be a JPEG, PNG, GIF, or WebP image.")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m131 |[0m
[1m[94m132 |[0m         return logo
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m152[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m150 |[0m         name = self.cleaned_data.get("name")
[1m[94m151 |[0m         if Club.objects.filter(name__iexact=name).exclude(pk=self.instance.pk).exists():
[1m[94m152 |[0m             raise ValidationError("A club with this name already exists.")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m153 |[0m         return name
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m152[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m150 |[0m         name = self.cleaned_data.get("name")
[1m[94m151 |[0m         if Club.objects.filter(name__iexact=name).exclude(pk=self.instance.pk).exists():
[1m[94m152 |[0m             raise ValidationError("A club with this name already exists.")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m153 |[0m         return name
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m186[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m184 |[0m                 "class": "form-input",
[1m[94m185 |[0m                 "rows": 3,
[1m[94m186 |[0m                 "placeholder": "Add a personal message to your invitation (optional)...",
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m187 |[0m             },
[1m[94m188 |[0m         ),
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m204[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m202 |[0m         # Check if user is already a club member
[1m[94m203 |[0m         if ClubMember.objects.filter(club=self.club, user__email=email).exists():
[1m[94m204 |[0m             raise ValidationError("This user is already a member of the club.")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m205 |[0m
[1m[94m206 |[0m         # Check if there's already a pending invitation
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m204[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m202 |[0m         # Check if user is already a club member
[1m[94m203 |[0m         if ClubMember.objects.filter(club=self.club, user__email=email).exists():
[1m[94m204 |[0m             raise ValidationError("This user is already a member of the club.")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m205 |[0m
[1m[94m206 |[0m         # Check if there's already a pending invitation
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m214[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m212 |[0m               expires_at__gt=timezone.now(),
[1m[94m213 |[0m           ).exists():
[1m[94m214 |[0m               raise ValidationError(
    [1m[94m|[0m  [1m[91m___________________^[0m
[1m[94m215 |[0m [1m[91m|[0m                 "There is already a pending invitation for this email.",
[1m[94m216 |[0m [1m[91m|[0m             )
    [1m[94m|[0m [1m[91m|_____________^[0m [1m[91mTRY003[0m
[1m[94m217 |[0m
[1m[94m218 |[0m           return email
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m215[36m:[0m17[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m213 |[0m         ).exists():
[1m[94m214 |[0m             raise ValidationError(
[1m[94m215 |[0m                 "There is already a pending invitation for this email.",
    [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m216 |[0m             )
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m227[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m225 |[0m             inviter_member = ClubMember.objects.get(club=self.club, user=self.inviter)
[1m[94m226 |[0m             if role == ClubRole.ADMIN and inviter_member.role != ClubRole.ADMIN:
[1m[94m227 |[0m                 raise ValidationError("Only club admins can invite other admins.")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m228 |[0m         except ClubMember.DoesNotExist:
[1m[94m229 |[0m             raise ValidationError("You must be a club member to send invitations.")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m227[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m225 |[0m             inviter_member = ClubMember.objects.get(club=self.club, user=self.inviter)
[1m[94m226 |[0m             if role == ClubRole.ADMIN and inviter_member.role != ClubRole.ADMIN:
[1m[94m227 |[0m                 raise ValidationError("Only club admins can invite other admins.")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m228 |[0m         except ClubMember.DoesNotExist:
[1m[94m229 |[0m             raise ValidationError("You must be a club member to send invitations.")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m229[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m227 |[0m                 raise ValidationError("Only club admins can invite other admins.")
[1m[94m228 |[0m         except ClubMember.DoesNotExist:
[1m[94m229 |[0m             raise ValidationError("You must be a club member to send invitations.")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m230 |[0m
[1m[94m231 |[0m         return role
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m229[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m227 |[0m                 raise ValidationError("Only club admins can invite other admins.")
[1m[94m228 |[0m         except ClubMember.DoesNotExist:
[1m[94m229 |[0m             raise ValidationError("You must be a club member to send invitations.")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m230 |[0m
[1m[94m231 |[0m         return role
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m229[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m227 |[0m                 raise ValidationError("Only club admins can invite other admins.")
[1m[94m228 |[0m         except ClubMember.DoesNotExist:
[1m[94m229 |[0m             raise ValidationError("You must be a club member to send invitations.")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m230 |[0m
[1m[94m231 |[0m         return role
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m292[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m290 |[0m         widgets = {
[1m[94m291 |[0m             "event": forms.HiddenInput(),  # Changed from Select to HiddenInput
[1m[94m292 |[0m             "title": forms.HiddenInput(),  # Changed to hidden - we'll generate this automatically
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m293 |[0m             "description": forms.Textarea(
[1m[94m294 |[0m                 attrs={
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m297[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m295 |[0m                     "class": "form-input",
[1m[94m296 |[0m                     "rows": 4,
[1m[94m297 |[0m                     "placeholder": "Provide details about this event signup for club members...",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m298 |[0m                 },
[1m[94m299 |[0m             ),
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m354[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m352 |[0m                     "class": "form-input",
[1m[94m353 |[0m                     "rows": 3,
[1m[94m354 |[0m                     "placeholder": "Internal notes for club admins (not visible to members)...",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m355 |[0m                 },
[1m[94m356 |[0m             ),
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m371[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m369 |[0m         if self.club:
[1m[94m370 |[0m             # Get events already with signup sheets for this club
[1m[94m371 |[0m             existing_event_ids = self.club.event_signup_sheets.values_list("event_id", flat=True)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m372 |[0m
[1m[94m373 |[0m             # Filter to available events
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m384[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m382 |[0m         if self.instance and self.instance.pk:
[1m[94m383 |[0m             if self.instance.signup_opens:
[1m[94m384 |[0m                 self.initial["signup_opens"] = self.instance.signup_opens.strftime("%Y-%m-%dT%H:%M")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m385 |[0m             if self.instance.signup_closes:
[1m[94m386 |[0m                 self.initial["signup_closes"] = self.instance.signup_closes.strftime("%Y-%m-%dT%H:%M")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m386[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m384 |[0m                 self.initial["signup_opens"] = self.instance.signup_opens.strftime("%Y-%m-%dT%H:%M")
[1m[94m385 |[0m             if self.instance.signup_closes:
[1m[94m386 |[0m                 self.initial["signup_closes"] = self.instance.signup_closes.strftime("%Y-%m-%dT%H:%M")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m387 |[0m
[1m[94m388 |[0m     def clean(self):
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m388[36m:[0m9[36m:[0m [1;31mC901[0m `clean` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m386 |[0m                 self.initial["signup_closes"] = self.instance.signup_closes.strftime("%Y-%m-%dT%H:%M")
[1m[94m387 |[0m
[1m[94m388 |[0m     def clean(self):
    [1m[94m|[0m         [1m[91m^^^^^[0m [1m[91mC901[0m
[1m[94m389 |[0m         cleaned_data = super().clean()
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m417[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m415 |[0m         if signup_opens and signup_closes:
[1m[94m416 |[0m             if signup_closes <= signup_opens:
[1m[94m417 |[0m                 raise ValidationError("Signup close time must be after open time")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m418 |[0m
[1m[94m419 |[0m             # Check that signup opens before event starts
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m417[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m415 |[0m         if signup_opens and signup_closes:
[1m[94m416 |[0m             if signup_closes <= signup_opens:
[1m[94m417 |[0m                 raise ValidationError("Signup close time must be after open time")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m418 |[0m
[1m[94m419 |[0m             # Check that signup opens before event starts
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m424[36m:[0m27[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m422 |[0m                   earliest_time_slot = event.time_slots.order_by("start_time").first()
[1m[94m423 |[0m                   if earliest_time_slot and signup_closes > earliest_time_slot.start_time:
[1m[94m424 |[0m                       raise ValidationError(
    [1m[94m|[0m  [1m[91m___________________________^[0m
[1m[94m425 |[0m [1m[91m|[0m                         f"Signups must close before the event starts ({earliest_time_slot.start_time})",
[1m[94m426 |[0m [1m[91m|[0m                     )
    [1m[94m|[0m [1m[91m|_____________________^[0m [1m[91mTRY003[0m
[1m[94m427 |[0m
[1m[94m428 |[0m           # Validate team size constraints
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m425[36m:[0m25[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m423 |[0m                 if earliest_time_slot and signup_closes > earliest_time_slot.start_time:
[1m[94m424 |[0m                     raise ValidationError(
[1m[94m425 |[0m                         f"Signups must close before the event starts ({earliest_time_slot.start_time})",
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m426 |[0m                     )
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/forms.py[0m[36m:[0m425[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m423 |[0m                 if earliest_time_slot and signup_closes > earliest_time_slot.start_time:
[1m[94m424 |[0m                     raise ValidationError(
[1m[94m425 |[0m                         f"Signups must close before the event starts ({earliest_time_slot.start_time})",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m426 |[0m                     )
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m434[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m433 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m434 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m435 |[0m
[1m[94m436 |[0m         if target_size:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m434[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m433 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m434 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m435 |[0m
[1m[94m436 |[0m         if target_size:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m434[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m433 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m434 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m435 |[0m
[1m[94m436 |[0m         if target_size:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m438[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m436 |[0m         if target_size:
[1m[94m437 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m438[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m436 |[0m         if target_size:
[1m[94m437 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m438[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m436 |[0m         if target_size:
[1m[94m437 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m440[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m441 |[0m
[1m[94m442 |[0m         return cleaned_data
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m440[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m441 |[0m
[1m[94m442 |[0m         return cleaned_data
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m440[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m438 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m439 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m440 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m441 |[0m
[1m[94m442 |[0m         return cleaned_data
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m444[36m:[0m20[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m442 |[0m         return cleaned_data
[1m[94m443 |[0m
[1m[94m444 |[0m     def save(self, commit=True):
    [1m[94m|[0m                    [1m[91m^^^^^^[0m [1m[91mFBT002[0m
[1m[94m445 |[0m         instance = super().save(commit=False)
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m483[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m481 |[0m             "placeholder": "Use {event_name} for event name, {date} for date",
[1m[94m482 |[0m         }),
[1m[94m483 |[0m         help_text="Title template for signup sheets. Use {event_name} and {date} as placeholders",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m484 |[0m     )
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m618[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m616 |[0m         if self.club:
[1m[94m617 |[0m             # Get events that don't already have signup sheets for this club
[1m[94m618 |[0m             existing_event_ids = self.club.event_signup_sheets.values_list("event_id", flat=True)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m619 |[0m
[1m[94m620 |[0m             # Show upcoming events only
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m629[36m:[0m9[36m:[0m [1;31mC901[0m `clean` is too complex (11 > 10)
    [1m[94m|[0m
[1m[94m627 |[0m             self.fields["events"].queryset = available_events
[1m[94m628 |[0m
[1m[94m629 |[0m     def clean(self):
    [1m[94m|[0m         [1m[91m^^^^^[0m [1m[91mC901[0m
[1m[94m630 |[0m         cleaned_data = super().clean()
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m640[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m639 |[0m             if not opens or not closes:
[1m[94m640 |[0m                 raise ValidationError("Fixed open and close times are required when using fixed timing")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m641 |[0m
[1m[94m642 |[0m             if closes <= opens:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m640[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m639 |[0m             if not opens or not closes:
[1m[94m640 |[0m                 raise ValidationError("Fixed open and close times are required when using fixed timing")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m641 |[0m
[1m[94m642 |[0m             if closes <= opens:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m640[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
    [1m[94m|[0m
[1m[94m639 |[0m             if not opens or not closes:
[1m[94m640 |[0m                 raise ValidationError("Fixed open and close times are required when using fixed timing")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m641 |[0m
[1m[94m642 |[0m             if closes <= opens:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m643[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m642 |[0m             if closes <= opens:
[1m[94m643 |[0m                 raise ValidationError("Close time must be after open time")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m644 |[0m
[1m[94m645 |[0m         elif timing == "relative":
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m643[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m642 |[0m             if closes <= opens:
[1m[94m643 |[0m                 raise ValidationError("Close time must be after open time")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m644 |[0m
[1m[94m645 |[0m         elif timing == "relative":
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m650[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m649 |[0m             if days_close >= days_open:
[1m[94m650 |[0m                 raise ValidationError("Signup must close closer to event than it opens")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m651 |[0m
[1m[94m652 |[0m         # Validate team settings
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m650[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m649 |[0m             if days_close >= days_open:
[1m[94m650 |[0m                 raise ValidationError("Signup must close closer to event than it opens")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m651 |[0m
[1m[94m652 |[0m         # Validate team settings
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m658[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m657 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m658 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m659 |[0m
[1m[94m660 |[0m         if target_size:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m658[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m657 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m658 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m659 |[0m
[1m[94m660 |[0m         if target_size:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m658[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m657 |[0m         if min_drivers and max_drivers and min_drivers > max_drivers:
[1m[94m658 |[0m             raise ValidationError("Minimum drivers cannot be greater than maximum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m659 |[0m
[1m[94m660 |[0m         if target_size:
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m662[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m660 |[0m         if target_size:
[1m[94m661 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m662[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m660 |[0m         if target_size:
[1m[94m661 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m662[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m660 |[0m         if target_size:
[1m[94m661 |[0m             if min_drivers and target_size < min_drivers:
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m664[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m665 |[0m
[1m[94m666 |[0m         # Validate template saving
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m664[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m665 |[0m
[1m[94m666 |[0m         # Validate template saving
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m664[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m662 |[0m                 raise ValidationError("Target team size cannot be less than minimum drivers")
[1m[94m663 |[0m             if max_drivers and target_size > max_drivers:
[1m[94m664 |[0m                 raise ValidationError("Target team size cannot be greater than maximum drivers")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m665 |[0m
[1m[94m666 |[0m         # Validate template saving
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m671[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m670 |[0m         if save_template and not template_name:
[1m[94m671 |[0m             raise ValidationError("Template name is required when saving as template")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m672 |[0m
[1m[94m673 |[0m         return cleaned_data
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m671[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m670 |[0m         if save_template and not template_name:
[1m[94m671 |[0m             raise ValidationError("Template name is required when saving as template")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m672 |[0m
[1m[94m673 |[0m         return cleaned_data
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m717[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m715 |[0m             title = title_template.format(
[1m[94m716 |[0m                 event_name=event.name,
[1m[94m717 |[0m                 date=earliest_time_slot.start_time.strftime("%b %d") if earliest_time_slot else "TBD",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m718 |[0m             )
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m721[36m:[0m21[36m:[0m [1;31mF821[0m Undefined name `ClubEventSignupSheet`
    [1m[94m|[0m
[1m[94m720 |[0m             # Create the signup sheet
[1m[94m721 |[0m             sheet = ClubEventSignupSheet.objects.create(
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m722 |[0m                 club=self.club,
[1m[94m723 |[0m                 event=event,
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m754[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m754 |[0m # Legacy form classes removed (EventSignupForm, EventSignupAvailabilityForm, TeamAllocationForm)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m755 |[0m # These depended on removed models: EventSignup, EventSignupAvailability, TeamAllocation, TeamAllocationMember
[1m[94m756 |[0m # Use EnhancedEventSignupForm for new participation system
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m755[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
    [1m[94m|[0m
[1m[94m754 |[0m # Legacy form classes removed (EventSignupForm, EventSignupAvailabilityForm, TeamAllocationForm)
[1m[94m755 |[0m # These depended on removed models: EventSignup, EventSignupAvailability, TeamAllocation, TeamAllocationMember
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m756 |[0m # Use EnhancedEventSignupForm for new participation system
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m841[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m840 |[0m         if preferred_car and backup_car and preferred_car == backup_car:
[1m[94m841 |[0m             raise ValidationError("Preferred and backup cars must be different")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m842 |[0m
[1m[94m843 |[0m         return cleaned_data
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m841[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m840 |[0m         if preferred_car and backup_car and preferred_car == backup_car:
[1m[94m841 |[0m             raise ValidationError("Preferred and backup cars must be different")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m842 |[0m
[1m[94m843 |[0m         return cleaned_data
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/forms.py[0m[36m:[0m845[36m:[0m43[36m:[0m [1;31mFBT002[0m Boolean default positional argument in function definition
    [1m[94m|[0m
[1m[94m843 |[0m         return cleaned_data
[1m[94m844 |[0m
[1m[94m845 |[0m     def save(self, event=None, user=None, commit=True):
    [1m[94m|[0m                                           [1m[91m^^^^^^[0m [1m[91mFBT002[0m
[1m[94m846 |[0m         """Create EventParticipation instance"""
[1m[94m847 |[0m         from .models import EventParticipation
    [1m[94m|[0m

[1msimlane/teams/forms.py[0m[36m:[0m866[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `participation` before `return` statement
    [1m[94m|[0m
[1m[94m864 |[0m         )
[1m[94m865 |[0m
[1m[94m866 |[0m         return participation
    [1m[94m|[0m                [1m[91m^^^^^^^^^^^^^[0m [1m[91mRET504[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m45[36m:[0m9[36m:[0m [1;31mC901[0m `handle` is too complex (16 > 10)
   [1m[94m|[0m
[1m[94m43 |[0m         )
[1m[94m44 |[0m
[1m[94m45 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mC901[0m
[1m[94m46 |[0m         dry_run = options["dry_run"]
[1m[94m47 |[0m         days_buffer = options["days"]
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m45[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (15 > 12)
   [1m[94m|[0m
[1m[94m43 |[0m         )
[1m[94m44 |[0m
[1m[94m45 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m46 |[0m         dry_run = options["dry_run"]
[1m[94m47 |[0m         days_buffer = options["days"]
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m45[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (51 > 50)
   [1m[94m|[0m
[1m[94m43 |[0m         )
[1m[94m44 |[0m
[1m[94m45 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m46 |[0m         dry_run = options["dry_run"]
[1m[94m47 |[0m         days_buffer = options["days"]
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m72[36m:[0m20[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
   [1m[94m|[0m
[1m[94m70 |[0m                 if verbose:
[1m[94m71 |[0m                     self.stdout.write(f"Filtering by club: {club_id}")
[1m[94m72 |[0m             except Exception as e:
   [1m[94m|[0m                    [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m73 |[0m                 raise CommandError(f"Invalid club ID: {e}")
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m73[36m:[0m17[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
   [1m[94m|[0m
[1m[94m71 |[0m                     self.stdout.write(f"Filtering by club: {club_id}")
[1m[94m72 |[0m             except Exception as e:
[1m[94m73 |[0m                 raise CommandError(f"Invalid club ID: {e}")
   [1m[94m|[0m                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m74 |[0m
[1m[94m75 |[0m         # Get expired invitations
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m73[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m71 |[0m                     self.stdout.write(f"Filtering by club: {club_id}")
[1m[94m72 |[0m             except Exception as e:
[1m[94m73 |[0m                 raise CommandError(f"Invalid club ID: {e}")
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m74 |[0m
[1m[94m75 |[0m         # Get expired invitations
   [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m73[36m:[0m36[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
   [1m[94m|[0m
[1m[94m71 |[0m                     self.stdout.write(f"Filtering by club: {club_id}")
[1m[94m72 |[0m             except Exception as e:
[1m[94m73 |[0m                 raise CommandError(f"Invalid club ID: {e}")
   [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m74 |[0m
[1m[94m75 |[0m         # Get expired invitations
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m131[36m:[0m37[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m129 |[0m                             self.stdout.write(f"Deleted: {invitation_info}")
[1m[94m130 |[0m
[1m[94m131 |[0m                         logger.info(f"Deleted expired invitation: {invitation_info}")
    [1m[94m|[0m                                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m132 |[0m
[1m[94m133 |[0m                     except Exception as e:
    [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m133[36m:[0m28[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m131 |[0m                         logger.info(f"Deleted expired invitation: {invitation_info}")
[1m[94m132 |[0m
[1m[94m133 |[0m                     except Exception as e:
    [1m[94m|[0m                            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m134 |[0m                         error_msg = f"Failed to delete invitation {invitation.pk}: {e}"
[1m[94m135 |[0m                         errors.append(error_msg)
    [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m136[36m:[0m25[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m134 |[0m                         error_msg = f"Failed to delete invitation {invitation.pk}: {e}"
[1m[94m135 |[0m                         errors.append(error_msg)
[1m[94m136 |[0m                         logger.error(error_msg)
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m137 |[0m
[1m[94m138 |[0m                 if errors:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m151[36m:[0m29[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m149 |[0m                 )
[1m[94m150 |[0m
[1m[94m151 |[0m                 logger.info(f"Cleanup completed: {deleted_count} invitations deleted")
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m152 |[0m
[1m[94m153 |[0m         except Exception as e:
    [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m153[36m:[0m16[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m151 |[0m                 logger.info(f"Cleanup completed: {deleted_count} invitations deleted")
[1m[94m152 |[0m
[1m[94m153 |[0m         except Exception as e:
    [1m[94m|[0m                [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m154 |[0m             error_msg = f"Failed to clean up invitations: {e}"
[1m[94m155 |[0m             self.stdout.write(self.style.ERROR(error_msg))
    [1m[94m|[0m

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m156[36m:[0m13[36m:[0m [1;31mTRY400[0m Use `logging.exception` instead of `logging.error`
    [1m[94m|[0m
[1m[94m154 |[0m             error_msg = f"Failed to clean up invitations: {e}"
[1m[94m155 |[0m             self.stdout.write(self.style.ERROR(error_msg))
[1m[94m156 |[0m             logger.error(error_msg)
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY400[0m
[1m[94m157 |[0m             raise CommandError(error_msg)
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `exception`

[1msimlane/teams/management/commands/cleanup_expired_invitations.py[0m[36m:[0m157[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m155 |[0m             self.stdout.write(self.style.ERROR(error_msg))
[1m[94m156 |[0m             logger.error(error_msg)
[1m[94m157 |[0m             raise CommandError(error_msg)
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m158 |[0m
[1m[94m159 |[0m     def _get_statistics(self):
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m45[36m:[0m9[36m:[0m [1;31mPLR0915[0m Too many statements (52 > 50)
   [1m[94m|[0m
[1m[94m43 |[0m         )
[1m[94m44 |[0m
[1m[94m45 |[0m     def handle(self, *args, **options):
   [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mPLR0915[0m
[1m[94m46 |[0m         # Dynamic imports to avoid circular dependencies
[1m[94m47 |[0m         from simlane.sim.models import Event
   [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m86[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m84 |[0m         # Create test cars
[1m[94m85 |[0m         cars = []
[1m[94m86 |[0m         car_names = ["BMW M4 GT3", "Mercedes AMG GT3", "Porsche 911 GT3 R", "Ferrari 488 GT3"]
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m87 |[0m         for car_name in car_names:
[1m[94m88 |[0m             car, _ = SimCar.objects.get_or_create(
   [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m148[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m146 |[0m         users = []
[1m[94m147 |[0m         experience_levels = ["beginner", "intermediate", "advanced", "professional"]
[1m[94m148 |[0m         timezones = ["US/Eastern", "US/Pacific", "Europe/London", "Europe/Paris", "Australia/Sydney"]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m149 |[0m
[1m[94m150 |[0m         for i in range(options["users"]):
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m170[36m:[0m29[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m168 |[0m         for i, user in enumerate(users):
[1m[94m169 |[0m             # Vary preferences
[1m[94m170 |[0m             preferred_car = random.choice(cars)
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m171 |[0m             backup_car = random.choice([c for c in cars if c != preferred_car] + [None])
[1m[94m172 |[0m             experience = random.choice(experience_levels)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m171[36m:[0m26[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m169 |[0m             # Vary preferences
[1m[94m170 |[0m             preferred_car = random.choice(cars)
[1m[94m171 |[0m             backup_car = random.choice([c for c in cars if c != preferred_car] + [None])
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m172 |[0m             experience = random.choice(experience_levels)
[1m[94m173 |[0m             user_timezone = random.choice(timezones)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m172[36m:[0m26[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m170 |[0m             preferred_car = random.choice(cars)
[1m[94m171 |[0m             backup_car = random.choice([c for c in cars if c != preferred_car] + [None])
[1m[94m172 |[0m             experience = random.choice(experience_levels)
    [1m[94m|[0m                          [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m173 |[0m             user_timezone = random.choice(timezones)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m173[36m:[0m29[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m171 |[0m             backup_car = random.choice([c for c in cars if c != preferred_car] + [None])
[1m[94m172 |[0m             experience = random.choice(experience_levels)
[1m[94m173 |[0m             user_timezone = random.choice(timezones)
    [1m[94m|[0m                             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m174 |[0m
[1m[94m175 |[0m             participation = EventParticipationService.create_team_signup(
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m182[36m:[0m36[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m180 |[0m                 backup_car=backup_car,
[1m[94m181 |[0m                 experience_level=experience,
[1m[94m182 |[0m                 max_stint_duration=random.randint(45, 120),
    [1m[94m|[0m                                    [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m183 |[0m                 min_rest_duration=random.randint(15, 45),
[1m[94m184 |[0m                 timezone=user_timezone,
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m183[36m:[0m35[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m181 |[0m                 experience_level=experience,
[1m[94m182 |[0m                 max_stint_duration=random.randint(45, 120),
[1m[94m183 |[0m                 min_rest_duration=random.randint(15, 45),
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m184 |[0m                 timezone=user_timezone,
[1m[94m185 |[0m                 notes=f"Test participant {i+1} - {experience} level driver",
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m190[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m189 |[0m             # Create availability windows
[1m[94m190 |[0m             self.create_availability_windows(participation, event_start, user_timezone, AvailabilityService)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m191 |[0m
[1m[94m192 |[0m         self.stdout.write(f"Created {len(participations)} participations with availability")
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m192[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m190 |[0m             self.create_availability_windows(participation, event_start, user_timezone, AvailabilityService)
[1m[94m191 |[0m
[1m[94m192 |[0m         self.stdout.write(f"Created {len(participations)} participations with availability")
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m193 |[0m
[1m[94m194 |[0m         # Show summary
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m197[36m:[0m85[36m:[0m [1;31mN803[0m Argument name `AvailabilityService` should be lowercase
    [1m[94m|[0m
[1m[94m195 |[0m         self.show_summary(event, club_event, participations)
[1m[94m196 |[0m
[1m[94m197 |[0m     def create_availability_windows(self, participation, event_start, timezone_str, AvailabilityService):
    [1m[94m|[0m                                                                                     [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mN803[0m
[1m[94m198 |[0m         """Create realistic availability windows for a participant"""
[1m[94m199 |[0m         # Different availability patterns
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m197[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m195 |[0m         self.show_summary(event, club_event, participations)
[1m[94m196 |[0m
[1m[94m197 |[0m     def create_availability_windows(self, participation, event_start, timezone_str, AvailabilityService):
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m198 |[0m         """Create realistic availability windows for a participant"""
[1m[94m199 |[0m         # Different availability patterns
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m208[36m:[0m19[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m206 |[0m         ]
[1m[94m207 |[0m
[1m[94m208 |[0m         pattern = random.choice(patterns)
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m209 |[0m         windows = []
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m232[36m:[0m41[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m230 |[0m                     "can_drive": True,
[1m[94m231 |[0m                     "can_spot": True,
[1m[94m232 |[0m                     "preference_level": random.randint(1, 3),
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m233 |[0m                 })
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m246[36m:[0m41[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m244 |[0m                     "can_drive": True,
[1m[94m245 |[0m                     "can_spot": False,  # Tired at night
[1m[94m246 |[0m                     "preference_level": random.randint(2, 4),
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m247 |[0m                 })
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m251[36m:[0m27[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m249 |[0m         elif pattern == "sporadic":
[1m[94m250 |[0m             # Random windows throughout the event
[1m[94m251 |[0m             num_windows = random.randint(3, 6)
    [1m[94m|[0m                           [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m252 |[0m             for _ in range(num_windows):
[1m[94m253 |[0m                 start_offset = random.randint(0, 18)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m253[36m:[0m32[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m251 |[0m             num_windows = random.randint(3, 6)
[1m[94m252 |[0m             for _ in range(num_windows):
[1m[94m253 |[0m                 start_offset = random.randint(0, 18)
    [1m[94m|[0m                                [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m254 |[0m                 duration = random.randint(2, 6)
[1m[94m255 |[0m                 start_time = event_start + timedelta(hours=start_offset)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m254[36m:[0m28[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m252 |[0m             for _ in range(num_windows):
[1m[94m253 |[0m                 start_offset = random.randint(0, 18)
[1m[94m254 |[0m                 duration = random.randint(2, 6)
    [1m[94m|[0m                            [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m255 |[0m                 start_time = event_start + timedelta(hours=start_offset)
[1m[94m256 |[0m                 end_time = start_time + timedelta(hours=duration)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m260[36m:[0m34[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m258 |[0m                     "start_time_local": start_time,
[1m[94m259 |[0m                     "end_time_local": end_time,
[1m[94m260 |[0m                     "can_drive": random.choice([True, True, False]),
    [1m[94m|[0m                                  [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m261 |[0m                     "can_spot": True,
[1m[94m262 |[0m                     "preference_level": random.randint(1, 5),
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m262[36m:[0m41[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m260 |[0m                     "can_drive": random.choice([True, True, False]),
[1m[94m261 |[0m                     "can_spot": True,
[1m[94m262 |[0m                     "preference_level": random.randint(1, 5),
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m263 |[0m                 })
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m268[36m:[0m67[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m266 |[0m             # Very limited availability
[1m[94m267 |[0m             windows.append({
[1m[94m268 |[0m                 "start_time_local": event_start + timedelta(hours=random.randint(4, 16)),
    [1m[94m|[0m                                                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m269 |[0m                 "end_time_local": event_start + timedelta(hours=random.randint(18, 22)),
[1m[94m270 |[0m                 "can_drive": True,
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m268[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m266 |[0m             # Very limited availability
[1m[94m267 |[0m             windows.append({
[1m[94m268 |[0m                 "start_time_local": event_start + timedelta(hours=random.randint(4, 16)),
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m269 |[0m                 "end_time_local": event_start + timedelta(hours=random.randint(18, 22)),
[1m[94m270 |[0m                 "can_drive": True,
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m269[36m:[0m65[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m267 |[0m             windows.append({
[1m[94m268 |[0m                 "start_time_local": event_start + timedelta(hours=random.randint(4, 16)),
[1m[94m269 |[0m                 "end_time_local": event_start + timedelta(hours=random.randint(18, 22)),
    [1m[94m|[0m                                                                 [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m270 |[0m                 "can_drive": True,
[1m[94m271 |[0m                 "can_spot": True,
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m272[36m:[0m37[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m270 |[0m                 "can_drive": True,
[1m[94m271 |[0m                 "can_spot": True,
[1m[94m272 |[0m                 "preference_level": random.randint(3, 5),
    [1m[94m|[0m                                     [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
[1m[94m273 |[0m             })
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m282[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `created_windows` before `return` statement
    [1m[94m|[0m
[1m[94m280 |[0m         )
[1m[94m281 |[0m
[1m[94m282 |[0m         return created_windows
    [1m[94m|[0m                [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mRET504[0m
[1m[94m283 |[0m
[1m[94m284 |[0m     def clear_test_data(self):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m318[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m317 |[0m         # Get coverage report
[1m[94m318 |[0m         coverage = AvailabilityService.generate_coverage_report(event, timezone_display="UTC")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m319 |[0m
[1m[94m320 |[0m         self.stdout.write("\n" + "="*50)
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m332[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m330 |[0m         self.stdout.write("\nAvailability Coverage:")
[1m[94m331 |[0m         total_hours = len(coverage["hourly_coverage"])
[1m[94m332 |[0m         covered_hours = sum(1 for h in coverage["hourly_coverage"].values() if h["drivers"] > 0)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m333 |[0m         self.stdout.write(f"Coverage: {covered_hours}/{total_hours} hours ({covered_hours/total_hours*100:.0f}%)")
    [1m[94m|[0m

[1msimlane/teams/management/commands/create_test_participation.py[0m[36m:[0m333[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (114 > 88)
    [1m[94m|[0m
[1m[94m331 |[0m         total_hours = len(coverage["hourly_coverage"])
[1m[94m332 |[0m         covered_hours = sum(1 for h in coverage["hourly_coverage"].values() if h["drivers"] > 0)
[1m[94m333 |[0m         self.stdout.write(f"Coverage: {covered_hours}/{total_hours} hours ({covered_hours/total_hours*100:.0f}%)")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m334 |[0m
[1m[94m335 |[0m         self.stdout.write("\nNext Steps:")
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m188[36m:[0m18[36m:[0m [1;31mDJ001[0m Avoid using `null=True` on string-based fields such as `CharField`
    [1m[94m|[0m
[1m[94m187 |[0m       # Simulator integration - if sim_api_id exists, team is imported
[1m[94m188 |[0m       sim_api_id = models.CharField(
    [1m[94m|[0m  [1m[91m__________________^[0m
[1m[94m189 |[0m [1m[91m|[0m         max_length=255,
[1m[94m190 |[0m [1m[91m|[0m         blank=True,
[1m[94m191 |[0m [1m[91m|[0m         null=True,
[1m[94m192 |[0m [1m[91m|[0m         help_text="Team ID from simulator (e.g., iRacing team ID). If present, team is imported.",
[1m[94m193 |[0m [1m[91m|[0m     )
    [1m[94m|[0m [1m[91m|_____^[0m [1m[91mDJ001[0m
[1m[94m194 |[0m       source_simulator = models.ForeignKey(
[1m[94m195 |[0m           Simulator,
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m192[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m190 |[0m         blank=True,
[1m[94m191 |[0m         null=True,
[1m[94m192 |[0m         help_text="Team ID from simulator (e.g., iRacing team ID). If present, team is imported.",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m193 |[0m     )
[1m[94m194 |[0m     source_simulator = models.ForeignKey(
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m221[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m219 |[0m         unique_together = [
[1m[94m220 |[0m             ["owner_user", "slug"],  # Unique slug per user (when user-owned)
[1m[94m221 |[0m             ["owner_sim_profile", "slug"],  # Unique slug per sim profile (when imported)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m222 |[0m             ["club", "slug"],  # Unique slug per club (when associated)
[1m[94m223 |[0m         ]
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m356[36m:[0m9[36m:[0m [1;31mSIM103[0m Return the condition directly
    [1m[94m|[0m
[1m[94m355 |[0m           # Club members can view club teams
[1m[94m356 |[0m [1m[91m/[0m         if self.club and self.club.members.filter(user=user).exists():
[1m[94m357 |[0m [1m[91m|[0m             return True
[1m[94m358 |[0m [1m[91m|[0m
[1m[94m359 |[0m [1m[91m|[0m         return False
    [1m[94m|[0m [1m[91m|____________________^[0m [1m[91mSIM103[0m
[1m[94m360 |[0m
[1m[94m361 |[0m       def claim_team(self, user):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Inline condition

[1msimlane/teams/models.py[0m[36m:[0m364[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m362 |[0m         """Allow a user to claim an imported team"""
[1m[94m363 |[0m         if not self.is_claimable:
[1m[94m364 |[0m             raise ValueError("This team cannot be claimed")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m365 |[0m
[1m[94m366 |[0m         if not self.owner_sim_profile:
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m364[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m362 |[0m         """Allow a user to claim an imported team"""
[1m[94m363 |[0m         if not self.is_claimable:
[1m[94m364 |[0m             raise ValueError("This team cannot be claimed")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m365 |[0m
[1m[94m366 |[0m         if not self.owner_sim_profile:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/models.py[0m[36m:[0m367[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m366 |[0m         if not self.owner_sim_profile:
[1m[94m367 |[0m             raise ValueError("No sim profile associated with this team")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m368 |[0m
[1m[94m369 |[0m         # Link the sim profile to the user
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m367[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m366 |[0m         if not self.owner_sim_profile:
[1m[94m367 |[0m             raise ValueError("No sim profile associated with this team")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m368 |[0m
[1m[94m369 |[0m         # Link the sim profile to the user
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/models.py[0m[36m:[0m480[36m:[0m9[36m:[0m [1;31mSIM103[0m Return the condition `not (self.valid_until and now > self.valid_until)` directly
    [1m[94m|[0m
[1m[94m478 |[0m               return False
[1m[94m479 |[0m
[1m[94m480 |[0m [1m[91m/[0m         if self.valid_until and now > self.valid_until:
[1m[94m481 |[0m [1m[91m|[0m             return False
[1m[94m482 |[0m [1m[91m|[0m
[1m[94m483 |[0m [1m[91m|[0m         return True
    [1m[94m|[0m [1m[91m|___________________^[0m [1m[91mSIM103[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace with `return not (self.valid_until and now > self.valid_until)`

[1msimlane/teams/models.py[0m[36m:[0m523[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m521 |[0m         blank=True,
[1m[94m522 |[0m         related_name="event_signups",
[1m[94m523 |[0m         help_text="Which club this signup is associated with (for club-organized signups)",
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m524 |[0m     )
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m658[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m656 |[0m     )
[1m[94m657 |[0m
[1m[94m658 |[0m     # Legacy team allocation field removed - using direct team assignment in enhanced system
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m659 |[0m
[1m[94m660 |[0m     # For individual team formation
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m666[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m664 |[0m         null=True,
[1m[94m665 |[0m         blank=True,
[1m[94m666 |[0m         help_text="Invitation that led to this signup (for individual-organized events)",
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m667 |[0m     )
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m708[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m706 |[0m                 fields=["assigned_time_slot", "user"],
[1m[94m707 |[0m                 name="unique_user_event_time_slot_participation",
[1m[94m708 |[0m                 condition=models.Q(assigned_time_slot__isnull=False, user__isnull=False),
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m709 |[0m             ),
[1m[94m710 |[0m             # Team can only participate in one time slot at a time
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m714[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m712 |[0m                 fields=["assigned_time_slot", "team"],
[1m[94m713 |[0m                 name="unique_team_event_time_slot_participation",
[1m[94m714 |[0m                 condition=models.Q(assigned_time_slot__isnull=False, team__isnull=False),
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m715 |[0m             ),
[1m[94m716 |[0m         ]
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m726[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m724 |[0m             models.Index(fields=["participation_type", "status"]),
[1m[94m725 |[0m             models.Index(fields=["event", "participation_type"]),
[1m[94m726 |[0m             models.Index(fields=["signup_context_club", "event"]),  # New index for club signups
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m727 |[0m             models.Index(fields=["assigned_time_slot", "status"]),  # New index for time slot queries
[1m[94m728 |[0m         ]
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m727[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m725 |[0m             models.Index(fields=["event", "participation_type"]),
[1m[94m726 |[0m             models.Index(fields=["signup_context_club", "event"]),  # New index for club signups
[1m[94m727 |[0m             models.Index(fields=["assigned_time_slot", "status"]),  # New index for time slot queries
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m728 |[0m         ]
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m765[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m763 |[0m         """Assign this participation to a team"""
[1m[94m764 |[0m         if not self.can_be_assigned_to_team():
[1m[94m765 |[0m             raise ValueError(f"Cannot assign participation in status {self.status}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m766 |[0m
[1m[94m767 |[0m         self.team = team
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m765[36m:[0m30[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m763 |[0m         """Assign this participation to a team"""
[1m[94m764 |[0m         if not self.can_be_assigned_to_team():
[1m[94m765 |[0m             raise ValueError(f"Cannot assign participation in status {self.status}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m766 |[0m
[1m[94m767 |[0m         self.team = team
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/models.py[0m[36m:[0m777[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m775 |[0m         """Confirm the event entry"""
[1m[94m776 |[0m         if self.status != "entered":
[1m[94m777 |[0m             raise ValueError(f"Cannot confirm participation in status {self.status}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m778 |[0m
[1m[94m779 |[0m         self.status = "confirmed"
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m777[36m:[0m30[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m775 |[0m         """Confirm the event entry"""
[1m[94m776 |[0m         if self.status != "entered":
[1m[94m777 |[0m             raise ValueError(f"Cannot confirm participation in status {self.status}")
    [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m778 |[0m
[1m[94m779 |[0m         self.status = "confirmed"
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/models.py[0m[36m:[0m788[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m786 |[0m     def get_participants_for_event(cls, event, status_filter=None):
[1m[94m787 |[0m         """Get all participants for an event with optional status filter"""
[1m[94m788 |[0m         queryset = cls.objects.filter(event=event).select_related("user", "team__owner_user")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m789 |[0m
[1m[94m790 |[0m         if status_filter:
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m884[36m:[0m9[36m:[0m [1;31mC901[0m `clean` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m882 |[0m         ]
[1m[94m883 |[0m
[1m[94m884 |[0m     def clean(self):
    [1m[94m|[0m         [1m[91m^^^^^[0m [1m[91mC901[0m
[1m[94m885 |[0m         """
[1m[94m886 |[0m         Custom validation for complex constraints that can't be done at database level
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m902[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m900 |[0m             if duration_minutes % 15 != 0:
[1m[94m901 |[0m                 raise ValidationError({
[1m[94m902 |[0m                     "__all__": "Availability window duration must be a multiple of 15 minutes.",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m903 |[0m                 })
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m913[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
    [1m[94m|[0m
[1m[94m911 |[0m                 if self.start_time < event.start_time:
[1m[94m912 |[0m                     raise ValidationError({
[1m[94m913 |[0m                         "start_time": f"Availability window cannot start before event start time ({event.start_time})",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m914 |[0m                     })
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m919[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
    [1m[94m|[0m
[1m[94m917 |[0m                 if self.end_time > event.end_time:
[1m[94m918 |[0m                     raise ValidationError({
[1m[94m919 |[0m                         "end_time": f"Availability window cannot end after event end time ({event.end_time})",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m920 |[0m                     })
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m934[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m932 |[0m                 if overlapping:
[1m[94m933 |[0m                     raise ValidationError({
[1m[94m934 |[0m                         "__all__": f"This availability window overlaps with another window "
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m935 |[0m                                   f"({overlapping.start_time} to {overlapping.end_time}). "
[1m[94m936 |[0m                                   f"Windows for the same participant cannot overlap.",
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m935[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m933 |[0m                     raise ValidationError({
[1m[94m934 |[0m                         "__all__": f"This availability window overlaps with another window "
[1m[94m935 |[0m                                   f"({overlapping.start_time} to {overlapping.end_time}). "
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m936 |[0m                                   f"Windows for the same participant cannot overlap.",
[1m[94m937 |[0m                     })
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m939[36m:[0m5[36m:[0m [1;31mDJ012[0m Order of model's inner classes, methods, and fields does not follow the Django Style Guide: `save` method should come before custom method
    [1m[94m|[0m
[1m[94m937 |[0m                       })
[1m[94m938 |[0m
[1m[94m939 |[0m [1m[91m/[0m     def save(self, *args, **kwargs):
[1m[94m940 |[0m [1m[91m|[0m         """Override save to call clean() validation"""
[1m[94m941 |[0m [1m[91m|[0m         self.full_clean()
[1m[94m942 |[0m [1m[91m|[0m         super().save(*args, **kwargs)
    [1m[94m|[0m [1m[91m|_____________________________________^[0m [1m[91mDJ012[0m
[1m[94m943 |[0m
[1m[94m944 |[0m       def __str__(self):
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m944[36m:[0m5[36m:[0m [1;31mDJ012[0m Order of model's inner classes, methods, and fields does not follow the Django Style Guide: Magic method should come before custom method
    [1m[94m|[0m
[1m[94m942 |[0m           super().save(*args, **kwargs)
[1m[94m943 |[0m
[1m[94m944 |[0m [1m[91m/[0m     def __str__(self):
[1m[94m945 |[0m [1m[91m|[0m         participant = self.participation.effective_participant_name
[1m[94m946 |[0m [1m[91m|[0m         roles = []
[1m[94m947 |[0m [1m[91m|[0m         if self.can_drive: roles.append("drive")
[1m[94m948 |[0m [1m[91m|[0m         if self.can_spot: roles.append("spot")
[1m[94m949 |[0m [1m[91m|[0m         if self.can_strategize: roles.append("strategize")
[1m[94m950 |[0m [1m[91m|[0m         return f"{participant} - {self.start_time} to {self.end_time} ({'/'.join(roles)})"
    [1m[94m|[0m [1m[91m|__________________________________________________________________________________________^[0m [1m[91mDJ012[0m
[1m[94m951 |[0m
[1m[94m952 |[0m       def get_local_times(self):
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m947[36m:[0m26[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m945 |[0m         participant = self.participation.effective_participant_name
[1m[94m946 |[0m         roles = []
[1m[94m947 |[0m         if self.can_drive: roles.append("drive")
    [1m[94m|[0m                          [1m[91m^[0m [1m[91mE701[0m
[1m[94m948 |[0m         if self.can_spot: roles.append("spot")
[1m[94m949 |[0m         if self.can_strategize: roles.append("strategize")
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m948[36m:[0m25[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m946 |[0m         roles = []
[1m[94m947 |[0m         if self.can_drive: roles.append("drive")
[1m[94m948 |[0m         if self.can_spot: roles.append("spot")
    [1m[94m|[0m                         [1m[91m^[0m [1m[91mE701[0m
[1m[94m949 |[0m         if self.can_strategize: roles.append("strategize")
[1m[94m950 |[0m         return f"{participant} - {self.start_time} to {self.end_time} ({'/'.join(roles)})"
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m949[36m:[0m31[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m947 |[0m         if self.can_drive: roles.append("drive")
[1m[94m948 |[0m         if self.can_spot: roles.append("spot")
[1m[94m949 |[0m         if self.can_strategize: roles.append("strategize")
    [1m[94m|[0m                               [1m[91m^[0m [1m[91mE701[0m
[1m[94m950 |[0m         return f"{participant} - {self.start_time} to {self.end_time} ({'/'.join(roles)})"
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m950[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m948 |[0m         if self.can_spot: roles.append("spot")
[1m[94m949 |[0m         if self.can_strategize: roles.append("strategize")
[1m[94m950 |[0m         return f"{participant} - {self.start_time} to {self.end_time} ({'/'.join(roles)})"
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m951 |[0m
[1m[94m952 |[0m     def get_local_times(self):
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m982[36m:[0m26[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m980 |[0m         """Get list of available roles during this window"""
[1m[94m981 |[0m         roles = []
[1m[94m982 |[0m         if self.can_drive: roles.append("driver")
    [1m[94m|[0m                          [1m[91m^[0m [1m[91mE701[0m
[1m[94m983 |[0m         if self.can_spot: roles.append("spotter")
[1m[94m984 |[0m         if self.can_strategize: roles.append("strategist")
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m983[36m:[0m25[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m981 |[0m         roles = []
[1m[94m982 |[0m         if self.can_drive: roles.append("driver")
[1m[94m983 |[0m         if self.can_spot: roles.append("spotter")
    [1m[94m|[0m                         [1m[91m^[0m [1m[91mE701[0m
[1m[94m984 |[0m         if self.can_strategize: roles.append("strategist")
[1m[94m985 |[0m         return roles
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m984[36m:[0m31[36m:[0m [1;31mE701[0m Multiple statements on one line (colon)
    [1m[94m|[0m
[1m[94m982 |[0m         if self.can_drive: roles.append("driver")
[1m[94m983 |[0m         if self.can_spot: roles.append("spotter")
[1m[94m984 |[0m         if self.can_strategize: roles.append("strategist")
    [1m[94m|[0m                               [1m[91m^[0m [1m[91mE701[0m
[1m[94m985 |[0m         return roles
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m992[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m990 |[0m         Find all availability windows that cover the specified time range for a role
[1m[94m991 |[0m         """
[1m[94m992 |[0m         role_field = f"can_{role}" if role in ["drive", "spot", "strategize"] else "can_drive"
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m993 |[0m
[1m[94m994 |[0m         return cls.objects.filter(
    [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1021[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
     [1m[94m|[0m
[1m[94m1019 |[0m             chart_data.append({
[1m[94m1020 |[0m                 "user": window.participation.user,
[1m[94m1021 |[0m                 "user_id": window.participation.user.id if window.participation.user else None,
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m1022 |[0m                 "start_utc": window.start_time,
[1m[94m1023 |[0m                 "end_utc": window.end_time,
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1101[36m:[0m9[36m:[0m [1;31mC901[0m `get_team_formation_recommendations` is too complex (12 > 10)
     [1m[94m|[0m
[1m[94m1100 |[0m     @classmethod
[1m[94m1101 |[0m     def get_team_formation_recommendations(cls, event, team_size=3, min_coverage_hours=6):
     [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m1102 |[0m         """
[1m[94m1103 |[0m         Advanced team formation algorithm using availability overlap analysis
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1101[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
     [1m[94m|[0m
[1m[94m1100 |[0m     @classmethod
[1m[94m1101 |[0m     def get_team_formation_recommendations(cls, event, team_size=3, min_coverage_hours=6):
     [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m1102 |[0m         """
[1m[94m1103 |[0m         Advanced team formation algorithm using availability overlap analysis
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1176[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
     [1m[94m|[0m
[1m[94m1174 |[0m                 used_users.update(potential_team)
[1m[94m1175 |[0m
[1m[94m1176 |[0m         return sorted(recommendations, key=lambda x: x["total_overlap_score"], reverse=True)
     [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1300[36m:[0m13[36m:[0m [1;31mB007[0m Loop control variable `driver_id` not used within loop body
     [1m[94m|[0m
[1m[94m1299 |[0m         issues = []
[1m[94m1300 |[0m         for driver_id, stints in driver_stints.items():
     [1m[94m|[0m             [1m[91m^^^^^^^^^[0m [1m[91mB007[0m
[1m[94m1301 |[0m             for i in range(1, len(stints)):
[1m[94m1302 |[0m                 prev_end = stints[i-1].get_planned_end_time()
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Rename unused `driver_id` to `_driver_id`

[1msimlane/teams/models.py[0m[36m:[0m1300[36m:[0m34[36m:[0m [1;31mPERF102[0m When using only the values of a dict use the `values()` method
     [1m[94m|[0m
[1m[94m1299 |[0m         issues = []
[1m[94m1300 |[0m         for driver_id, stints in driver_stints.items():
     [1m[94m|[0m                                  [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mPERF102[0m
[1m[94m1301 |[0m             for i in range(1, len(stints)):
[1m[94m1302 |[0m                 prev_end = stints[i-1].get_planned_end_time()
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Replace `.items()` with `.values()`

[1msimlane/teams/models.py[0m[36m:[0m1308[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
     [1m[94m|[0m
[1m[94m1306 |[0m                     rest_duration = (next_start - prev_end).total_seconds() / 60
[1m[94m1307 |[0m                     if rest_duration < self.min_driver_rest:
[1m[94m1308 |[0m                         issues.append(f"Insufficient rest for driver {stints[i].driver}")
     [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m1309 |[0m
[1m[94m1310 |[0m         return issues
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1389[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1388 |[0m     # Example pit_instructions structure:
[1m[94m1389 |[0m     # {
     [1m[94m|[0m     [1m[91m^^^[0m [1m[91mERA001[0m
[1m[94m1390 |[0m     #     "fuel_amount": 60,  # liters
[1m[94m1391 |[0m     #     "tire_change": true,
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1390[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1388 |[0m     # Example pit_instructions structure:
[1m[94m1389 |[0m     # {
[1m[94m1390 |[0m     #     "fuel_amount": 60,  # liters
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1391 |[0m     #     "tire_change": true,
[1m[94m1392 |[0m     #     "tire_compound": "medium",
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1391[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1389 |[0m     # {
[1m[94m1390 |[0m     #     "fuel_amount": 60,  # liters
[1m[94m1391 |[0m     #     "tire_change": true,
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1392 |[0m     #     "tire_compound": "medium",
[1m[94m1393 |[0m     #     "tire_pressures": {"fl": 26.5, "fr": 26.5, "rl": 26.0, "rr": 26.0},
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1392[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1390 |[0m     #     "fuel_amount": 60,  # liters
[1m[94m1391 |[0m     #     "tire_change": true,
[1m[94m1392 |[0m     #     "tire_compound": "medium",
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1393 |[0m     #     "tire_pressures": {"fl": 26.5, "fr": 26.5, "rl": 26.0, "rr": 26.0},
[1m[94m1394 |[0m     #     "repairs": [],
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1393[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1391 |[0m     #     "tire_change": true,
[1m[94m1392 |[0m     #     "tire_compound": "medium",
[1m[94m1393 |[0m     #     "tire_pressures": {"fl": 26.5, "fr": 26.5, "rl": 26.0, "rr": 26.0},
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1394 |[0m     #     "repairs": [],
[1m[94m1395 |[0m     #     "driver_change": true,
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1394[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1392 |[0m     #     "tire_compound": "medium",
[1m[94m1393 |[0m     #     "tire_pressures": {"fl": 26.5, "fr": 26.5, "rl": 26.0, "rr": 26.0},
[1m[94m1394 |[0m     #     "repairs": [],
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1395 |[0m     #     "driver_change": true,
[1m[94m1396 |[0m     #     "special_instructions": "Check front wing damage"
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1395[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1393 |[0m     #     "tire_pressures": {"fl": 26.5, "fr": 26.5, "rl": 26.0, "rr": 26.0},
[1m[94m1394 |[0m     #     "repairs": [],
[1m[94m1395 |[0m     #     "driver_change": true,
     [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m1396 |[0m     #     "special_instructions": "Check front wing damage"
[1m[94m1397 |[0m     # }
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1397[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
     [1m[94m|[0m
[1m[94m1395 |[0m     #     "driver_change": true,
[1m[94m1396 |[0m     #     "special_instructions": "Check front wing damage"
[1m[94m1397 |[0m     # }
     [1m[94m|[0m     [1m[91m^^^[0m [1m[91mERA001[0m
[1m[94m1398 |[0m
[1m[94m1399 |[0m     # Status tracking
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/models.py[0m[36m:[0m1444[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1443 |[0m     def __str__(self):
[1m[94m1444 |[0m         return f"Stint {self.stint_number} - {self.driver.username} ({self.strategy.team.name})"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1445 |[0m
[1m[94m1446 |[0m     def get_planned_end_time(self):
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1478[36m:[0m9[36m:[0m [1;31mSIM103[0m Return the negated condition directly
     [1m[94m|[0m
[1m[94m1476 |[0m           ).first()
[1m[94m1477 |[0m
[1m[94m1478 |[0m [1m[91m/[0m         if previous_stint and previous_stint.status != "completed":
[1m[94m1479 |[0m [1m[91m|[0m             return False
[1m[94m1480 |[0m [1m[91m|[0m
[1m[94m1481 |[0m [1m[91m|[0m         return True
     [1m[94m|[0m [1m[91m|___________________^[0m [1m[91mSIM103[0m
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Inline condition

[1msimlane/teams/models.py[0m[36m:[0m1491[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
     [1m[94m|[0m
[1m[94m1489 |[0m     id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
[1m[94m1490 |[0m
[1m[94m1491 |[0m     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name="signup_invitations")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1492 |[0m     organizer_user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="sent_signup_invitations")
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1492[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
     [1m[94m|[0m
[1m[94m1491 |[0m     event = models.ForeignKey(Event, on_delete=models.CASCADE, related_name="signup_invitations")
[1m[94m1492 |[0m     organizer_user = models.ForeignKey(User, on_delete=models.CASCADE, related_name="sent_signup_invitations")
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1493 |[0m
[1m[94m1494 |[0m     # Invitation details
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1533[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (109 > 88)
     [1m[94m|[0m
[1m[94m1532 |[0m     def __str__(self):
[1m[94m1533 |[0m         return f"Invitation from {self.organizer_user.username} to {self.invitee_email} for {self.team_name}"
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1534 |[0m
[1m[94m1535 |[0m     @staticmethod
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1547[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1545 |[0m         """Accept invitation and create participation"""
[1m[94m1546 |[0m         if self.is_expired():
[1m[94m1547 |[0m             raise ValueError("Invitation has expired")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1548 |[0m
[1m[94m1549 |[0m         if self.status != "pending":
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1547[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1545 |[0m         """Accept invitation and create participation"""
[1m[94m1546 |[0m         if self.is_expired():
[1m[94m1547 |[0m             raise ValueError("Invitation has expired")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1548 |[0m
[1m[94m1549 |[0m         if self.status != "pending":
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/models.py[0m[36m:[0m1550[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1549 |[0m         if self.status != "pending":
[1m[94m1550 |[0m             raise ValueError(f"Cannot accept invitation with status {self.status}")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1551 |[0m
[1m[94m1552 |[0m         # Create EventParticipation for the invitee
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1550[36m:[0m30[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1549 |[0m         if self.status != "pending":
[1m[94m1550 |[0m             raise ValueError(f"Cannot accept invitation with status {self.status}")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m1551 |[0m
[1m[94m1552 |[0m         # Create EventParticipation for the invitee
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/models.py[0m[36m:[0m1633[36m:[0m35[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
     [1m[94m|[0m
[1m[94m1631 |[0m     def can_send_reminder(self):
[1m[94m1632 |[0m         """Check if reminder can be sent (max 2 reminders, 24h apart)"""
[1m[94m1633 |[0m         if self.reminder_count >= 2:
     [1m[94m|[0m                                   [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m1634 |[0m             return False
[1m[94m1635 |[0m         if self.reminder_sent_at:
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1642[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1640 |[0m         """Accept invitation and create ClubMember with specified role"""
[1m[94m1641 |[0m         if self.is_expired():
[1m[94m1642 |[0m             raise ValueError("Invitation has expired")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1643 |[0m
[1m[94m1644 |[0m         # Create or update club membership
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1642[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1640 |[0m         """Accept invitation and create ClubMember with specified role"""
[1m[94m1641 |[0m         if self.is_expired():
[1m[94m1642 |[0m             raise ValueError("Invitation has expired")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1643 |[0m
[1m[94m1644 |[0m         # Create or update club membership
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/models.py[0m[36m:[0m1701[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
     [1m[94m|[0m
[1m[94m1699 |[0m     title = models.CharField(
[1m[94m1700 |[0m         max_length=255,
[1m[94m1701 |[0m         help_text="Club-specific title for this signup (e.g., 'Team Endurance - Le Mans')",
     [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m1702 |[0m     )
[1m[94m1703 |[0m     description = models.TextField(
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1791[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
     [1m[94m|[0m
[1m[94m1789 |[0m         return self.event.participations.filter(
[1m[94m1790 |[0m             signup_context_club=self.club,
[1m[94m1791 |[0m             status__in=["signed_up", "team_formation", "team_assigned", "entered", "confirmed"],
     [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m1792 |[0m         ).count()
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1806[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1804 |[0m         """Open signups for this event"""
[1m[94m1805 |[0m         if not self.can_open_signups():
[1m[94m1806 |[0m             raise ValueError("Cannot open signups at this time")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1807 |[0m
[1m[94m1808 |[0m         self.status = "open"
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1806[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1804 |[0m         """Open signups for this event"""
[1m[94m1805 |[0m         if not self.can_open_signups():
[1m[94m1806 |[0m             raise ValueError("Cannot open signups at this time")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1807 |[0m
[1m[94m1808 |[0m         self.status = "open"
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/models.py[0m[36m:[0m1814[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
     [1m[94m|[0m
[1m[94m1812 |[0m         """Close signups and prepare for team formation"""
[1m[94m1813 |[0m         if self.status != "open":
[1m[94m1814 |[0m             raise ValueError("Signups are not open")
     [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m1815 |[0m
[1m[94m1816 |[0m         self.status = "closed"
     [1m[94m|[0m

[1msimlane/teams/models.py[0m[36m:[0m1814[36m:[0m30[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
     [1m[94m|[0m
[1m[94m1812 |[0m         """Close signups and prepare for team formation"""
[1m[94m1813 |[0m         if self.status != "open":
[1m[94m1814 |[0m             raise ValueError("Signups are not open")
     [1m[94m|[0m                              [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m1815 |[0m
[1m[94m1816 |[0m         self.status = "closed"
     [1m[94m|[0m
     [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/services.py[0m[36m:[0m15[36m:[0m1[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m13 |[0m from django.utils import timezone
[1m[94m14 |[0m
[1m[94m15 |[0m # from simlane.core.services import EmailService
   [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m16 |[0m from simlane.sim.models import Event
[1m[94m17 |[0m from simlane.sim.models import SimCar
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/services.py[0m[36m:[0m26[36m:[0m1[36m:[0m [1;31mF811[0m Redefinition of unused `User` from line 18
   [1m[94m|[0m
[1m[94m24 |[0m from .models import Team
[1m[94m25 |[0m
[1m[94m26 |[0m User = get_user_model()
   [1m[94m|[0m [1m[91m^^^^[0m [1m[91mF811[0m
[1m[94m27 |[0m logger = logging.getLogger(__name__)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove definition: `User`

[1msimlane/teams/services.py[0m[36m:[0m43[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (115 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m                 status="entered",
[1m[94m42 |[0m                 preferred_car=car,
[1m[94m43 |[0m                 participant_timezone=kwargs.get("timezone", user.timezone if hasattr(user, "timezone") else "UTC"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m44 |[0m                 entered_at=timezone.now(),
[1m[94m45 |[0m                 **kwargs,
   [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m47[36m:[0m20[36m:[0m [1;31mRET504[0m Unnecessary assignment to `participation` before `return` statement
   [1m[94m|[0m
[1m[94m45 |[0m                 **kwargs,
[1m[94m46 |[0m             )
[1m[94m47 |[0m             return participation
   [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^[0m [1m[91mRET504[0m
[1m[94m48 |[0m
[1m[94m49 |[0m     @staticmethod
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/services.py[0m[36m:[0m50[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
   [1m[94m|[0m
[1m[94m49 |[0m     @staticmethod
[1m[94m50 |[0m     def create_team_signup(event, user, club_event=None, invitation=None, **preferences):
   [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m51 |[0m         """Create team event signup (Phase 1)"""
[1m[94m52 |[0m         with transaction.atomic():
   [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m60[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
   [1m[94m|[0m
[1m[94m58 |[0m                 club_event=club_event,
[1m[94m59 |[0m                 signup_invitation=invitation,
[1m[94m60 |[0m                 participant_timezone=preferences.get("timezone", user.timezone if hasattr(user, "timezone") else "UTC"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m61 |[0m                 preferred_car=preferences.get("preferred_car"),
[1m[94m62 |[0m                 backup_car=preferences.get("backup_car"),
   [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m77[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (95 > 88)
   [1m[94m|[0m
[1m[94m76 |[0m     @staticmethod
[1m[94m77 |[0m     def assign_participants_to_team(participant_ids: list[int], team: Team, assigned_by: User):
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^[0m [1m[91mE501[0m
[1m[94m78 |[0m         """Assign multiple participants to a team (Phase 2)"""
[1m[94m79 |[0m         with transaction.atomic():
   [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m87[36m:[0m23[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
   [1m[94m|[0m
[1m[94m86 |[0m             if not participants.exists():
[1m[94m87 |[0m                 raise ValidationError("No valid participants found for team assignment")
   [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m88 |[0m
[1m[94m89 |[0m             assigned_participants = []
   [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m87[36m:[0m39[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
   [1m[94m|[0m
[1m[94m86 |[0m             if not participants.exists():
[1m[94m87 |[0m                 raise ValidationError("No valid participants found for team assignment")
   [1m[94m|[0m                                       [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m88 |[0m
[1m[94m89 |[0m             assigned_participants = []
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/services.py[0m[36m:[0m110[36m:[0m20[36m:[0m [1;31mRET504[0m Unnecessary assignment to `participation` before `return` statement
    [1m[94m|[0m
[1m[94m108 |[0m                 entered_at=timezone.now(),
[1m[94m109 |[0m             )
[1m[94m110 |[0m             return participation
    [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^[0m [1m[91mRET504[0m
[1m[94m111 |[0m
[1m[94m112 |[0m     @staticmethod
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/services.py[0m[36m:[0m128[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (130 > 88)
    [1m[94m|[0m
[1m[94m126 |[0m         # Count by type and status
[1m[94m127 |[0m         for participation in participations:
[1m[94m128 |[0m             summary["by_type"][participation.participation_type] = summary["by_type"].get(participation.participation_type, 0) + 1
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m129 |[0m             summary["by_status"][participation.status] = summary["by_status"].get(participation.status, 0) + 1
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m129[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
    [1m[94m|[0m
[1m[94m127 |[0m         for participation in participations:
[1m[94m128 |[0m             summary["by_type"][participation.participation_type] = summary["by_type"].get(participation.participation_type, 0) + 1
[1m[94m129 |[0m             summary["by_status"][participation.status] = summary["by_status"].get(participation.status, 0) + 1
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m130 |[0m
[1m[94m131 |[0m         # Count signups ready for team formation
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m173[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `window` before `return` statement
    [1m[94m|[0m
[1m[94m171 |[0m         )
[1m[94m172 |[0m
[1m[94m173 |[0m         return window
    [1m[94m|[0m                [1m[91m^^^^^^[0m [1m[91mRET504[0m
[1m[94m174 |[0m
[1m[94m175 |[0m     @staticmethod
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/services.py[0m[36m:[0m205[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m204 |[0m     @staticmethod
[1m[94m205 |[0m     def get_availability_conflicts(event: Event, target_start, target_end) -> list[dict]:
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m206 |[0m         """Find availability conflicts for stint assignment"""
[1m[94m207 |[0m         conflicts = []
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m218[36m:[0m13[36m:[0m [1;31mPERF401[0m Use a list comprehension to create a transformed list
    [1m[94m|[0m
[1m[94m217 |[0m           for window in unavailable_windows:
[1m[94m218 |[0m [1m[91m/[0m             conflicts.append({
[1m[94m219 |[0m [1m[91m|[0m                 "user": window.participation.user,
[1m[94m220 |[0m [1m[91m|[0m                 "reason": "Not available for driving",
[1m[94m221 |[0m [1m[91m|[0m                 "window_start": window.start_time,
[1m[94m222 |[0m [1m[91m|[0m                 "window_end": window.end_time,
[1m[94m223 |[0m [1m[91m|[0m                 "available_roles": window.get_roles_list(),
[1m[94m224 |[0m [1m[91m|[0m             })
    [1m[94m|[0m [1m[91m|______________^[0m [1m[91mPERF401[0m
[1m[94m225 |[0m
[1m[94m226 |[0m           return conflicts
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace for loop with list comprehension

[1msimlane/teams/services.py[0m[36m:[0m229[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m228 |[0m     @staticmethod
[1m[94m229 |[0m     def generate_coverage_report(event: Event, timezone_display="UTC") -> dict[str, Any]:
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m230 |[0m         """Generate comprehensive availability coverage report"""
[1m[94m231 |[0m         import pytz
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m248[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m246 |[0m             current_hour = start_hour
[1m[94m247 |[0m             while current_hour <= end_hour:
[1m[94m248 |[0m                 hour_key = current_hour.astimezone(display_tz).strftime("%Y-%m-%d %H:00")
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m249 |[0m
[1m[94m250 |[0m                 if hour_key not in coverage:
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m272[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (137 > 88)
    [1m[94m|[0m
[1m[94m270 |[0m [1m[94m…[0m
[1m[94m271 |[0m [1m[94m…[0mur_data["users"])
[1m[94m272 |[0m [1m[94m…[0mour_data["total_available"] / total_participants * 100) if total_participants > 0 else 0
    [1m[94m|[0m                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m273 |[0m [1m[94m…[0musers"])  # Convert set to list for JSON serialization
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m273[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m271 |[0m             hour_data["total_available"] = len(hour_data["users"])
[1m[94m272 |[0m             hour_data["coverage_percentage"] = (hour_data["total_available"] / total_participants * 100) if total_participants > 0 el[1m[94m…[0m
[1m[94m273 |[0m             hour_data["users"] = list(hour_data["users"])  # Convert set to list for JSON serialization
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m274 |[0m
[1m[94m275 |[0m         return {
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m288[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m286 |[0m     def analyze_compatibility(event: Event, user_ids: list[int]) -> dict[str, Any]:
[1m[94m287 |[0m         """Analyze compatibility between potential team members"""
[1m[94m288 |[0m         overlaps = AvailabilityWindow.find_overlapping_availability(user_ids, event, min_overlap_hours=1)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m289 |[0m
[1m[94m290 |[0m         compatibility_matrix = {}
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m307[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m306 |[0m             # Track total overlap per user
[1m[94m307 |[0m             total_overlap_by_user[user1] = total_overlap_by_user.get(user1, 0) + overlap_hours
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m308 |[0m             total_overlap_by_user[user2] = total_overlap_by_user.get(user2, 0) + overlap_hours
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m308[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m306 |[0m             # Track total overlap per user
[1m[94m307 |[0m             total_overlap_by_user[user1] = total_overlap_by_user.get(user1, 0) + overlap_hours
[1m[94m308 |[0m             total_overlap_by_user[user2] = total_overlap_by_user.get(user2, 0) + overlap_hours
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m309 |[0m
[1m[94m310 |[0m         return {
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m317[36m:[0m76[36m:[0m [1;31mRUF013[0m PEP 484 prohibits implicit `Optional`
    [1m[94m|[0m
[1m[94m316 |[0m     @staticmethod
[1m[94m317 |[0m     def suggest_optimal_teams(event: Event, team_size: int = 3, max_teams: int = None) -> list[dict]:
    [1m[94m|[0m                                                                            [1m[91m^^^[0m [1m[91mRUF013[0m
[1m[94m318 |[0m         """Generate optimal team suggestions using advanced algorithms"""
[1m[94m319 |[0m         participants = EventParticipation.objects.filter(
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Convert to `T | None`

[1msimlane/teams/services.py[0m[36m:[0m317[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m316 |[0m     @staticmethod
[1m[94m317 |[0m     def suggest_optimal_teams(event: Event, team_size: int = 3, max_teams: int = None) -> list[dict]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m318 |[0m         """Generate optimal team suggestions using advanced algorithms"""
[1m[94m319 |[0m         participants = EventParticipation.objects.filter(
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m361[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m360 |[0m             enhanced_recommendations.append({
[1m[94m361 |[0m                 "team_members": list(team_users.values("id", "username", "first_name", "last_name")),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m362 |[0m                 "compatibility_score": rec["total_overlap_score"],
[1m[94m363 |[0m                 "total_availability_hours": total_availability_hours,
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m366[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m364 |[0m                 "car_preferences": car_preferences,
[1m[94m365 |[0m                 "experience_levels": experience_levels,
[1m[94m366 |[0m                 "recommended_car": max(car_preferences.keys()) if car_preferences else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m367 |[0m                 "team_balance_score": TeamFormationService._calculate_balance_score(team_participations),
[1m[94m368 |[0m             })
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m367[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m365 |[0m                 "experience_levels": experience_levels,
[1m[94m366 |[0m                 "recommended_car": max(car_preferences.keys()) if car_preferences else None,
[1m[94m367 |[0m                 "team_balance_score": TeamFormationService._calculate_balance_score(team_participations),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m368 |[0m             })
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m370[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (113 > 88)
    [1m[94m|[0m
[1m[94m368 |[0m             })
[1m[94m369 |[0m
[1m[94m370 |[0m         return sorted(enhanced_recommendations, key=lambda x: x["compatibility_score"], reverse=True)[:max_teams]
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m371 |[0m
[1m[94m372 |[0m     @staticmethod
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m378[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m376 |[0m             return 0.0
[1m[94m377 |[0m
[1m[94m378 |[0m         experience_mapping = {"beginner": 1, "intermediate": 2, "advanced": 3, "professional": 4}
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m379 |[0m         experience_scores = []
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m385[36m:[0m37[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m383 |[0m             experience_scores.append(score)
[1m[94m384 |[0m
[1m[94m385 |[0m         if len(experience_scores) < 2:
    [1m[94m|[0m                                     [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m386 |[0m             return 0.5
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m390[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
    [1m[94m|[0m
[1m[94m388 |[0m         # Calculate variance (lower variance = better balance)
[1m[94m389 |[0m         mean_score = sum(experience_scores) / len(experience_scores)
[1m[94m390 |[0m         variance = sum((score - mean_score) ** 2 for score in experience_scores) / len(experience_scores)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m391 |[0m
[1m[94m392 |[0m         # Convert to 0-1 scale (lower variance = higher balance score)
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m400[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m398 |[0m     @staticmethod
[1m[94m399 |[0m     def create_teams_from_recommendations(event: Event, recommendations: list[dict],
[1m[94m400 |[0m                                         club: Club = None, created_by: User = None) -> list[Team]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m401 |[0m         """Create actual teams from recommendations"""
[1m[94m402 |[0m         created_teams = []
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m416[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m414 |[0m                     club=club,
[1m[94m415 |[0m                     is_temporary=not bool(club),
[1m[94m416 |[0m                     description=f"Auto-generated team with {rec['compatibility_score']:.1f}h overlap",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m417 |[0m                 )
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m447[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m446 |[0m         if existing and not existing.is_expired():
[1m[94m447 |[0m             raise ValidationError(f"Pending invitation already exists for {invitee_email}")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m448 |[0m
[1m[94m449 |[0m         # Create new invitation
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m447[36m:[0m35[36m:[0m [1;31mEM102[0m Exception must not use an f-string literal, assign to variable first
    [1m[94m|[0m
[1m[94m446 |[0m         if existing and not existing.is_expired():
[1m[94m447 |[0m             raise ValidationError(f"Pending invitation already exists for {invitee_email}")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM102[0m
[1m[94m448 |[0m
[1m[94m449 |[0m         # Create new invitation
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove f-string literal

[1msimlane/teams/services.py[0m[36m:[0m447[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m446 |[0m         if existing and not existing.is_expired():
[1m[94m447 |[0m             raise ValidationError(f"Pending invitation already exists for {invitee_email}")
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m448 |[0m
[1m[94m449 |[0m         # Create new invitation
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m470[36m:[0m25[36m:[0m [1;31mF821[0m Undefined name `EmailService`
    [1m[94m|[0m
[1m[94m468 |[0m         # This would integrate with your email service
[1m[94m469 |[0m         # For now, just a placeholder
[1m[94m470 |[0m         email_service = EmailService()
    [1m[94m|[0m                         [1m[91m^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m471 |[0m
[1m[94m472 |[0m         context = {
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m489[36m:[0m61[36m:[0m [1;31mFBT001[0m Boolean-typed positional argument in function definition
    [1m[94m|[0m
[1m[94m488 |[0m     @staticmethod
[1m[94m489 |[0m     def process_invitation_response(token: str, user: User, accepted: bool):
    [1m[94m|[0m                                                             [1m[91m^^^^^^^^[0m [1m[91mFBT001[0m
[1m[94m490 |[0m         """Process invitation acceptance or decline"""
[1m[94m491 |[0m         try:
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m494[36m:[0m13[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m492 |[0m             invitation = EventSignupInvitation.objects.get(token=token)
[1m[94m493 |[0m         except EventSignupInvitation.DoesNotExist:
[1m[94m494 |[0m             raise ValidationError("Invalid invitation token")
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m495 |[0m
[1m[94m496 |[0m         if invitation.is_expired():
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m494[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m492 |[0m             invitation = EventSignupInvitation.objects.get(token=token)
[1m[94m493 |[0m         except EventSignupInvitation.DoesNotExist:
[1m[94m494 |[0m             raise ValidationError("Invalid invitation token")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m495 |[0m
[1m[94m496 |[0m         if invitation.is_expired():
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m494[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m492 |[0m             invitation = EventSignupInvitation.objects.get(token=token)
[1m[94m493 |[0m         except EventSignupInvitation.DoesNotExist:
[1m[94m494 |[0m             raise ValidationError("Invalid invitation token")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m495 |[0m
[1m[94m496 |[0m         if invitation.is_expired():
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/services.py[0m[36m:[0m497[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m496 |[0m         if invitation.is_expired():
[1m[94m497 |[0m             raise ValidationError("Invitation has expired")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m498 |[0m
[1m[94m499 |[0m         if invitation.status != "pending":
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m497[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m496 |[0m         if invitation.is_expired():
[1m[94m497 |[0m             raise ValidationError("Invitation has expired")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m498 |[0m
[1m[94m499 |[0m         if invitation.status != "pending":
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/services.py[0m[36m:[0m500[36m:[0m19[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m499 |[0m         if invitation.status != "pending":
[1m[94m500 |[0m             raise ValidationError("Invitation has already been responded to")
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m501 |[0m
[1m[94m502 |[0m         with transaction.atomic():
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m500[36m:[0m35[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m499 |[0m         if invitation.status != "pending":
[1m[94m500 |[0m             raise ValidationError("Invitation has already been responded to")
    [1m[94m|[0m                                   [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m501 |[0m
[1m[94m502 |[0m         with transaction.atomic():
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/services.py[0m[36m:[0m514[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
    [1m[94m|[0m
[1m[94m513 |[0m     @staticmethod
[1m[94m514 |[0m     def close_signup_phase(event: Event, club_event=None):  # club_event parameter removed
    [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m515 |[0m         """Close signup phase and prepare for team formation"""
[1m[94m516 |[0m         with transaction.atomic():
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m537[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m536 |[0m     @staticmethod
[1m[94m537 |[0m     def finalize_team_allocations(event: Event, club_event=None):  # club_event parameter removed
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m538 |[0m         """Finalize team allocations and create event entries"""
[1m[94m539 |[0m         with transaction.atomic():
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m608[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (96 > 88)
    [1m[94m|[0m
[1m[94m607 |[0m # ===== LEGACY SERVICE COMPATIBILITY LAYER =====
[1m[94m608 |[0m # These services provide compatibility with existing views while transitioning to the new system
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^[0m [1m[91mE501[0m
[1m[94m609 |[0m
[1m[94m610 |[0m class ClubInvitationService:
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m632[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m631 |[0m         # Send email (placeholder - would integrate with email service)
[1m[94m632 |[0m         logger.info(f"Club invitation sent to {email} for {club.name}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m633 |[0m         return invitation
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m664[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m662 |[0m     def send_signup_confirmation(signup):
[1m[94m663 |[0m         """Send signup confirmation email"""
[1m[94m664 |[0m         logger.info(f"Signup confirmation sent to {signup.user.email}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m665 |[0m         # Placeholder - would integrate with email service
[1m[94m666 |[0m         return True
    [1m[94m|[0m

[1msimlane/teams/services.py[0m[36m:[0m671[36m:[0m21[36m:[0m [1;31mG004[0m Logging statement uses f-string
    [1m[94m|[0m
[1m[94m669 |[0m     def send_team_assignment_notification(allocation):
[1m[94m670 |[0m         """Send team assignment notification"""
[1m[94m671 |[0m         logger.info(f"Team assignment notification sent for {allocation.team.name}")
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mG004[0m
[1m[94m672 |[0m         return True
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m1[36m:[0m1[36m:[0m [1;31mINP001[0m File `simlane/teams/tests/test_models.py` is part of an implicit namespace package. Add an `__init__.py`.
[1msimlane/teams/tests/test_models.py[0m[36m:[0m21[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m19 |[0m from simlane.teams.models import Team
[1m[94m20 |[0m
[1m[94m21 |[0m # Removed imports: EventSignup, StintAssignment, TeamAllocation, TeamAllocationMember, TeamEventStrategy
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m22 |[0m # These models have been removed in favor of enhanced participation system
[1m[94m23 |[0m from simlane.users.models import User
   [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m31[36m:[0m13[36m:[0m [1;31mS106[0m Possible hardcoded password assigned to argument: "password"
   [1m[94m|[0m
[1m[94m29 |[0m             username="testuser",
[1m[94m30 |[0m             email="test@example.com",
[1m[94m31 |[0m             password="testpass123",
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS106[0m
[1m[94m32 |[0m         )
   [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m42[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
   [1m[94m|[0m
[1m[94m40 |[0m         )
[1m[94m41 |[0m
[1m[94m42 |[0m         self.assertEqual(club.name, "Test Racing Club")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m43 |[0m         self.assertEqual(club.created_by, self.user)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m43[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
   [1m[94m|[0m
[1m[94m42 |[0m         self.assertEqual(club.name, "Test Racing Club")
[1m[94m43 |[0m         self.assertEqual(club.created_by, self.user)
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m44 |[0m
[1m[94m45 |[0m         # Check if creator automatically becomes admin
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m51[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertIsNotNone`
   [1m[94m|[0m
[1m[94m49 |[0m             role="ADMIN",
[1m[94m50 |[0m         ).first()
[1m[94m51 |[0m         self.assertIsNotNone(admin_member)
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m52 |[0m
[1m[94m53 |[0m     def test_club_str_representation(self):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertIsNotNone(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m59[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
   [1m[94m|[0m
[1m[94m57 |[0m             created_by=self.user,
[1m[94m58 |[0m         )
[1m[94m59 |[0m         self.assertEqual(str(club), "Test Club")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m60 |[0m
[1m[94m61 |[0m     def test_club_unique_name(self):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m65[36m:[0m14[36m:[0m [1;31mPT027[0m Use `pytest.raises` instead of unittest-style `assertRaises`
   [1m[94m|[0m
[1m[94m63 |[0m         Club.objects.create(name="Unique Club", created_by=self.user)
[1m[94m64 |[0m
[1m[94m65 |[0m         with self.assertRaises(ValidationError):
   [1m[94m|[0m              [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mPT027[0m
[1m[94m66 |[0m             duplicate_club = Club(name="Unique Club", created_by=self.user)
[1m[94m67 |[0m             duplicate_club.full_clean()
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertRaises` with `pytest.raises`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m75[36m:[0m13[36m:[0m [1;31mS106[0m Possible hardcoded password assigned to argument: "password"
   [1m[94m|[0m
[1m[94m73 |[0m             username="admin",
[1m[94m74 |[0m             email="admin@example.com",
[1m[94m75 |[0m             password="password123",
   [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS106[0m
[1m[94m76 |[0m         )
[1m[94m77 |[0m         self.club = Club.objects.create(
   [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m91[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertIsNotNone`
   [1m[94m|[0m
[1m[94m89 |[0m         )
[1m[94m90 |[0m
[1m[94m91 |[0m         self.assertIsNotNone(invitation.token)
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m92 |[0m         self.assertEqual(invitation.status, "PENDING")
[1m[94m93 |[0m         self.assertTrue(invitation.expires_at > timezone.now())
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertIsNotNone(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m92[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
   [1m[94m|[0m
[1m[94m91 |[0m         self.assertIsNotNone(invitation.token)
[1m[94m92 |[0m         self.assertEqual(invitation.status, "PENDING")
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m93 |[0m         self.assertTrue(invitation.expires_at > timezone.now())
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m93[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertTrue`
   [1m[94m|[0m
[1m[94m91 |[0m         self.assertIsNotNone(invitation.token)
[1m[94m92 |[0m         self.assertEqual(invitation.status, "PENDING")
[1m[94m93 |[0m         self.assertTrue(invitation.expires_at > timezone.now())
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m94 |[0m
[1m[94m95 |[0m     def test_invitation_expiry(self):
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Replace `assertTrue(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m107[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertTrue`
    [1m[94m|[0m
[1m[94m105 |[0m         )
[1m[94m106 |[0m
[1m[94m107 |[0m         self.assertTrue(invitation.is_expired())
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m108 |[0m
[1m[94m109 |[0m     def test_invitation_acceptance(self):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertTrue(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m114[36m:[0m13[36m:[0m [1;31mS106[0m Possible hardcoded password assigned to argument: "password"
    [1m[94m|[0m
[1m[94m112 |[0m             username="invitee",
[1m[94m113 |[0m             email="invitee@example.com",
[1m[94m114 |[0m             password="password123",
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS106[0m
[1m[94m115 |[0m         )
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m127[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertTrue`
    [1m[94m|[0m
[1m[94m125 |[0m         result = invitation.accept(invitee)
[1m[94m126 |[0m
[1m[94m127 |[0m         self.assertTrue(result)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m128 |[0m         self.assertEqual(invitation.status, "ACCEPTED")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertTrue(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m128[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
    [1m[94m|[0m
[1m[94m127 |[0m         self.assertTrue(result)
[1m[94m128 |[0m         self.assertEqual(invitation.status, "ACCEPTED")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m129 |[0m
[1m[94m130 |[0m         # Check if club member was created
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m136[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertIsNotNone`
    [1m[94m|[0m
[1m[94m134 |[0m             role="MEMBER",
[1m[94m135 |[0m         ).first()
[1m[94m136 |[0m         self.assertIsNotNone(member)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
[1m[94m137 |[0m
[1m[94m138 |[0m     def test_invitation_decline(self):
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertIsNotNone(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m149[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertEqual`
    [1m[94m|[0m
[1m[94m147 |[0m         invitation.decline()
[1m[94m148 |[0m
[1m[94m149 |[0m         self.assertEqual(invitation.status, "DECLINED")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertEqual(...)` with `assert ...`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m152[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m152 |[0m # Legacy model tests removed - EventSignup, TeamAllocation, StintAssignment models no longer exist
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m153 |[0m # Tests for enhanced participation system (EventParticipation, AvailabilityWindow) should be added here
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m153[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
    [1m[94m|[0m
[1m[94m152 |[0m # Legacy model tests removed - EventSignup, TeamAllocation, StintAssignment models no longer exist
[1m[94m153 |[0m # Tests for enhanced participation system (EventParticipation, AvailabilityWindow) should be added here
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m163[36m:[0m13[36m:[0m [1;31mS106[0m Possible hardcoded password assigned to argument: "password"
    [1m[94m|[0m
[1m[94m161 |[0m             username="testuser",
[1m[94m162 |[0m             email="test@example.com",
[1m[94m163 |[0m             password="password123",
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS106[0m
[1m[94m164 |[0m         )
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m171[36m:[0m14[36m:[0m [1;31mPT027[0m Use `pytest.raises` instead of unittest-style `assertRaises`
    [1m[94m|[0m
[1m[94m169 |[0m         long_name = "A" * 201  # Assuming max length is 200
[1m[94m170 |[0m
[1m[94m171 |[0m         with self.assertRaises(ValidationError):
    [1m[94m|[0m              [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mPT027[0m
[1m[94m172 |[0m             club = Club(name=long_name, created_by=self.user)
[1m[94m173 |[0m             club.full_clean()
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertRaises` with `pytest.raises`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m179[36m:[0m14[36m:[0m [1;31mPT027[0m Use `pytest.raises` instead of unittest-style `assertRaises`
    [1m[94m|[0m
[1m[94m177 |[0m         club = Club.objects.create(name="Test Club", created_by=self.user)
[1m[94m178 |[0m
[1m[94m179 |[0m         with self.assertRaises(ValidationError):
    [1m[94m|[0m              [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mPT027[0m
[1m[94m180 |[0m             invitation = ClubInvitation(
[1m[94m181 |[0m                 club=club,
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertRaises` with `pytest.raises`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m210[36m:[0m18[36m:[0m [1;31mF821[0m Undefined name `EventSignup`
    [1m[94m|[0m
[1m[94m208 |[0m         )
[1m[94m209 |[0m
[1m[94m210 |[0m         signup = EventSignup.objects.create(
    [1m[94m|[0m                  [1m[91m^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m211 |[0m             event=event,
[1m[94m212 |[0m             club=club,
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m217[36m:[0m22[36m:[0m [1;31mF821[0m Undefined name `TeamAllocation`
    [1m[94m|[0m
[1m[94m215 |[0m             signup_deadline=timezone.now() + timedelta(days=3),
[1m[94m216 |[0m         )
[1m[94m217 |[0m         allocation = TeamAllocation.objects.create(
    [1m[94m|[0m                      [1m[91m^^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m218 |[0m             event_signup=signup,
[1m[94m219 |[0m             team=team,
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m222[36m:[0m20[36m:[0m [1;31mF821[0m Undefined name `TeamEventStrategy`
    [1m[94m|[0m
[1m[94m220 |[0m             created_by=self.user,
[1m[94m221 |[0m         )
[1m[94m222 |[0m         strategy = TeamEventStrategy.objects.create(
    [1m[94m|[0m                    [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m223 |[0m             team_allocation=allocation,
[1m[94m224 |[0m             time_slot=time_slot,
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m229[36m:[0m14[36m:[0m [1;31mPT027[0m Use `pytest.raises` instead of unittest-style `assertRaises`
    [1m[94m|[0m
[1m[94m228 |[0m         # Test negative fuel load
[1m[94m229 |[0m         with self.assertRaises(ValidationError):
    [1m[94m|[0m              [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mPT027[0m
[1m[94m230 |[0m             stint = StintAssignment(
[1m[94m231 |[0m                 team_strategy=strategy,
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertRaises` with `pytest.raises`

[1msimlane/teams/tests/test_models.py[0m[36m:[0m230[36m:[0m21[36m:[0m [1;31mF821[0m Undefined name `StintAssignment`
    [1m[94m|[0m
[1m[94m228 |[0m         # Test negative fuel load
[1m[94m229 |[0m         with self.assertRaises(ValidationError):
[1m[94m230 |[0m             stint = StintAssignment(
    [1m[94m|[0m                     [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mF821[0m
[1m[94m231 |[0m                 team_strategy=strategy,
[1m[94m232 |[0m                 driver=self.user,
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m247[36m:[0m13[36m:[0m [1;31mS106[0m Possible hardcoded password assigned to argument: "password"
    [1m[94m|[0m
[1m[94m245 |[0m             username="testuser",
[1m[94m246 |[0m             email="test@example.com",
[1m[94m247 |[0m             password="password123",
    [1m[94m|[0m             [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mS106[0m
[1m[94m248 |[0m         )
    [1m[94m|[0m

[1msimlane/teams/tests/test_models.py[0m[36m:[0m283[36m:[0m9[36m:[0m [1;31mPT009[0m Use a regular `assert` instead of unittest-style `assertNotEqual`
    [1m[94m|[0m
[1m[94m281 |[0m         )
[1m[94m282 |[0m
[1m[94m283 |[0m         self.assertNotEqual(invitation1.token, invitation2.token)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^[0m [1m[91mPT009[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace `assertNotEqual(...)` with `assert ...`

[1msimlane/teams/urls.py[0m[36m:[0m15[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m13 |[0m     path("create/", views.club_create, name="club_create"),
[1m[94m14 |[0m     path("browse/", views.browse_clubs, name="browse_clubs"),
[1m[94m15 |[0m     path("request-join/<slug:club_slug>/", views.request_join_club, name="request_join_club"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m16 |[0m
[1m[94m17 |[0m     # Club Dashboard & Management (using club slug)
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m19[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (105 > 88)
   [1m[94m|[0m
[1m[94m17 |[0m     # Club Dashboard & Management (using club slug)
[1m[94m18 |[0m     path("<slug:club_slug>/", views.club_dashboard, name="club_dashboard"),
[1m[94m19 |[0m     path("<slug:club_slug>/<str:section>/", views.club_dashboard_section, name="club_dashboard_section"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m20 |[0m     path("<slug:club_slug>/update/", views.club_update, name="club_update"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m24[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m22 |[0m     # Club Members Management
[1m[94m23 |[0m     path("<slug:club_slug>/members/", views.club_members, name="club_members"),
[1m[94m24 |[0m     path("<slug:club_slug>/invite/", views.club_invite_member, name="club_invite_member"),
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m25 |[0m
[1m[94m26 |[0m     # Club Event Signups
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m27[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
   [1m[94m|[0m
[1m[94m26 |[0m     # Club Event Signups
[1m[94m27 |[0m     path("<slug:club_slug>/signups/", views.club_event_signups, name="club_event_signups"),
   [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m28 |[0m     path("<slug:club_slug>/signups/create/", views.club_event_signup_create, name="club_event_signup_create"),
[1m[94m29 |[0m     path("<slug:club_slug>/signups/bulk-create/", views.club_event_signup_bulk_create, name="club_event_signup_bulk_create"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m28[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (110 > 88)
   [1m[94m|[0m
[1m[94m26 |[0m     # Club Event Signups
[1m[94m27 |[0m     path("<slug:club_slug>/signups/", views.club_event_signups, name="club_event_signups"),
[1m[94m28 |[0m     path("<slug:club_slug>/signups/create/", views.club_event_signup_create, name="club_event_signup_create"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m29 |[0m     path("<slug:club_slug>/signups/bulk-create/", views.club_event_signup_bulk_create, name="club_event_signup_bulk_create"),
[1m[94m30 |[0m     # Signup Sheet Detail
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m29[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (125 > 88)
   [1m[94m|[0m
[1m[94m27 |[0m     path("<slug:club_slug>/signups/", views.club_event_signups, name="club_event_signups"),
[1m[94m28 |[0m     path("<slug:club_slug>/signups/create/", views.club_event_signup_create, name="club_event_signup_create"),
[1m[94m29 |[0m     path("<slug:club_slug>/signups/bulk-create/", views.club_event_signup_bulk_create, name="club_event_signup_bulk_create"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m30 |[0m     # Signup Sheet Detail
[1m[94m31 |[0m     path("<slug:club_slug>/signups/<uuid:sheet_id>/", views.club_event_signup_detail, name="club_event_signup_detail"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m31[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (119 > 88)
   [1m[94m|[0m
[1m[94m29 |[0m     path("<slug:club_slug>/signups/bulk-create/", views.club_event_signup_bulk_create, name="club_event_signup_bulk_create"),
[1m[94m30 |[0m     # Signup Sheet Detail
[1m[94m31 |[0m     path("<slug:club_slug>/signups/<uuid:sheet_id>/", views.club_event_signup_detail, name="club_event_signup_detail"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m32 |[0m     path("<slug:club_slug>/signups/<uuid:sheet_id>/edit/", views.club_event_signup_edit, name="club_event_signup_edit"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m32[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (120 > 88)
   [1m[94m|[0m
[1m[94m30 |[0m     # Signup Sheet Detail
[1m[94m31 |[0m     path("<slug:club_slug>/signups/<uuid:sheet_id>/", views.club_event_signup_detail, name="club_event_signup_detail"),
[1m[94m32 |[0m     path("<slug:club_slug>/signups/<uuid:sheet_id>/edit/", views.club_event_signup_edit, name="club_event_signup_edit"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m33 |[0m
[1m[94m34 |[0m     # Club Invitation URLs (token-based, no club needed in URL)
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m35[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
   [1m[94m|[0m
[1m[94m34 |[0m     # Club Invitation URLs (token-based, no club needed in URL)
[1m[94m35 |[0m     path("invite/<str:token>/accept/", views.club_invitation_accept, name="club_invitation_accept"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m36 |[0m     path("invite/<str:token>/decline/", views.club_invitation_decline, name="club_invitation_decline"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m36[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
   [1m[94m|[0m
[1m[94m34 |[0m     # Club Invitation URLs (token-based, no club needed in URL)
[1m[94m35 |[0m     path("invite/<str:token>/accept/", views.club_invitation_accept, name="club_invitation_accept"),
[1m[94m36 |[0m     path("invite/<str:token>/decline/", views.club_invitation_decline, name="club_invitation_decline"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m37 |[0m
[1m[94m38 |[0m     # === FUTURE FEATURES ===
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m42[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m41 |[0m     # Event Organization (using Event.organizing_club)
[1m[94m42 |[0m     # path("<slug:club_slug>/organize-event/", views.club_organize_event, name="club_organize_event"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m43 |[0m     # path("<slug:club_slug>/events/", views.club_events_list, name="club_events_list"),
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m42[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
   [1m[94m|[0m
[1m[94m41 |[0m     # Event Organization (using Event.organizing_club)
[1m[94m42 |[0m     # path("<slug:club_slug>/organize-event/", views.club_organize_event, name="club_organize_event"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m43 |[0m     # path("<slug:club_slug>/events/", views.club_events_list, name="club_events_list"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m43[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m41 |[0m     # Event Organization (using Event.organizing_club)
[1m[94m42 |[0m     # path("<slug:club_slug>/organize-event/", views.club_organize_event, name="club_organize_event"),
[1m[94m43 |[0m     # path("<slug:club_slug>/events/", views.club_events_list, name="club_events_list"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m44 |[0m
[1m[94m45 |[0m     # Team Management within Clubs
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m46[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m45 |[0m     # Team Management within Clubs
[1m[94m46 |[0m     # path("<slug:club_slug>/teams/", views.club_teams_list, name="club_teams_list"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m47 |[0m     # path("<slug:club_slug>/teams/create/", views.club_team_create, name="club_team_create"),
[1m[94m48 |[0m     # path("<slug:club_slug>/teams/<slug:team_slug>/", views.club_team_detail, name="club_team_detail"),
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m47[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m45 |[0m     # Team Management within Clubs
[1m[94m46 |[0m     # path("<slug:club_slug>/teams/", views.club_teams_list, name="club_teams_list"),
[1m[94m47 |[0m     # path("<slug:club_slug>/teams/create/", views.club_team_create, name="club_team_create"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m48 |[0m     # path("<slug:club_slug>/teams/<slug:team_slug>/", views.club_team_detail, name="club_team_detail"),
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m47[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
   [1m[94m|[0m
[1m[94m45 |[0m     # Team Management within Clubs
[1m[94m46 |[0m     # path("<slug:club_slug>/teams/", views.club_teams_list, name="club_teams_list"),
[1m[94m47 |[0m     # path("<slug:club_slug>/teams/create/", views.club_team_create, name="club_team_create"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m48 |[0m     # path("<slug:club_slug>/teams/<slug:team_slug>/", views.club_team_detail, name="club_team_detail"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m48[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m46 |[0m     # path("<slug:club_slug>/teams/", views.club_teams_list, name="club_teams_list"),
[1m[94m47 |[0m     # path("<slug:club_slug>/teams/create/", views.club_team_create, name="club_team_create"),
[1m[94m48 |[0m     # path("<slug:club_slug>/teams/<slug:team_slug>/", views.club_team_detail, name="club_team_detail"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m49 |[0m
[1m[94m50 |[0m     # Race Planning & Strategy (direct Event integration)
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m48[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (104 > 88)
   [1m[94m|[0m
[1m[94m46 |[0m     # path("<slug:club_slug>/teams/", views.club_teams_list, name="club_teams_list"),
[1m[94m47 |[0m     # path("<slug:club_slug>/teams/create/", views.club_team_create, name="club_team_create"),
[1m[94m48 |[0m     # path("<slug:club_slug>/teams/<slug:team_slug>/", views.club_team_detail, name="club_team_detail"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m49 |[0m
[1m[94m50 |[0m     # Race Planning & Strategy (direct Event integration)
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m51[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m50 |[0m     # Race Planning & Strategy (direct Event integration)
[1m[94m51 |[0m     # path("events/<uuid:event_id>/plan/", views.event_race_plan, name="event_race_plan"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m52 |[0m     # path("events/<uuid:event_id>/signup/", views.event_signup, name="event_signup"),
[1m[94m53 |[0m     # path("events/<uuid:event_id>/teams/", views.event_team_formation, name="event_team_formation"),
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m51[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (90 > 88)
   [1m[94m|[0m
[1m[94m50 |[0m     # Race Planning & Strategy (direct Event integration)
[1m[94m51 |[0m     # path("events/<uuid:event_id>/plan/", views.event_race_plan, name="event_race_plan"),
   [1m[94m|[0m                                                                                         [1m[91m^^[0m [1m[91mE501[0m
[1m[94m52 |[0m     # path("events/<uuid:event_id>/signup/", views.event_signup, name="event_signup"),
[1m[94m53 |[0m     # path("events/<uuid:event_id>/teams/", views.event_team_formation, name="event_team_formation"),
   [1m[94m|[0m

[1msimlane/teams/urls.py[0m[36m:[0m52[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m50 |[0m     # Race Planning & Strategy (direct Event integration)
[1m[94m51 |[0m     # path("events/<uuid:event_id>/plan/", views.event_race_plan, name="event_race_plan"),
[1m[94m52 |[0m     # path("events/<uuid:event_id>/signup/", views.event_signup, name="event_signup"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m53 |[0m     # path("events/<uuid:event_id>/teams/", views.event_team_formation, name="event_team_formation"),
[1m[94m54 |[0m ]
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m53[36m:[0m5[36m:[0m [1;31mERA001[0m Found commented-out code
   [1m[94m|[0m
[1m[94m51 |[0m     # path("events/<uuid:event_id>/plan/", views.event_race_plan, name="event_race_plan"),
[1m[94m52 |[0m     # path("events/<uuid:event_id>/signup/", views.event_signup, name="event_signup"),
[1m[94m53 |[0m     # path("events/<uuid:event_id>/teams/", views.event_team_formation, name="event_team_formation"),
   [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mERA001[0m
[1m[94m54 |[0m ]
   [1m[94m|[0m
   [1m[94m= [0m[1m[96mhelp[0m: Remove commented-out code

[1msimlane/teams/urls.py[0m[36m:[0m53[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
   [1m[94m|[0m
[1m[94m51 |[0m     # path("events/<uuid:event_id>/plan/", views.event_race_plan, name="event_race_plan"),
[1m[94m52 |[0m     # path("events/<uuid:event_id>/signup/", views.event_signup, name="event_signup"),
[1m[94m53 |[0m     # path("events/<uuid:event_id>/teams/", views.event_team_formation, name="event_team_formation"),
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m54 |[0m ]
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m47[36m:[0m9[36m:[0m [1;31mTRY300[0m Consider moving this statement to an `else` block
   [1m[94m|[0m
[1m[94m45 |[0m             return False, invitation, "This invitation has expired"
[1m[94m46 |[0m
[1m[94m47 |[0m         return True, invitation, "Valid invitation"
   [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY300[0m
[1m[94m48 |[0m
[1m[94m49 |[0m     except ClubInvitation.DoesNotExist:
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m71[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (121 > 88)
   [1m[94m|[0m
[1m[94m70 |[0m # Legacy utility functions removed - these depended on EventSignup model
[1m[94m71 |[0m # Functions: balance_teams_by_skill, optimize_car_distribution, calculate_availability_overlap, suggest_team_compositions
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m72 |[0m # These will need to be rewritten to use EventParticipation model
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m74[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
   [1m[94m|[0m
[1m[94m72 |[0m # These will need to be rewritten to use EventParticipation model
[1m[94m73 |[0m
[1m[94m74 |[0m def suggest_team_compositions_enhanced(participations: list[EventParticipation], criteria: dict) -> list[dict]:
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m75 |[0m     """AI-assisted team suggestions with multiple criteria"""
[1m[94m76 |[0m     suggestions = []
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m86[36m:[0m19[36m:[0m [1;31mF821[0m Undefined name `signups`
   [1m[94m|[0m
[1m[94m84 |[0m     # Score each signup
[1m[94m85 |[0m     scored_signups = []
[1m[94m86 |[0m     for signup in signups:
   [1m[94m|[0m                   [1m[91m^^^^^^^[0m [1m[91mF821[0m
[1m[94m87 |[0m         score = 0
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m96[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (103 > 88)
   [1m[94m|[0m
[1m[94m94 |[0m             total_time_slots = signup.club_event.base_event.time_slots.count()
[1m[94m95 |[0m             if total_time_slots > 0:
[1m[94m96 |[0m                 score += (signup.availabilities.filter(available=True).count() / total_time_slots) * 30
   [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m97 |[0m
[1m[94m98 |[0m         if prioritize_experience:
   [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m166[36m:[0m12[36m:[0m [1;31mRET504[0m Unnecessary assignment to `stint_length` before `return` statement
    [1m[94m|[0m
[1m[94m164 |[0m     stint_length = max(30, min(120, stint_length))
[1m[94m165 |[0m
[1m[94m166 |[0m     return stint_length
    [1m[94m|[0m            [1m[91m^^^^^^^^^^^^[0m [1m[91mRET504[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/utils.py[0m[36m:[0m178[36m:[0m30[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `5` with a constant variable
    [1m[94m|[0m
[1m[94m176 |[0m     # Track factors (longer tracks = higher average speed = more fuel)
[1m[94m177 |[0m     if track and hasattr(track, "length_km"):
[1m[94m178 |[0m         if track.length_km > 5:
    [1m[94m|[0m                              [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m179 |[0m             base_rate *= 1.2
[1m[94m180 |[0m         elif track.length_km < 3:
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m180[36m:[0m32[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `3` with a constant variable
    [1m[94m|[0m
[1m[94m178 |[0m         if track.length_km > 5:
[1m[94m179 |[0m             base_rate *= 1.2
[1m[94m180 |[0m         elif track.length_km < 3:
    [1m[94m|[0m                                [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m181 |[0m             base_rate *= 0.9
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m296[36m:[0m36[36m:[0m [1;31mA002[0m Function argument `format` is shadowing a Python builtin
    [1m[94m|[0m
[1m[94m296 |[0m def export_signup_data(club_event, format: str = "csv") -> io.BytesIO:
    [1m[94m|[0m                                    [1m[91m^^^^^^[0m [1m[91mA002[0m
[1m[94m297 |[0m     """Export signup sheets as CSV/Excel"""
[1m[94m298 |[0m     output = io.BytesIO()
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m440[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m438 |[0m """
[1m[94m439 |[0m
[1m[94m440 |[0m from datetime import datetime
    [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m441 |[0m from datetime import timedelta
[1m[94m442 |[0m from typing import Any
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m441[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m440 |[0m from datetime import datetime
[1m[94m441 |[0m from datetime import timedelta
    [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m442 |[0m from typing import Any
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m442[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m440 |[0m from datetime import datetime
[1m[94m441 |[0m from datetime import timedelta
[1m[94m442 |[0m from typing import Any
    [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m443 |[0m
[1m[94m444 |[0m import pytz
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m444[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m442 |[0m from typing import Any
[1m[94m443 |[0m
[1m[94m444 |[0m import pytz
    [1m[94m|[0m [1m[91m^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m445 |[0m from django.contrib.auth import get_user_model
[1m[94m446 |[0m from django.utils import timezone
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m445[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m444 |[0m import pytz
[1m[94m445 |[0m from django.contrib.auth import get_user_model
    [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m446 |[0m from django.utils import timezone
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m446[36m:[0m1[36m:[0m [1;31mE402[0m Module level import not at top of file
    [1m[94m|[0m
[1m[94m444 |[0m import pytz
[1m[94m445 |[0m from django.contrib.auth import get_user_model
[1m[94m446 |[0m from django.utils import timezone
    [1m[94m|[0m [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE402[0m
[1m[94m447 |[0m
[1m[94m448 |[0m User = get_user_model()
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m504[36m:[0m9[36m:[0m [1;31mE722[0m Do not use bare `except`
    [1m[94m|[0m
[1m[94m502 |[0m             offset = now.astimezone(tz).strftime("%z")
[1m[94m503 |[0m             return f"{timezone_str} (UTC{offset[:3]}:{offset[3:]})"
[1m[94m504 |[0m         except:
    [1m[94m|[0m         [1m[91m^^^^^^[0m [1m[91mE722[0m
[1m[94m505 |[0m             return timezone_str
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m512[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m511 |[0m     @staticmethod
[1m[94m512 |[0m     def generate_coverage_heatmap_data(event, timezone_display="UTC", resolution_hours=1) -> dict[str, Any]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m513 |[0m         """Generate data for availability coverage heatmap"""
[1m[94m514 |[0m         import pytz
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m532[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m530 |[0m         # Round to hour boundaries
[1m[94m531 |[0m         start_time = earliest.replace(minute=0, second=0, microsecond=0)
[1m[94m532 |[0m         end_time = latest.replace(minute=0, second=0, microsecond=0) + timedelta(hours=1)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m533 |[0m
[1m[94m534 |[0m         # Get unique users
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m605[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m604 |[0m     @staticmethod
[1m[94m605 |[0m     def generate_team_overlap_chart(user_ids: list[int], event, timezone_display="UTC") -> dict[str, Any]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m606 |[0m         """Generate chart data for team member availability overlap"""
[1m[94m607 |[0m         overlaps = AvailabilityWindow.find_overlapping_availability(user_ids, event)
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m615[36m:[0m13[36m:[0m [1;31mPERF401[0m Use a list comprehension to create a transformed list
    [1m[94m|[0m
[1m[94m614 |[0m           for user in users:
[1m[94m615 |[0m [1m[91m/[0m             nodes.append({
[1m[94m616 |[0m [1m[91m|[0m                 "id": user.id,
[1m[94m617 |[0m [1m[91m|[0m                 "name": user.get_full_name() or user.username,
[1m[94m618 |[0m [1m[91m|[0m                 "username": user.username,
[1m[94m619 |[0m [1m[91m|[0m             })
    [1m[94m|[0m [1m[91m|______________^[0m [1m[91mPERF401[0m
[1m[94m620 |[0m
[1m[94m621 |[0m           for overlap in overlaps:
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace for loop with list comprehension

[1msimlane/teams/utils.py[0m[36m:[0m622[36m:[0m13[36m:[0m [1;31mPERF401[0m Use a list comprehension to create a transformed list
    [1m[94m|[0m
[1m[94m621 |[0m           for overlap in overlaps:
[1m[94m622 |[0m [1m[91m/[0m             links.append({
[1m[94m623 |[0m [1m[91m|[0m                 "source": overlap["user1_id"],
[1m[94m624 |[0m [1m[91m|[0m                 "target": overlap["user2_id"],
[1m[94m625 |[0m [1m[91m|[0m                 "value": overlap["total_overlap_hours"],
[1m[94m626 |[0m [1m[91m|[0m                 "overlap_windows": overlap["overlap_windows"],
[1m[94m627 |[0m [1m[91m|[0m             })
    [1m[94m|[0m [1m[91m|______________^[0m [1m[91mPERF401[0m
[1m[94m628 |[0m
[1m[94m629 |[0m           return {
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Replace for loop with list comprehension

[1msimlane/teams/utils.py[0m[36m:[0m640[36m:[0m9[36m:[0m [1;31mC901[0m `greedy_team_formation` is too complex (16 > 10)
    [1m[94m|[0m
[1m[94m639 |[0m     @staticmethod
[1m[94m640 |[0m     def greedy_team_formation(event, team_size: int = 3, max_teams: int = None) -> list[list[int]]:
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m641 |[0m         """
[1m[94m642 |[0m         Greedy algorithm for team formation based on availability overlap.
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m640[36m:[0m9[36m:[0m [1;31mPLR0912[0m Too many branches (16 > 12)
    [1m[94m|[0m
[1m[94m639 |[0m     @staticmethod
[1m[94m640 |[0m     def greedy_team_formation(event, team_size: int = 3, max_teams: int = None) -> list[list[int]]:
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m641 |[0m         """
[1m[94m642 |[0m         Greedy algorithm for team formation based on availability overlap.
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m640[36m:[0m69[36m:[0m [1;31mRUF013[0m PEP 484 prohibits implicit `Optional`
    [1m[94m|[0m
[1m[94m639 |[0m     @staticmethod
[1m[94m640 |[0m     def greedy_team_formation(event, team_size: int = 3, max_teams: int = None) -> list[list[int]]:
    [1m[94m|[0m                                                                     [1m[91m^^^[0m [1m[91mRUF013[0m
[1m[94m641 |[0m         """
[1m[94m642 |[0m         Greedy algorithm for team formation based on availability overlap.
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Convert to `T | None`

[1msimlane/teams/utils.py[0m[36m:[0m640[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m639 |[0m     @staticmethod
[1m[94m640 |[0m     def greedy_team_formation(event, team_size: int = 3, max_teams: int = None) -> list[list[int]]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m641 |[0m         """
[1m[94m642 |[0m         Greedy algorithm for team formation based on availability overlap.
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m656[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m655 |[0m         # Get all pairwise overlaps
[1m[94m656 |[0m         all_overlaps = AvailabilityWindow.find_overlapping_availability(participants, event)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m657 |[0m
[1m[94m658 |[0m         # Build adjacency matrix with overlap hours as weights
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m729[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m727 |[0m     def balanced_team_formation(event, team_size: int = 3) -> list[dict[str, Any]]:
[1m[94m728 |[0m         """
[1m[94m729 |[0m         Create balanced teams considering both availability and skill/experience diversity.
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m730 |[0m         """
[1m[94m731 |[0m         participants = EventParticipation.objects.filter(
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m741[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m740 |[0m         # Get user experience levels
[1m[94m741 |[0m         experience_mapping = {"beginner": 1, "intermediate": 2, "advanced": 3, "professional": 4}
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m742 |[0m         user_data = {}
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m778[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m776 |[0m                 # Availability overlap
[1m[94m777 |[0m                 team_overlaps = [o for o in overlaps
[1m[94m778 |[0m                                if o["user1_id"] in team_list and o["user2_id"] in team_list]
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m779 |[0m                 avg_overlap = sum(o["total_overlap_hours"] for o in team_overlaps) / max(len(team_overlaps), 1)
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m779[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (111 > 88)
    [1m[94m|[0m
[1m[94m777 |[0m                 team_overlaps = [o for o in overlaps
[1m[94m778 |[0m                                if o["user1_id"] in team_list and o["user2_id"] in team_list]
[1m[94m779 |[0m                 avg_overlap = sum(o["total_overlap_hours"] for o in team_overlaps) / max(len(team_overlaps), 1)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m780 |[0m
[1m[94m781 |[0m                 # Combined score (lower variance = better balance, higher overlap = better)
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m781[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m779 |[0m                 avg_overlap = sum(o["total_overlap_hours"] for o in team_overlaps) / max(len(team_overlaps), 1)
[1m[94m780 |[0m
[1m[94m781 |[0m                 # Combined score (lower variance = better balance, higher overlap = better)
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m782 |[0m                 balance_score = avg_overlap / max(exp_variance, 0.1)  # Avoid division by zero
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m782[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (94 > 88)
    [1m[94m|[0m
[1m[94m781 |[0m                 # Combined score (lower variance = better balance, higher overlap = better)
[1m[94m782 |[0m                 balance_score = avg_overlap / max(exp_variance, 0.1)  # Avoid division by zero
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^[0m [1m[91mE501[0m
[1m[94m783 |[0m
[1m[94m784 |[0m                 if balance_score > best_balance_score:
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m793[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (114 > 88)
    [1m[94m|[0m
[1m[94m791 |[0m                     "member_ids": best_team,
[1m[94m792 |[0m                     "balance_score": best_balance_score,
[1m[94m793 |[0m                     "average_experience": sum(user_data[uid]["experience"] for uid in best_team) / len(best_team),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m794 |[0m                     "total_overlap_hours": sum(
[1m[94m795 |[0m                         o["total_overlap_hours"] for o in overlaps
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m812[36m:[0m27[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `2` with a constant variable
    [1m[94m|[0m
[1m[94m810 |[0m     def _calculate_variance(numbers: list[float]) -> float:
[1m[94m811 |[0m         """Calculate variance of a list of numbers"""
[1m[94m812 |[0m         if len(numbers) < 2:
    [1m[94m|[0m                           [1m[91m^[0m [1m[91mPLR2004[0m
[1m[94m813 |[0m             return 0
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m817[36m:[0m16[36m:[0m [1;31mRET504[0m Unnecessary assignment to `variance` before `return` statement
    [1m[94m|[0m
[1m[94m815 |[0m         mean = sum(numbers) / len(numbers)
[1m[94m816 |[0m         variance = sum((x - mean) ** 2 for x in numbers) / len(numbers)
[1m[94m817 |[0m         return variance
    [1m[94m|[0m                [1m[91m^^^^^^^^[0m [1m[91mRET504[0m
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove unnecessary assignment

[1msimlane/teams/utils.py[0m[36m:[0m824[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m823 |[0m     @staticmethod
[1m[94m824 |[0m     def detect_stint_conflicts(team_members: list[int], proposed_stints: list[dict]) -> list[dict]:
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m825 |[0m         """
[1m[94m826 |[0m         Detect conflicts between proposed stint assignments and member availability.
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m937[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (114 > 88)
    [1m[94m|[0m
[1m[94m935 |[0m                 # Merge periods
[1m[94m936 |[0m                 last_period["end"] = max(last_period["end"], period["end"])
[1m[94m937 |[0m                 last_period["duration_hours"] = (last_period["end"] - last_period["start"]).total_seconds() / 3600
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m938 |[0m                 # Combine available drivers
[1m[94m939 |[0m                 all_drivers = set(last_period["available_drivers"] + period["available_drivers"])
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m939[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (97 > 88)
    [1m[94m|[0m
[1m[94m937 |[0m                 last_period["duration_hours"] = (last_period["end"] - last_period["start"]).total_seconds() / 3600
[1m[94m938 |[0m                 # Combine available drivers
[1m[94m939 |[0m                 all_drivers = set(last_period["available_drivers"] + period["available_drivers"])
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m940 |[0m                 last_period["available_drivers"] = list(all_drivers)
[1m[94m941 |[0m                 last_period["driver_count"] = len(all_drivers)
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m968[36m:[0m19[36m:[0m [1;31mS311[0m Standard pseudo-random generators are not suitable for cryptographic purposes
    [1m[94m|[0m
[1m[94m967 |[0m     import random
[1m[94m968 |[0m     return 0.5 + (random.random() * 0.5)
    [1m[94m|[0m                   [1m[91m^^^^^^^^^^^^^^^[0m [1m[91mS311[0m
    [1m[94m|[0m

[1msimlane/teams/utils.py[0m[36m:[0m976[36m:[0m16[36m:[0m [1;31mPLR2004[0m Magic value used in comparison, consider replacing `24` with a constant variable
    [1m[94m|[0m
[1m[94m974 |[0m         minutes = int(hours * 60)
[1m[94m975 |[0m         return f"{minutes}m"
[1m[94m976 |[0m     if hours < 24:
    [1m[94m|[0m                [1m[91m^^[0m [1m[91mPLR2004[0m
[1m[94m977 |[0m         return f"{hours:.1f}h"
[1m[94m978 |[0m     days = int(hours // 24)
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m98[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m 96 |[0m         .annotate(
[1m[94m 97 |[0m             member_count=models.Count("members", distinct=True),
[1m[94m 98 |[0m             team_count=models.Count("teams", filter=models.Q(teams__is_active=True), distinct=True),
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m 99 |[0m         )
[1m[94m100 |[0m         .order_by("name")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m104[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m103 |[0m     # Get user's current club memberships to exclude from browsing
[1m[94m104 |[0m     user_club_ids = ClubMember.objects.filter(user=request.user).values_list("club_id", flat=True)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m105 |[0m     available_clubs = all_clubs.exclude(id__in=user_club_ids)
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m139[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (93 > 88)
    [1m[94m|[0m
[1m[94m138 |[0m     if existing_invitation:
[1m[94m139 |[0m         messages.info(request, f"You already have a pending invitation to join {club.name}.")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^[0m [1m[91mE501[0m
[1m[94m140 |[0m         return redirect("teams:browse_clubs")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m166[36m:[0m5[36m:[0m [1;31mC901[0m `club_dashboard_section` is too complex (12 > 10)
    [1m[94m|[0m
[1m[94m165 |[0m @login_required
[1m[94m166 |[0m def club_dashboard_section(request, club_slug, section="overview"):
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mC901[0m
[1m[94m167 |[0m     """Club dashboard section view with HTMX support."""
[1m[94m168 |[0m     # Get the club by slug
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m166[36m:[0m5[36m:[0m [1;31mPLR0912[0m Too many branches (13 > 12)
    [1m[94m|[0m
[1m[94m165 |[0m @login_required
[1m[94m166 |[0m def club_dashboard_section(request, club_slug, section="overview"):
    [1m[94m|[0m     [1m[91m^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mPLR0912[0m
[1m[94m167 |[0m     """Club dashboard section view with HTMX support."""
[1m[94m168 |[0m     # Get the club by slug
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m172[36m:[0m9[36m:[0m [1;31mB904[0m Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
    [1m[94m|[0m
[1m[94m170 |[0m         club = Club.objects.get(slug=club_slug)
[1m[94m171 |[0m     except Club.DoesNotExist:
[1m[94m172 |[0m         raise Http404("Club not found")
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mB904[0m
[1m[94m173 |[0m
[1m[94m174 |[0m     # Check if user is a member or if club is public
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m172[36m:[0m15[36m:[0m [1;31mTRY003[0m Avoid specifying long messages outside the exception class
    [1m[94m|[0m
[1m[94m170 |[0m         club = Club.objects.get(slug=club_slug)
[1m[94m171 |[0m     except Club.DoesNotExist:
[1m[94m172 |[0m         raise Http404("Club not found")
    [1m[94m|[0m               [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mTRY003[0m
[1m[94m173 |[0m
[1m[94m174 |[0m     # Check if user is a member or if club is public
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m172[36m:[0m23[36m:[0m [1;31mEM101[0m Exception must not use a string literal, assign to variable first
    [1m[94m|[0m
[1m[94m170 |[0m         club = Club.objects.get(slug=club_slug)
[1m[94m171 |[0m     except Club.DoesNotExist:
[1m[94m172 |[0m         raise Http404("Club not found")
    [1m[94m|[0m                       [1m[91m^^^^^^^^^^^^^^^^[0m [1m[91mEM101[0m
[1m[94m173 |[0m
[1m[94m174 |[0m     # Check if user is a member or if club is public
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Assign to variable; remove string literal

[1msimlane/teams/views.py[0m[36m:[0m181[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m179 |[0m     except ClubMember.DoesNotExist:
[1m[94m180 |[0m         if not club.is_public:
[1m[94m181 |[0m             return HttpResponseForbidden("This club is private. You must be a member to view it.")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m182 |[0m
[1m[94m183 |[0m     # Get user's other clubs for navigation
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m464[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (118 > 88)
    [1m[94m|[0m
[1m[94m462 |[0m                 request,
[1m[94m463 |[0m                 f"Signup sheet '{signup_sheet.title}' created successfully! "
[1m[94m464 |[0m                 f"{'It is now open for signups.' if signup_sheet.is_open else 'It will open at the scheduled time.'}",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m465 |[0m             )
[1m[94m466 |[0m             return redirect("teams:club_dashboard_section", club_slug=club.slug, section="events")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m466[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (98 > 88)
    [1m[94m|[0m
[1m[94m464 |[0m                 f"{'It is now open for signups.' if signup_sheet.is_open else 'It will open at the scheduled time.'}",
[1m[94m465 |[0m             )
[1m[94m466 |[0m             return redirect("teams:club_dashboard_section", club_slug=club.slug, section="events")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m467 |[0m     else:
[1m[94m468 |[0m         form = ClubEventSignupSheetForm(club=club, user=request.user)
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m476[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (129 > 88)
    [1m[94m|[0m
[1m[94m474 |[0m         if event_id:
[1m[94m475 |[0m             from simlane.sim.models import Event
[1m[94m476 |[0m             selected_event = Event.objects.select_related("simulator").prefetch_related("time_slots").filter(id=event_id).first()
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m477 |[0m     except Exception:
[1m[94m478 |[0m         selected_event = None
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m477[36m:[0m12[36m:[0m [1;31mBLE001[0m Do not catch blind exception: `Exception`
    [1m[94m|[0m
[1m[94m475 |[0m             from simlane.sim.models import Event
[1m[94m476 |[0m             selected_event = Event.objects.select_related("simulator").prefetch_related("time_slots").filter(id=event_id).first()
[1m[94m477 |[0m     except Exception:
    [1m[94m|[0m            [1m[91m^^^^^^^^^[0m [1m[91mBLE001[0m
[1m[94m478 |[0m         selected_event = None
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m528[36m:[0m88[36m:[0m [1;31mE501[0m Line too long (129 > 88)
    [1m[94m|[0m
[1m[94m526 |[0m                 messages.info(
[1m[94m527 |[0m                     request,
[1m[94m528 |[0m                     f"📝 {sheet.title} - {'Open now' if sheet.is_open else 'Opens ' + sheet.signup_opens.strftime('%b %d, %Y')}",
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m529 |[0m                 )
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m542[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (89 > 88)
    [1m[94m|[0m
[1m[94m541 |[0m     if request.headers.get("HX-Request"):
[1m[94m542 |[0m         return render(request, "teams/club_event_signup_bulk_create_modal.html", context)
    [1m[94m|[0m                                                                                         [1m[91m^[0m [1m[91mE501[0m
[1m[94m543 |[0m
[1m[94m544 |[0m     return render(request, "teams/club_event_signup_bulk_create.html", context)
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m561[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (127 > 88)
    [1m[94m|[0m
[1m[94m559 |[0m                 filter=models.Q(
[1m[94m560 |[0m                     event__participations__signup_context_club=club,
[1m[94m561 |[0m                     event__participations__status__in=["signed_up", "team_formation", "team_assigned", "entered", "confirmed"],
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m562 |[0m                 ),
[1m[94m563 |[0m             ),
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m582[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (91 > 88)
    [1m[94m|[0m
[1m[94m580 |[0m         "open_signups": open_signups,
[1m[94m581 |[0m         "closed_signups": closed_signups,
[1m[94m582 |[0m         "user_role": request.club_member.role if hasattr(request, "club_member") else None,
    [1m[94m|[0m                                                                                         [1m[91m^^^[0m [1m[91mE501[0m
[1m[94m583 |[0m         "can_manage": request.club_member.can_manage_events() if hasattr(request, "club_member") else False,
[1m[94m584 |[0m     }
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m583[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (108 > 88)
    [1m[94m|[0m
[1m[94m581 |[0m         "closed_signups": closed_signups,
[1m[94m582 |[0m         "user_role": request.club_member.role if hasattr(request, "club_member") else None,
[1m[94m583 |[0m         "can_manage": request.club_member.can_manage_events() if hasattr(request, "club_member") else False,
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m584 |[0m     }
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m608[36m:[0m9[36m:[0m [1;31mF841[0m Local variable `club_member` is assigned to but never used
    [1m[94m|[0m
[1m[94m606 |[0m             return redirect("teams:clubs_dashboard")
[1m[94m607 |[0m
[1m[94m608 |[0m         club_member = invitation.accept(request.user)
    [1m[94m|[0m         [1m[91m^^^^^^^^^^^[0m [1m[91mF841[0m
[1m[94m609 |[0m         messages.success(request, f"Welcome to {invitation.club.name}!")
    [1m[94m|[0m
    [1m[94m= [0m[1m[96mhelp[0m: Remove assignment to unused variable `club_member`

[1msimlane/teams/views.py[0m[36m:[0m634[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (99 > 88)
    [1m[94m|[0m
[1m[94m633 |[0m         invitation.decline()
[1m[94m634 |[0m         messages.info(request, f"You have declined the invitation to join {invitation.club.name}.")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m635 |[0m
[1m[94m636 |[0m         return redirect("teams:clubs_dashboard")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m647[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m645 |[0m def stint_plan_update_legacy(request, allocation_id):
[1m[94m646 |[0m     """Legacy view - replaced by enhanced team formation system"""
[1m[94m647 |[0m     messages.warning(request, "Stint planning has been moved to the enhanced team formation system")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m648 |[0m     return redirect("teams:clubs_dashboard")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m654[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (106 > 88)
    [1m[94m|[0m
[1m[94m652 |[0m def stint_plan_export_legacy(request, allocation_id):
[1m[94m653 |[0m     """Legacy view - replaced by enhanced team formation system"""
[1m[94m654 |[0m     messages.warning(request, "Export functionality has been moved to the enhanced team formation system")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m655 |[0m     return redirect("teams:clubs_dashboard")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m661[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (100 > 88)
    [1m[94m|[0m
[1m[94m659 |[0m def stint_plan_partial_legacy(request, allocation_id):
[1m[94m660 |[0m     """Legacy view - replaced by enhanced team formation system"""
[1m[94m661 |[0m     messages.warning(request, "Stint planning has been moved to the enhanced team formation system")
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m662 |[0m     return redirect("teams:clubs_dashboard")
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m708[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (102 > 88)
    [1m[94m|[0m
[1m[94m706 |[0m     ).select_related("user", "team", "assigned_car")
[1m[94m707 |[0m
[1m[94m708 |[0m     can_manage = request.club_member.can_manage_events() if hasattr(request, "club_member") else False
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m709 |[0m
[1m[94m710 |[0m     context = {
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m739[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m737 |[0m             form.save()
[1m[94m738 |[0m             messages.success(request, "Signup sheet updated successfully.")
[1m[94m739 |[0m             return redirect("teams:club_event_signup_detail", club_slug=club.slug, sheet_id=sheet_id)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m740 |[0m     else:
[1m[94m741 |[0m         form = ClubEventSignupSheetForm(instance=signup_sheet, club=club, user=request.user)
    [1m[94m|[0m

[1msimlane/teams/views.py[0m[36m:[0m741[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (92 > 88)
    [1m[94m|[0m
[1m[94m739 |[0m             return redirect("teams:club_event_signup_detail", club_slug=club.slug, sheet_id=sheet_id)
[1m[94m740 |[0m     else:
[1m[94m741 |[0m         form = ClubEventSignupSheetForm(instance=signup_sheet, club=club, user=request.user)
    [1m[94m|[0m                                                                                         [1m[91m^^^^[0m [1m[91mE501[0m
[1m[94m742 |[0m         form.fields.pop("event_search", None)
    [1m[94m|[0m

[1msimlane/users/views.py[0m[36m:[0m339[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m337 |[0m         # This would typically be handled by allauth.headless
[1m[94m338 |[0m         from django.http import JsonResponse
[1m[94m339 |[0m         return JsonResponse({"error": "Use /api/auth/ endpoints for API authentication"}, status=400)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m340 |[0m     # For web requests, redirect to standard allauth email confirmation
[1m[94m341 |[0m     from django.shortcuts import redirect
    [1m[94m|[0m

[1msimlane/users/views.py[0m[36m:[0m359[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m357 |[0m     if is_api_request:
[1m[94m358 |[0m         from django.http import JsonResponse
[1m[94m359 |[0m         return JsonResponse({"error": "Use /api/auth/ endpoints for API authentication"}, status=400)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m360 |[0m     from django.shortcuts import redirect
[1m[94m361 |[0m     return redirect("account_reset_password")
    [1m[94m|[0m

[1msimlane/users/views.py[0m[36m:[0m377[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m375 |[0m     if is_api_request:
[1m[94m376 |[0m         from django.http import JsonResponse
[1m[94m377 |[0m         return JsonResponse({"error": "Use /api/auth/ endpoints for API authentication"}, status=400)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m378 |[0m     from django.shortcuts import redirect
[1m[94m379 |[0m     return redirect("account_reset_password_from_key", key=key)
    [1m[94m|[0m

[1msimlane/users/views.py[0m[36m:[0m395[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m393 |[0m     if is_api_request:
[1m[94m394 |[0m         from django.http import JsonResponse
[1m[94m395 |[0m         return JsonResponse({"error": "Use /api/auth/ endpoints for API authentication"}, status=400)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m396 |[0m     from django.shortcuts import redirect
[1m[94m397 |[0m     return redirect("account_signup")
    [1m[94m|[0m

[1msimlane/users/views.py[0m[36m:[0m413[36m:[0m89[36m:[0m [1;31mE501[0m Line too long (101 > 88)
    [1m[94m|[0m
[1m[94m411 |[0m     if is_api_request:
[1m[94m412 |[0m         from django.http import JsonResponse
[1m[94m413 |[0m         return JsonResponse({"error": "Use /api/auth/ endpoints for API authentication"}, status=400)
    [1m[94m|[0m                                                                                         [1m[91m^^^^^^^^^^^^^[0m [1m[91mE501[0m
[1m[94m414 |[0m     from django.shortcuts import redirect
[1m[94m415 |[0m     return redirect("socialaccount_login_error")
    [1m[94m|[0m

Found 5352 errors (3944 fixed, 1408 remaining).
No fixes available (226 hidden fixes can be enabled with the `--unsafe-fixes` option).

ruff format..............................................................[41mFailed[m
[2m- hook id: ruff-format[m
[2m- files were modified by this hook[m

[1;33mwarning[0m[1m:[0m [1mThe following rule may cause conflicts when used with the formatter: `COM812`. To avoid unexpected behavior, we recommend disabling this rule, either by removing it from the `lint.select` or `lint.extend-select` configuration, or adding it to the `lint.ignore` configuration.[0m
45 files reformatted, 103 files left unchanged

djLint formatting for Django.............................................[41mFailed[m
[2m- hook id: djlint-reformat-django[m
[2m- exit code: 1[m
[2m- files were modified by this hook[m

[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:01<00:12,  1.23s/it][0m 18% 2/11 [00:01<00:05,  1.68it/s][0m 55% 6/11 [00:01<00:00,  6.18it/s][0m 82% 9/11 [00:01<00:00,  9.18it/s][0m100% 11/11 [00:01<00:00,  9.39it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/allauth/layouts/entrance.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -29,6 +29,5 @@
[0m
[0m[0m     </div>[0m
[0m[0m   </div>[0m
[0m[0m {% endblock content %}[0m
[0m[33m-[0m
[0m[0m {% block extra_body %}[0m
[0m[0m {% endblock extra_body %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/search_results_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,98 +1,117 @@
[0m
[0m[0m <!-- Profiles Grid -->[0m
[0m[0m <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">[0m
[0m[33m-    {% for profile in page_obj %}[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[33m-            <div class="flex items-center space-x-3 mb-3">[0m
[0m[33m-                {% if profile.simulator.icon %}[0m
[0m[33m-                    <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-8 h-8 rounded">[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                        <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-                <div class="flex-1">[0m
[0m[33m-                    <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[33m-                    <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            {% if profile.sim_api_id %}[0m
[0m[33m-                <p class="text-xs text-gray-400 dark:text-gray-500 mb-3">ID: {{ profile.sim_api_id }}</p>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <div class="flex space-x-2">[0m
[0m[33m-                <a href="{{ profile.get_absolute_url }}"[0m
[0m[33m-                   class="flex-1 btn-primary btn-sm text-center"[0m
[0m[33m-                   {% if from_profile %}target="_blank"{% endif %}>[0m
[0m[33m-                    View Profile[0m
[0m[33m-                </a>[0m
[0m[33m-                {% if user.is_authenticated and not profile.linked_user %}[0m
[0m[33m-                    <!-- Show link button for unlinked profiles when user is authenticated -->[0m
[0m[33m-                    <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-                       class="btn btn-sm border border-primary-600 text-primary-600 hover:bg-primary-50 dark:hover:bg-primary-900/20"[0m
[0m[33m-                       title="Link to My Account">[0m
[0m[33m-                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>[0m
[0m[33m-                        </svg>[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[32m+  {% for profile in page_obj %}[0m
[0m[32m+    <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[32m+      <div class="flex items-center space-x-3 mb-3">[0m
[0m[32m+        {% if profile.simulator.icon %}[0m
[0m[32m+          <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+               alt="{{ profile.simulator.name }}"[0m
[0m[32m+               class="w-8 h-8 rounded" />[0m
[0m[32m+        {% else %}[0m
[0m[32m+          <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+            <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[32m+          <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[0m         </div>[0m
[0m[33m-    {% empty %}[0m
[0m[33m-        <div class="col-span-full text-center py-12">[0m
[0m[33m-            {% if query %}[0m
[0m[33m-                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-4.418 0-8-3.134-8-7 0-3.866 3.582-7 8-7s8 3.134 8 7c0 1.76-.743 3.37-1.97 4.543-.413.394-.88.718-1.384.987L12 22l-2.646-2.47z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-                <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No profiles found</h3>[0m
[0m[33m-                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Try adjusting your search terms or create a profile manually.</p>[0m
[0m[33m-                {% if user.is_authenticated and from_profile %}[0m
[0m[33m-                    <div class="mt-6">[0m
[0m[33m-                        <button hx-get="{% url 'users:sim_profile_add' %}"[0m
[0m[33m-                                hx-target="#profile-modal"[0m
[0m[33m-                                hx-swap="innerHTML"[0m
[0m[33m-                                class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[33m-                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            Create Profile Manually[0m
[0m[33m-                        </button>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            {% else %}[0m
[0m[33m-                <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-                <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">Search for profiles</h3>[0m
[0m[33m-                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Enter a profile name or ID to find available profiles to link.</p>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </div>[0m
[0m[33m-    {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if profile.sim_api_id %}[0m
[0m[32m+        <p class="text-xs text-gray-400 dark:text-gray-500 mb-3">ID: {{ profile.sim_api_id }}</p>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      <div class="flex space-x-2">[0m
[0m[32m+        <a href="{{ profile.get_absolute_url }}"[0m
[0m[32m+           class="flex-1 btn-primary btn-sm text-center"[0m
[0m[32m+           {% if from_profile %}target="_blank"{% endif %}>View Profile</a>[0m
[0m[32m+        {% if user.is_authenticated and not profile.linked_user %}[0m
[0m[32m+          <!-- Show link button for unlinked profiles when user is authenticated -->[0m
[0m[32m+          <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+             class="btn btn-sm border border-primary-600 text-primary-600 hover:bg-primary-50 dark:hover:bg-primary-900/20"[0m
[0m[32m+             title="Link to My Account">[0m
[0m[32m+            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+          </a>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% empty %}[0m
[0m[32m+    <div class="col-span-full text-center py-12">[0m
[0m[32m+      {% if query %}[0m
[0m[32m+        <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+             fill="none"[0m
[0m[32m+             stroke="currentColor"[0m
[0m[32m+             viewBox="0 0 24 24">[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-4.418 0-8-3.134-8-7 0-3.866 3.582-7 8-7s8 3.134 8 7c0 1.76-.743 3.37-1.97 4.543-.413.394-.88.718-1.384.987L12 22l-2.646-2.47z">[0m
[0m[32m+          </path>[0m
[0m[32m+        </svg>[0m
[0m[32m+        <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No profiles found</h3>[0m
[0m[32m+        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+          Try adjusting your search terms or create a profile manually.[0m
[0m[32m+        </p>[0m
[0m[32m+        {% if user.is_authenticated and from_profile %}[0m
[0m[32m+          <div class="mt-6">[0m
[0m[32m+            <button hx-get="{% url 'users:sim_profile_add' %}"[0m
[0m[32m+                    hx-target="#profile-modal"[0m
[0m[32m+                    hx-swap="innerHTML"[0m
[0m[32m+                    class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[32m+              <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   stroke="currentColor"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>[0m
[0m[32m+              </svg>[0m
[0m[32m+              Create Profile Manually[0m
[0m[32m+            </button>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      {% else %}[0m
[0m[32m+        <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+             fill="none"[0m
[0m[32m+             stroke="currentColor"[0m
[0m[32m+             viewBox="0 0 24 24">[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+          </path>[0m
[0m[32m+        </svg>[0m
[0m[32m+        <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">Search for profiles</h3>[0m
[0m[32m+        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+          Enter a profile name or ID to find available profiles to link.[0m
[0m[32m+        </p>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+    </div>[0m
[0m[32m+  {% endfor %}[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[0m <!-- Pagination -->[0m
[0m[0m {% if page_obj.has_other_pages %}[0m
[0m[33m-    <div class="flex justify-center mt-6">[0m
[0m[33m-        <nav class="flex space-x-2">[0m
[0m[33m-            {% if page_obj.has_previous %}[0m
[0m[33m-                <a href="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[33m-                   class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[33m-                   {% if from_profile %}hx-get="{% url 'drivers:profile_search_to_link' %}?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}&from_profile=1" hx-target="#search-results-container" hx-swap="innerHTML"{% endif %}>[0m
[0m[33m-                    Previous[0m
[0m[33m-                </a>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[33m-                Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[33m-            </span>[0m
[0m[33m-[0m
[0m[33m-            {% if page_obj.has_next %}[0m
[0m[33m-                <a href="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[33m-                   class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[33m-                   {% if from_profile %}hx-get="{% url 'drivers:profile_search_to_link' %}?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}&from_profile=1" hx-target="#search-results-container" hx-swap="innerHTML"{% endif %}>[0m
[0m[33m-                    Next[0m
[0m[33m-                </a>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </nav>[0m
[0m[33m-    </div>[0m
[0m[32m+  <div class="flex justify-center mt-6">[0m
[0m[32m+    <nav class="flex space-x-2">[0m
[0m[32m+      {% if page_obj.has_previous %}[0m
[0m[32m+        <a href="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[32m+           class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[32m+           {% if from_profile %}hx-get="{% url 'drivers:profile_search_to_link' %}?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}[0m
[0m[32m+           {% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}[0m
[0m[32m+           from_profile="1"[0m
[0m[32m+           "[0m
[0m[32m+           hx-target="#search-results-container"[0m
[0m[32m+           hx-swap="innerHTML"[0m
[0m[32m+           {% endif %}>Previous</a>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[32m+        Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[32m+      </span>[0m
[0m[32m+      {% if page_obj.has_next %}[0m
[0m[32m+        <a href="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[32m+           class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[32m+           {% if from_profile %}hx-get="{% url 'drivers:profile_search_to_link' %}?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}[0m
[0m[32m+           {% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}[0m
[0m[32m+           from_profile="1"[0m
[0m[32m+           "[0m
[0m[32m+           hx-target="#search-results-container"[0m
[0m[32m+           hx-swap="innerHTML"[0m
[0m[32m+           {% endif %}>Next</a>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+    </nav>[0m
[0m[32m+  </div>[0m
[0m[0m {% endif %}[0m
[0m[32m[1m
simlane/templates/teams/partials/participant_list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,154 +1,140 @@
[0m
[0m[0m <!-- HTMX Partial: Participant List -->[0m
[0m[0m <div id="participants-list" class="divide-y divide-gray-200">[0m
[0m[33m-    {% if participants %}[0m
[0m[33m-        {% for participation in participants %}[0m
[0m[33m-            <div class="px-6 py-4 hover:bg-gray-50 transition-colors"[0m
[0m[33m-                 x-data="{ expanded: false }">[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <div class="flex items-center space-x-3">[0m
[0m[33m-                        <!-- User Avatar -->[0m
[0m[33m-                        <div class="flex-shrink-0">[0m
[0m[33m-                            <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">[0m
[0m[33m-                                <span class="text-sm font-medium text-white">[0m
[0m[33m-                                    {{ participation.user.first_name|slice:":1" }}{{ participation.user.last_name|slice:":1" }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- User Info -->[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <div class="font-medium text-gray-900">[0m
[0m[33m-                                {{ participation.user.get_full_name|default:participation.user.username }}[0m
[0m[33m-                            </div>[0m
[0m[33m-                            <div class="text-sm text-gray-500">[0m
[0m[33m-                                @{{ participation.user.username }} • {{ participation.experience_level|title }}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Status & Actions -->[0m
[0m[33m-                    <div class="flex items-center space-x-4">[0m
[0m[33m-                        <!-- Availability Hours -->[0m
[0m[33m-                        <div class="text-right">[0m
[0m[33m-                            <div class="text-sm font-medium text-gray-900">[0m
[0m[33m-                                {{ participation.total_availability_hours|floatformat:1 }}h available[0m
[0m[33m-                            </div>[0m
[0m[33m-                            <div class="text-xs text-gray-500">[0m
[0m[33m-                                {{ participation.preferred_car|default:"No car preference" }}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Status Badge -->[0m
[0m[33m-                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium[0m
[0m[33m-                            {% if participation.status == 'signed_up' %}bg-green-100 text-green-800[0m
[0m[33m-                            {% elif participation.status == 'team_assigned' %}bg-blue-100 text-blue-800[0m
[0m[33m-                            {% elif participation.status == 'entered' %}bg-purple-100 text-purple-800[0m
[0m[33m-                            {% else %}bg-gray-100 text-gray-800{% endif %}">[0m
[0m[33m-                            {{ participation.get_status_display }}[0m
[0m[33m-                        </span>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Expand Button -->[0m
[0m[33m-                        <button @click="expanded = !expanded"[0m
[0m[33m-                                class="text-gray-400 hover:text-gray-600">[0m
[0m[33m-                            <svg class="w-5 h-5 transform transition-transform"[0m
[0m[33m-                                 :class="expanded && 'rotate-180'"[0m
[0m[33m-                                 fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"[0m
[0m[33m-                                      d="M19 9l-7 7-7-7" />[0m
[0m[33m-                            </svg>[0m
[0m[33m-                        </button>[0m
[0m[33m-                    </div>[0m
[0m[32m+  {% if participants %}[0m
[0m[32m+    {% for participation in participants %}[0m
[0m[32m+      <div class="px-6 py-4 hover:bg-gray-50 transition-colors"[0m
[0m[32m+           x-data="{ expanded: false }">[0m
[0m[32m+        <div class="flex items-center justify-between">[0m
[0m[32m+          <div class="flex items-center space-x-3">[0m
[0m[32m+            <!-- User Avatar -->[0m
[0m[32m+            <div class="flex-shrink-0">[0m
[0m[32m+              <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center">[0m
[0m[32m+                <span class="text-sm font-medium text-white">[0m
[0m[32m+                  {{ participation.user.first_name|slice:":1" }}{{ participation.user.last_name|slice:":1" }}[0m
[0m[32m+                </span>[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- User Info -->[0m
[0m[32m+            <div>[0m
[0m[32m+              <div class="font-medium text-gray-900">[0m
[0m[32m+                {{ participation.user.get_full_name|default:participation.user.username }}[0m
[0m[32m+              </div>[0m
[0m[32m+              <div class="text-sm text-gray-500">[0m
[0m[32m+                @{{ participation.user.username }} • {{ participation.experience_level|title }}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Status & Actions -->[0m
[0m[32m+          <div class="flex items-center space-x-4">[0m
[0m[32m+            <!-- Availability Hours -->[0m
[0m[32m+            <div class="text-right">[0m
[0m[32m+              <div class="text-sm font-medium text-gray-900">[0m
[0m[32m+                {{ participation.total_availability_hours|floatformat:1 }}h available[0m
[0m[32m+              </div>[0m
[0m[32m+              <div class="text-xs text-gray-500">{{ participation.preferred_car|default:"No car preference" }}</div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Status Badge -->[0m
[0m[32m+            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {% if participation.status == 'signed_up' %}bg-green-100 text-green-800 {% elif participation.status == 'team_assigned' %}bg-blue-100 text-blue-800 {% elif participation.status == 'entered' %}bg-purple-100 text-purple-800 {% else %}bg-gray-100 text-gray-800{% endif %}">[0m
[0m[32m+              {{ participation.get_status_display }}[0m
[0m[32m+            </span>[0m
[0m[32m+            <!-- Expand Button -->[0m
[0m[32m+            <button @click="expanded = !expanded"[0m
[0m[32m+                    class="text-gray-400 hover:text-gray-600">[0m
[0m[32m+              <svg class="w-5 h-5 transform transition-transform"[0m
[0m[32m+                   :class="expanded && 'rotate-180'"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   stroke="currentColor"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />[0m
[0m[32m+              </svg>[0m
[0m[32m+            </button>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Expanded Details -->[0m
[0m[32m+        <div x-show="expanded"[0m
[0m[32m+             x-collapse[0m
[0m[32m+             class="mt-4 pt-4 border-t border-gray-100">[0m
[0m[32m+          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">[0m
[0m[32m+            <!-- Preferences -->[0m
[0m[32m+            <div>[0m
[0m[32m+              <h4 class="font-medium text-gray-700 mb-2">Preferences</h4>[0m
[0m[32m+              <dl class="space-y-1">[0m
[0m[32m+                <div class="flex justify-between">[0m
[0m[32m+                  <dt class="text-gray-500">Max Stint:</dt>[0m
[0m[32m+                  <dd class="text-gray-900">[0m
[0m[32m+                    {{ participation.max_stint_duration|default:60 }} min[0m
[0m[32m+                  </dd>[0m
[0m[0m                 </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Expanded Details -->[0m
[0m[33m-                <div x-show="expanded" x-collapse class="mt-4 pt-4 border-t border-gray-100">[0m
[0m[33m-                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">[0m
[0m[33m-                        <!-- Preferences -->[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h4 class="font-medium text-gray-700 mb-2">Preferences</h4>[0m
[0m[33m-                            <dl class="space-y-1">[0m
[0m[33m-                                <div class="flex justify-between">[0m
[0m[33m-                                    <dt class="text-gray-500">Max Stint:</dt>[0m
[0m[33m-                                    <dd class="text-gray-900">{{ participation.max_stint_duration|default:60 }} min</dd>[0m
[0m[33m-                                </div>[0m
[0m[33m-                                <div class="flex justify-between">[0m
[0m[33m-                                    <dt class="text-gray-500">Min Rest:</dt>[0m
[0m[33m-                                    <dd class="text-gray-900">{{ participation.min_rest_duration|default:15 }} min</dd>[0m
[0m[33m-                                </div>[0m
[0m[33m-                                {% if participation.backup_car %}[0m
[0m[33m-                                <div class="flex justify-between">[0m
[0m[33m-                                    <dt class="text-gray-500">Backup Car:</dt>[0m
[0m[33m-                                    <dd class="text-gray-900">{{ participation.backup_car }}</dd>[0m
[0m[33m-                                </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </dl>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Availability Summary -->[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h4 class="font-medium text-gray-700 mb-2">Availability Windows</h4>[0m
[0m[33m-                            <div class="space-y-1">[0m
[0m[33m-                                {% for window in participation.availability_windows.all|slice:":3" %}[0m
[0m[33m-                                    <div class="text-xs">[0m
[0m[33m-                                        <span class="text-gray-500">[0m
[0m[33m-                                            {{ window.start_time|date:"D H:i" }} - {{ window.end_time|date:"H:i" }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                        <span class="ml-1 text-gray-400">[0m
[0m[33m-                                            ({{ window.get_preference_level_display }})[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endfor %}[0m
[0m[33m-                                {% if participation.availability_windows.count > 3 %}[0m
[0m[33m-                                    <div class="text-xs text-gray-400">[0m
[0m[33m-                                        +{{ participation.availability_windows.count|add:"-3" }} more windows[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Notes -->[0m
[0m[33m-                        {% if participation.notes %}[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h4 class="font-medium text-gray-700 mb-2">Notes</h4>[0m
[0m[33m-                            <p class="text-xs text-gray-600">{{ participation.notes|truncatewords:20 }}</p>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Actions -->[0m
[0m[33m-                    <div class="mt-4 flex justify-end space-x-2">[0m
[0m[33m-                        {% if participation.status == 'signed_up' %}[0m
[0m[33m-                            <button class="text-xs text-blue-600 hover:text-blue-800"[0m
[0m[33m-                                    onclick="selectParticipant('{{ participation.id }}')">[0m
[0m[33m-                                Select for Team[0m
[0m[33m-                            </button>[0m
[0m[33m-                        {% elif participation.status == 'team_assigned' and participation.team %}[0m
[0m[33m-                            <span class="text-xs text-gray-500">[0m
[0m[33m-                                Assigned to {{ participation.team.name }}[0m
[0m[33m-                            </span>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[32m+                <div class="flex justify-between">[0m
[0m[32m+                  <dt class="text-gray-500">Min Rest:</dt>[0m
[0m[32m+                  <dd class="text-gray-900">[0m
[0m[32m+                    {{ participation.min_rest_duration|default:15 }} min[0m
[0m[32m+                  </dd>[0m
[0m[0m                 </div>[0m
[0m[32m+                {% if participation.backup_car %}[0m
[0m[32m+                  <div class="flex justify-between">[0m
[0m[32m+                    <dt class="text-gray-500">Backup Car:</dt>[0m
[0m[32m+                    <dd class="text-gray-900">[0m
[0m[32m+                      {{ participation.backup_car }}[0m
[0m[32m+                    </dd>[0m
[0m[32m+                  </div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </dl>[0m
[0m[0m             </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[33m-    {% else %}[0m
[0m[33m-        <div class="px-6 py-12 text-center">[0m
[0m[33m-            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"[0m
[0m[33m-                      d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />[0m
[0m[33m-            </svg>[0m
[0m[33m-            <p class="mt-2 text-sm text-gray-500">No participants have signed up yet.</p>[0m
[0m[33m-            <p class="text-xs text-gray-400 mt-1">Participants will appear here as they sign up for the event.</p>[0m
[0m[32m+            <!-- Availability Summary -->[0m
[0m[32m+            <div>[0m
[0m[32m+              <h4 class="font-medium text-gray-700 mb-2">Availability Windows</h4>[0m
[0m[32m+              <div class="space-y-1">[0m
[0m[32m+                {% for window in participation.availability_windows.all|slice:":3" %}[0m
[0m[32m+                  <div class="text-xs">[0m
[0m[32m+                    <span class="text-gray-500">{{ window.start_time|date:"D H:i" }} - {{ window.end_time|date:"H:i" }}</span>[0m
[0m[32m+                    <span class="ml-1 text-gray-400">({{ window.get_preference_level_display }})</span>[0m
[0m[32m+                  </div>[0m
[0m[32m+                {% endfor %}[0m
[0m[32m+                {% if participation.availability_windows.count > 3 %}[0m
[0m[32m+                  <div class="text-xs text-gray-400">+{{ participation.availability_windows.count|add:"-3" }} more windows</div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Notes -->[0m
[0m[32m+            {% if participation.notes %}[0m
[0m[32m+              <div>[0m
[0m[32m+                <h4 class="font-medium text-gray-700 mb-2">Notes</h4>[0m
[0m[32m+                <p class="text-xs text-gray-600">{{ participation.notes|truncatewords:20 }}</p>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Actions -->[0m
[0m[32m+          <div class="mt-4 flex justify-end space-x-2">[0m
[0m[32m+            {% if participation.status == 'signed_up' %}[0m
[0m[32m+              <button class="text-xs text-blue-600 hover:text-blue-800"[0m
[0m[32m+                      onclick="selectParticipant('{{ participation.id }}')">Select for Team</button>[0m
[0m[32m+            {% elif participation.status == 'team_assigned' and participation.team %}[0m
[0m[32m+              <span class="text-xs text-gray-500">Assigned to {{ participation.team.name }}</span>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-    {% endif %}[0m
[0m[32m+      </div>[0m
[0m[32m+    {% endfor %}[0m
[0m[32m+  {% else %}[0m
[0m[32m+    <div class="px-6 py-12 text-center">[0m
[0m[32m+      <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+           fill="none"[0m
[0m[32m+           stroke="currentColor"[0m
[0m[32m+           viewBox="0 0 24 24">[0m
[0m[32m+        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />[0m
[0m[32m+      </svg>[0m
[0m[32m+      <p class="mt-2 text-sm text-gray-500">No participants have signed up yet.</p>[0m
[0m[32m+      <p class="text-xs text-gray-400 mt-1">Participants will appear here as they sign up for the event.</p>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% endif %}[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[0m <script>[0m
[0m[33m-// Helper function for participant selection[0m
[0m[33m-function selectParticipant(participantId) {[0m
[0m[32m+  // Helper function for participant selection[0m
[0m[32m+  function selectParticipant(participantId) {[0m
[0m[0m     // This would be handled by the parent component[0m
[0m[0m     if (window.teamFormationDashboard) {[0m
[0m[33m-        window.teamFormationDashboard.selectParticipant(participantId);[0m
[0m[32m+      window.teamFormationDashboard.selectParticipant(participantId);[0m
[0m[0m     }[0m
[0m[33m-}[0m
[0m[32m+  }[0m
[0m[0m </script>[0m
[0m[32m[1m
simlane/templates/teams/request_join_club.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -5,7 +5,6 @@
[0m
[0m[0m {% block title %}[0m
[0m[0m   Request to Join {{ club.name }} - SimLane[0m
[0m[0m {% endblock title %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[0m   <div class="bg-gray-50 dark:bg-gray-900">[0m
[0m[0m     <!-- Header -->[0m
[0m[1m[34m@@ -26,7 +25,6 @@
[0m
[0m[0m         </div>[0m
[0m[0m       </div>[0m
[0m[0m     </header>[0m
[0m[33m-[0m
[0m[0m     <!-- Main Content -->[0m
[0m[0m     <main class="max-w-4xl mx-auto py-6 px-4 sm:px-6 lg:px-8">[0m
[0m[0m       <div class="bg-white dark:bg-gray-800 shadow rounded-lg">[0m
[0m[1m[34m@@ -44,44 +42,45 @@
[0m
[0m[0m             {% endif %}[0m
[0m[0m             <div class="flex-1">[0m
[0m[0m               <h2 class="text-2xl font-bold text-gray-900 dark:text-white">{{ club.name }}</h2>[0m
[0m[33m-              {% if club.description %}[0m
[0m[33m-                <p class="text-gray-600 dark:text-gray-300 mt-2">{{ club.description }}</p>[0m
[0m[33m-              {% endif %}[0m
[0m[32m+              {% if club.description %}<p class="text-gray-600 dark:text-gray-300 mt-2">{{ club.description }}</p>{% endif %}[0m
[0m[0m               {% if club.website %}[0m
[0m[0m                 <a href="{{ club.website }}"[0m
[0m[0m                    target="_blank"[0m
[0m[0m                    class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-500 mt-2">[0m
[0m[33m-                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>[0m
[0m[32m+                  <svg class="w-4 h-4 mr-1"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14">[0m
[0m[32m+                    </path>[0m
[0m[0m                   </svg>[0m
[0m[0m                   Visit Website[0m
[0m[0m                 </a>[0m
[0m[0m               {% endif %}[0m
[0m[0m             </div>[0m
[0m[0m           </div>[0m
[0m[33m-[0m
[0m[0m           <!-- Join Request Form -->[0m
[0m[0m           <div class="border-t border-gray-200 dark:border-gray-600 pt-8">[0m
[0m[0m             <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-4">Request to Join</h3>[0m
[0m[0m             <p class="text-gray-600 dark:text-gray-300 mb-6">[0m
[0m[0m               Submit a request to join {{ club.name }}. Club administrators will review your request and get back to you.[0m
[0m[0m             </p>[0m
[0m[33m-[0m
[0m[0m             <form method="post" class="space-y-6">[0m
[0m[0m               {% csrf_token %}[0m
[0m[33m-[0m
[0m[0m               <!-- Confirmation -->[0m
[0m[0m               <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-md p-4">[0m
[0m[0m                 <div class="flex">[0m
[0m[0m                   <div class="flex-shrink-0">[0m
[0m[33m-                    <svg class="h-5 w-5 text-blue-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>[0m
[0m[32m+                    <svg class="h-5 w-5 text-blue-400"[0m
[0m[32m+                         fill="none"[0m
[0m[32m+                         stroke="currentColor"[0m
[0m[32m+                         viewBox="0 0 24 24">[0m
[0m[32m+                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z">[0m
[0m[32m+                      </path>[0m
[0m[0m                     </svg>[0m
[0m[0m                   </div>[0m
[0m[0m                   <div class="ml-3">[0m
[0m[33m-                    <h4 class="text-sm font-medium text-blue-800 dark:text-blue-200">[0m
[0m[33m-                      Before you submit your request[0m
[0m[33m-                    </h4>[0m
[0m[32m+                    <h4 class="text-sm font-medium text-blue-800 dark:text-blue-200">Before you submit your request</h4>[0m
[0m[0m                     <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[0m                       <ul class="list-disc pl-5 space-y-1">[0m
[0m[0m                         <li>Make sure you're interested in joining this specific club</li>[0m
[0m[1m[34m@@ -92,7 +91,6 @@
[0m
[0m[0m                   </div>[0m
[0m[0m                 </div>[0m
[0m[0m               </div>[0m
[0m[33m-[0m
[0m[0m               <!-- Action Buttons -->[0m
[0m[0m               <div class="flex justify-end space-x-4">[0m
[0m[0m                 <a href="{% url 'teams:browse_clubs' %}"[0m
[0m
[0m[31m[1m4 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:03,  2.87it/s][0m 18% 2/11 [00:01<00:05,  1.54it/s][0m 27% 3/11 [00:01<00:03,  2.42it/s][0m 45% 5/11 [00:01<00:01,  4.62it/s][0m 55% 6/11 [00:01<00:00,  5.19it/s][0m 73% 8/11 [00:01<00:00,  6.99it/s][0m 91% 10/11 [00:01<00:00,  9.08it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/sim/cars/list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,7 +1,6 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}Cars - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-    {% include 'sim/cars/list_partial.html' %}[0m
[0m[32m+  {% include 'sim/cars/list_partial.html' %}[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/detail.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,198 +1,203 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ profile.profile_name }} - {{ profile.simulator.name }} - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <div class="flex items-center justify-between">[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ profile.profile_name }}</h1>[0m
[0m[33m-            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-                {{ profile.simulator.name }} Sim Profile[0m
[0m[33m-            </p>[0m
[0m[33m-        </div>[0m
[0m[33m-        {% if request.user.is_authenticated and profile.linked_user == request.user %}[0m
[0m[32m+      <div>[0m
[0m[32m+        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ profile.profile_name }}</h1>[0m
[0m[32m+        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{{ profile.simulator.name }} Sim Profile</p>[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if request.user.is_authenticated and profile.linked_user == request.user %}[0m
[0m[0m         <div class="flex items-center space-x-2">[0m
[0m[33m-            <form id="refresh-owned-form" method="POST"[0m
[0m[33m-                  hx-post="{% url 'sim:refresh_iracing_owned' %}"[0m
[0m[33m-                  hx-target="#refresh-status"[0m
[0m[33m-                  hx-indicator="#refresh-indicator">[0m
[0m[33m-                {% csrf_token %}[0m
[0m[33m-                <input type="hidden" name="sim_profile_id" value="{{ profile.id }}">[0m
[0m[33m-                <button type="submit"[0m
[0m[33m-                  class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[33m-                  style="min-width: 120px;">[0m
[0m[33m-                    <span>Refresh Owned</span>[0m
[0m[33m-                    <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[33m-                        <svg class="animate-spin h-4 w-4 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">[0m
[0m[33m-                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[33m-                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[33m-                        </svg>[0m
[0m[33m-                    </span>[0m
[0m[33m-                </button>[0m
[0m[33m-            </form>[0m
[0m[33m-            <div id="refresh-status"></div>[0m
[0m[33m-        </div>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+          <form id="refresh-owned-form"[0m
[0m[32m+                method="POST"[0m
[0m[32m+                hx-post="{% url 'sim:refresh_iracing_owned' %}"[0m
[0m[32m+                hx-target="#refresh-status"[0m
[0m[32m+                hx-indicator="#refresh-indicator">[0m
[0m[32m+            {% csrf_token %}[0m
[0m[32m+            <input type="hidden" name="sim_profile_id" value="{{ profile.id }}" />[0m
[0m[32m+            <button type="submit"[0m
[0m[32m+                    class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[32m+                    style="min-width: 120px">[0m
[0m[32m+              <span>Refresh Owned</span>[0m
[0m[32m+              <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[32m+                <svg class="animate-spin h-4 w-4 text-primary-600"[0m
[0m[32m+                     xmlns="http://www.w3.org/2000/svg"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[32m+                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[32m+                </svg>[0m
[0m[32m+              </span>[0m
[0m[32m+            </button>[0m
[0m[32m+          </form>[0m
[0m[32m+          <div id="refresh-status"></div>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[0m     <!-- Profile Header -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <div class="flex items-center space-x-4">[0m
[0m[33m-            {% if profile.simulator.icon %}[0m
[0m[33m-                <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-16 h-16 rounded-lg">[0m
[0m[33m-            {% else %}[0m
[0m[33m-                <div class="w-16 h-16 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[33m-                    <span class="text-lg font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                </div>[0m
[0m[32m+      <div class="flex items-center space-x-4">[0m
[0m[32m+        {% if profile.simulator.icon %}[0m
[0m[32m+          <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+               alt="{{ profile.simulator.name }}"[0m
[0m[32m+               class="w-16 h-16 rounded-lg" />[0m
[0m[32m+        {% else %}[0m
[0m[32m+          <div class="w-16 h-16 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[32m+            <span class="text-lg font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ profile.profile_name }}</h1>[0m
[0m[32m+          <p class="text-lg text-gray-600 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[32m+          {% if profile.linked_user %}[0m
[0m[32m+            <p class="text-sm text-gray-500 dark:text-gray-500 mt-1">[0m
[0m[32m+              {{ profile.linked_user.get_full_name|default:profile.linked_user.username }}[0m
[0m[32m+              {% if profile.is_verified %}[0m
[0m[32m+                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100 ml-2">[0m
[0m[32m+                  Verified[0m
[0m[32m+                </span>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          {% if profile.last_active %}[0m
[0m[32m+            <p class="text-sm text-gray-500 dark:text-gray-500">Last active: {{ profile.last_active|date:"M d, Y" }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Profile Actions -->[0m
[0m[32m+        {% if user.is_authenticated %}[0m
[0m[32m+          <div class="flex flex-col space-y-2">[0m
[0m[32m+            {% if profile.linked_user == user %}[0m
[0m[32m+              <!-- User owns this profile -->[0m
[0m[32m+              <div class="flex items-center space-x-2">[0m
[0m[32m+                <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">[0m
[0m[32m+                  <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[32m+                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  Your Profile[0m
[0m[32m+                </span>[0m
[0m[32m+              </div>[0m
[0m[32m+              <a href="{% url 'drivers:profile_unlink' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+                 class="inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[32m+                <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464m1.414 1.414L8.464 8.464">[0m
[0m[32m+                  </path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                Unlink Profile[0m
[0m[32m+              </a>[0m
[0m[32m+              <a href="{% url 'users:profile_sim_profiles' %}"[0m
[0m[32m+                 class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[32m+                <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">[0m
[0m[32m+                  </path>[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                Manage Profiles[0m
[0m[32m+              </a>[0m
[0m[32m+            {% elif can_link %}[0m
[0m[32m+              <!-- User can link this profile -->[0m
[0m[32m+              <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+                 class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[32m+                <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1">[0m
[0m[32m+                  </path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                Link to My Account[0m
[0m[32m+              </a>[0m
[0m[32m+              <p class="text-xs text-gray-500 dark:text-gray-400 text-center max-w-xs">[0m
[0m[32m+                Claim this profile as yours to access personalized features[0m
[0m[32m+              </p>[0m
[0m[32m+            {% elif profile.linked_user %}[0m
[0m[32m+              <!-- Profile is linked to someone else -->[0m
[0m[32m+              <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-100">[0m
[0m[32m+                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[32m+                  <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd">[0m
[0m[32m+                  </path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                Already Claimed[0m
[0m[32m+              </span>[0m
[0m[0m             {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ profile.profile_name }}</h1>[0m
[0m[33m-                <p class="text-lg text-gray-600 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-[0m
[0m[33m-                {% if profile.linked_user %}[0m
[0m[33m-                    <p class="text-sm text-gray-500 dark:text-gray-500 mt-1">[0m
[0m[33m-                        {{ profile.linked_user.get_full_name|default:profile.linked_user.username }}[0m
[0m[33m-                        {% if profile.is_verified %}[0m
[0m[33m-                            <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100 ml-2">[0m
[0m[33m-                                Verified[0m
[0m[33m-                            </span>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                {% if profile.last_active %}[0m
[0m[33m-                    <p class="text-sm text-gray-500 dark:text-gray-500">[0m
[0m[33m-                        Last active: {{ profile.last_active|date:"M d, Y" }}[0m
[0m[33m-                    </p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Profile Actions -->[0m
[0m[33m-            {% if user.is_authenticated %}[0m
[0m[33m-                <div class="flex flex-col space-y-2">[0m
[0m[33m-                    {% if profile.linked_user == user %}[0m
[0m[33m-                        <!-- User owns this profile -->[0m
[0m[33m-                        <div class="flex items-center space-x-2">[0m
[0m[33m-                            <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-800 dark:text-green-100">[0m
[0m[33m-                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                Your Profile[0m
[0m[33m-                            </span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <a href="{% url 'drivers:profile_unlink' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-                           class="inline-flex items-center px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[33m-                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464m1.414 1.414L8.464 8.464"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            Unlink Profile[0m
[0m[33m-                        </a>[0m
[0m[33m-                        <a href="{% url 'users:profile_sim_profiles' %}"[0m
[0m[33m-                           class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[33m-                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            Manage Profiles[0m
[0m[33m-                        </a>[0m
[0m[33m-                    {% elif can_link %}[0m
[0m[33m-                        <!-- User can link this profile -->[0m
[0m[33m-                        <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-                           class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[33m-                            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            Link to My Account[0m
[0m[33m-                        </a>[0m
[0m[33m-                        <p class="text-xs text-gray-500 dark:text-gray-400 text-center max-w-xs">[0m
[0m[33m-                            Claim this profile as yours to access personalized features[0m
[0m[33m-                        </p>[0m
[0m[33m-                    {% elif profile.linked_user %}[0m
[0m[33m-                        <!-- Profile is linked to someone else -->[0m
[0m[33m-                        <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-800 dark:text-gray-100">[0m
[0m[33m-                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            Already Claimed[0m
[0m[33m-                        </span>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            {% else %}[0m
[0m[33m-                <!-- Not authenticated -->[0m
[0m[33m-                <div class="text-center">[0m
[0m[33m-                    <a href="{% url 'account_login' %}"[0m
[0m[33m-                       class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[33m-                        Sign In to Link Profile[0m
[0m[33m-                    </a>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% else %}[0m
[0m[32m+          <!-- Not authenticated -->[0m
[0m[32m+          <div class="text-center">[0m
[0m[32m+            <a href="{% url 'account_login' %}"[0m
[0m[32m+               class="inline-flex items-center px-3 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[32m+              Sign In to Link Profile[0m
[0m[32m+            </a>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Current Ratings -->[0m
[0m[0m     {% if current_ratings %}[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Current Ratings</h2>[0m
[0m[33m-            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[33m-                {% for rating in current_ratings %}[0m
[0m[33m-                    <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">[0m
[0m[33m-                        <h3 class="font-medium text-gray-900 dark:text-white">{{ rating.rating_system.name }}</h3>[0m
[0m[33m-                        <p class="text-2xl font-bold text-primary-600 dark:text-primary-400">{{ rating.value|floatformat:0 }}</p>[0m
[0m[33m-                        {% if rating.discipline %}[0m
[0m[33m-                            <p class="text-sm text-gray-500 dark:text-gray-400">{{ rating.get_discipline_display }}</p>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                        <p class="text-xs text-gray-400 dark:text-gray-500">{{ rating.recorded_at|date:"M d, Y" }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endfor %}[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Current Ratings</h2>[0m
[0m[32m+        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[32m+          {% for rating in current_ratings %}[0m
[0m[32m+            <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">[0m
[0m[32m+              <h3 class="font-medium text-gray-900 dark:text-white">{{ rating.rating_system.name }}</h3>[0m
[0m[32m+              <p class="text-2xl font-bold text-primary-600 dark:text-primary-400">{{ rating.value|floatformat:0 }}</p>[0m
[0m[32m+              {% if rating.discipline %}[0m
[0m[32m+                <p class="text-sm text-gray-500 dark:text-gray-400">{{ rating.get_discipline_display }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              <p class="text-xs text-gray-400 dark:text-gray-500">{{ rating.recorded_at|date:"M d, Y" }}</p>[0m
[0m[0m             </div>[0m
[0m[33m-        </div>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-[0m
[0m[0m     <!-- Recent Lap Times -->[0m
[0m[0m     {% if recent_lap_times %}[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Recent Lap Times</h2>[0m
[0m[33m-            <div class="overflow-x-auto">[0m
[0m[33m-                <table class="min-w-full table-auto">[0m
[0m[33m-                    <thead>[0m
[0m[33m-                        <tr class="border-b border-gray-200 dark:border-gray-700">[0m
[0m[33m-                            <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Track</th>[0m
[0m[33m-                            <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Lap Time</th>[0m
[0m[33m-                            <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Date</th>[0m
[0m[33m-                        </tr>[0m
[0m[33m-                    </thead>[0m
[0m[33m-                    <tbody>[0m
[0m[33m-                        {% for lap_time in recent_lap_times %}[0m
[0m[33m-                            <tr class="border-b border-gray-100 dark:border-gray-700">[0m
[0m[33m-                                <td class="py-3 text-sm text-gray-900 dark:text-white">[0m
[0m[33m-                                    {{ lap_time.sim_layout.sim_track.track_model.name }}[0m
[0m[33m-                                    <br>[0m
[0m[33m-                                    <span class="text-xs text-gray-500 dark:text-gray-400">{{ lap_time.sim_layout.name }}</span>[0m
[0m[33m-                                </td>[0m
[0m[33m-                                <td class="py-3 text-sm font-mono text-gray-900 dark:text-white">[0m
[0m[33m-                                    {% if lap_time.lap_time_ms %}[0m
[0m[33m-                                        {{ lap_time.lap_time_ms|floatformat:3 }}ms[0m
[0m[33m-                                    {% else %}[0m
[0m[33m-                                        -[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                </td>[0m
[0m[33m-                                <td class="py-3 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                                    {{ lap_time.recorded_at|date:"M d, Y" }}[0m
[0m[33m-                                </td>[0m
[0m[33m-                            </tr>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </tbody>[0m
[0m[33m-                </table>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Recent Lap Times</h2>[0m
[0m[32m+        <div class="overflow-x-auto">[0m
[0m[32m+          <table class="min-w-full table-auto">[0m
[0m[32m+            <thead>[0m
[0m[32m+              <tr class="border-b border-gray-200 dark:border-gray-700">[0m
[0m[32m+                <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Track</th>[0m
[0m[32m+                <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Lap Time</th>[0m
[0m[32m+                <th class="text-left py-2 text-sm font-medium text-gray-500 dark:text-gray-400">Date</th>[0m
[0m[32m+              </tr>[0m
[0m[32m+            </thead>[0m
[0m[32m+            <tbody>[0m
[0m[32m+              {% for lap_time in recent_lap_times %}[0m
[0m[32m+                <tr class="border-b border-gray-100 dark:border-gray-700">[0m
[0m[32m+                  <td class="py-3 text-sm text-gray-900 dark:text-white">[0m
[0m[32m+                    {{ lap_time.sim_layout.sim_track.track_model.name }}[0m
[0m[32m+                    <br />[0m
[0m[32m+                    <span class="text-xs text-gray-500 dark:text-gray-400">{{ lap_time.sim_layout.name }}</span>[0m
[0m[32m+                  </td>[0m
[0m[32m+                  <td class="py-3 text-sm font-mono text-gray-900 dark:text-white">[0m
[0m[32m+                    {% if lap_time.lap_time_ms %}[0m
[0m[32m+                      {{ lap_time.lap_time_ms|floatformat:3 }}ms[0m
[0m[32m+                    {% else %}[0m
[0m[32m+                      -[0m
[0m[32m+                    {% endif %}[0m
[0m[32m+                  </td>[0m
[0m[32m+                  <td class="py-3 text-sm text-gray-500 dark:text-gray-400">{{ lap_time.recorded_at|date:"M d, Y" }}</td>[0m
[0m[32m+                </tr>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </tbody>[0m
[0m[32m+          </table>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-[0m
[0m[0m     <!-- Back to Profiles -->[0m
[0m[0m     <div class="text-center">[0m
[0m[33m-        <a href="{% url 'drivers:profiles_list' %}" class="text-primary-600 dark:text-primary-400 hover:text-primary-500">[0m
[0m[33m-            ← Back to all drivers[0m
[0m[33m-        </a>[0m
[0m[32m+      <a href="{% url 'drivers:profiles_list' %}"[0m
[0m[32m+         class="text-primary-600 dark:text-primary-400 hover:text-primary-500">← Back to all drivers</a>[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/link_confirm.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -7,112 +7,122 @@
[0m
[0m[0m     Unlink Profile - SimLane[0m
[0m[0m   {% endif %}[0m
[0m[0m {% endblock title %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="max-w-md mx-auto space-y-6">[0m
[0m[32m+  <div class="max-w-md mx-auto space-y-6">[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="text-center">[0m
[0m[33m-        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">[0m
[0m[33m-            {% if action == 'link' %}[0m
[0m[33m-                Link Profile[0m
[0m[33m-            {% else %}[0m
[0m[33m-                Unlink Profile[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </h1>[0m
[0m[33m-        <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">[0m
[0m[33m-            {% if action == 'link' %}[0m
[0m[33m-                Confirm linking this profile to your account[0m
[0m[33m-            {% else %}[0m
[0m[33m-                Confirm unlinking this profile from your account[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </p>[0m
[0m[32m+      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">[0m
[0m[32m+        {% if action == 'link' %}[0m
[0m[32m+          Link Profile[0m
[0m[32m+        {% else %}[0m
[0m[32m+          Unlink Profile[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </h1>[0m
[0m[32m+      <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">[0m
[0m[32m+        {% if action == 'link' %}[0m
[0m[32m+          Confirm linking this profile to your account[0m
[0m[32m+        {% else %}[0m
[0m[32m+          Confirm unlinking this profile from your account[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </p>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Profile Card -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <div class="flex items-center space-x-4">[0m
[0m[33m-            {% if profile.simulator.icon %}[0m
[0m[33m-                <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-12 h-12 rounded-lg">[0m
[0m[33m-            {% else %}[0m
[0m[33m-                <div class="w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[33m-                    <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[33m-                <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-                {% if profile.sim_api_id %}[0m
[0m[33m-                    <p class="text-xs text-gray-400 dark:text-gray-500">ID: {{ profile.sim_api_id }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="flex items-center space-x-4">[0m
[0m[32m+        {% if profile.simulator.icon %}[0m
[0m[32m+          <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+               alt="{{ profile.simulator.name }}"[0m
[0m[32m+               class="w-12 h-12 rounded-lg" />[0m
[0m[32m+        {% else %}[0m
[0m[32m+          <div class="w-12 h-12 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[32m+            <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[32m+          <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[32m+          {% if profile.sim_api_id %}[0m
[0m[32m+            <p class="text-xs text-gray-400 dark:text-gray-500">ID: {{ profile.sim_api_id }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[0m         </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Confirmation Form -->[0m
[0m[0m     <form method="post" class="space-y-4">[0m
[0m[33m-        {% csrf_token %}[0m
[0m[33m-[0m
[0m[33m-        {% if action == 'link' %}[0m
[0m[33m-            <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">[0m
[0m[33m-                <div class="flex">[0m
[0m[33m-                    <svg class="w-5 h-5 text-blue-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    <div class="ml-3">[0m
[0m[33m-                        <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">What happens when you link a profile?</h3>[0m
[0m[33m-                        <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[33m-                            <ul class="list-disc list-inside space-y-1">[0m
[0m[33m-                                <li>You can access personalized dashboard features</li>[0m
[0m[33m-                                <li>Your statistics and achievements will be tracked</li>[0m
[0m[33m-                                <li>You can join events using this profile</li>[0m
[0m[33m-                                <li>The profile will be marked as "unverified" until you complete verification</li>[0m
[0m[33m-                            </ul>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[32m+      {% csrf_token %}[0m
[0m[32m+      {% if action == 'link' %}[0m
[0m[32m+        <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">[0m
[0m[32m+          <div class="flex">[0m
[0m[32m+            <svg class="w-5 h-5 text-blue-400 mt-0.5"[0m
[0m[32m+                 fill="currentColor"[0m
[0m[32m+                 viewBox="0 0 20 20">[0m
[0m[32m+              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            <div class="ml-3">[0m
[0m[32m+              <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">What happens when you link a profile?</h3>[0m
[0m[32m+              <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[32m+                <ul class="list-disc list-inside space-y-1">[0m
[0m[32m+                  <li>You can access personalized dashboard features</li>[0m
[0m[32m+                  <li>Your statistics and achievements will be tracked</li>[0m
[0m[32m+                  <li>You can join events using this profile</li>[0m
[0m[32m+                  <li>The profile will be marked as "unverified" until you complete verification</li>[0m
[0m[32m+                </ul>[0m
[0m[32m+              </div>[0m
[0m[0m             </div>[0m
[0m[33m-        {% else %}[0m
[0m[33m-            <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4">[0m
[0m[33m-                <div class="flex">[0m
[0m[33m-                    <svg class="w-5 h-5 text-yellow-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    <div class="ml-3">[0m
[0m[33m-                        <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-200">What happens when you unlink a profile?</h3>[0m
[0m[33m-                        <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">[0m
[0m[33m-                            <ul class="list-disc list-inside space-y-1">[0m
[0m[33m-                                <li>You'll lose access to personalized features for this profile</li>[0m
[0m[33m-                                <li>The profile will become available for other users to link</li>[0m
[0m[33m-                                <li>Your dashboard data for this profile will be hidden</li>[0m
[0m[33m-                                <li>You won't be able to use this profile for events</li>[0m
[0m[33m-                            </ul>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% else %}[0m
[0m[32m+        <div class="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-4">[0m
[0m[32m+          <div class="flex">[0m
[0m[32m+            <svg class="w-5 h-5 text-yellow-400 mt-0.5"[0m
[0m[32m+                 fill="currentColor"[0m
[0m[32m+                 viewBox="0 0 20 20">[0m
[0m[32m+              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            <div class="ml-3">[0m
[0m[32m+              <h3 class="text-sm font-medium text-yellow-800 dark:text-yellow-200">What happens when you unlink a profile?</h3>[0m
[0m[32m+              <div class="mt-2 text-sm text-yellow-700 dark:text-yellow-300">[0m
[0m[32m+                <ul class="list-disc list-inside space-y-1">[0m
[0m[32m+                  <li>You'll lose access to personalized features for this profile</li>[0m
[0m[32m+                  <li>The profile will become available for other users to link</li>[0m
[0m[32m+                  <li>Your dashboard data for this profile will be hidden</li>[0m
[0m[32m+                  <li>You won't be able to use this profile for events</li>[0m
[0m[32m+                </ul>[0m
[0m[32m+              </div>[0m
[0m[0m             </div>[0m
[0m[33m-        {% endif %}[0m
[0m[33m-[0m
[0m[33m-        <div class="flex space-x-3">[0m
[0m[33m-            <button type="submit"[0m
[0m[33m-                    class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white {% if action == 'link' %}bg-primary-600 hover:bg-primary-700{% else %}bg-red-600 hover:bg-red-700{% endif %} focus:outline-none focus:ring-2 focus:ring-offset-2 {% if action == 'link' %}focus:ring-primary-500{% else %}focus:ring-red-500{% endif %}">[0m
[0m[33m-                {% if action == 'link' %}[0m
[0m[33m-                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    Confirm Link[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464m1.414 1.414L8.464 8.464"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    Confirm Unlink[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </button>[0m
[0m[33m-            <a href="{% url 'drivers:profile_detail' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-               class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">[0m
[0m[33m-                Cancel[0m
[0m[33m-            </a>[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      <div class="flex space-x-3">[0m
[0m[32m+        <button type="submit"[0m
[0m[32m+                class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white {% if action == 'link' %}bg-primary-600 hover:bg-primary-700{% else %}bg-red-600 hover:bg-red-700{% endif %} focus:outline-none focus:ring-2 focus:ring-offset-2 {% if action == 'link' %}focus:ring-primary-500{% else %}focus:ring-red-500{% endif %}">[0m
[0m[32m+          {% if action == 'link' %}[0m
[0m[32m+            <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            Confirm Link[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L8.464 8.464m1.414 1.414L8.464 8.464">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            Confirm Unlink[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </button>[0m
[0m[32m+        <a href="{% url 'drivers:profile_detail' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+           class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">[0m
[0m[32m+          Cancel[0m
[0m[32m+        </a>[0m
[0m[32m+      </div>[0m
[0m[0m     </form>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock content %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/simulator_list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,88 +1,81 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ simulator.name }} Drivers - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="flex items-center space-x-4">[0m
[0m[33m-        {% if simulator.icon %}[0m
[0m[33m-            <img src="{{ simulator.icon.url }}" alt="{{ simulator.name }}" class="w-12 h-12 rounded-lg">[0m
[0m[33m-        {% endif %}[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ simulator.name }} Drivers</h1>[0m
[0m[33m-            <p class="text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                Discover {{ simulator.name }} drivers and their achievements[0m
[0m[33m-            </p>[0m
[0m[33m-        </div>[0m
[0m[32m+      {% if simulator.icon %}[0m
[0m[32m+        <img src="{{ simulator.icon.url }}"[0m
[0m[32m+             alt="{{ simulator.name }}"[0m
[0m[32m+             class="w-12 h-12 rounded-lg" />[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      <div>[0m
[0m[32m+        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">{{ simulator.name }} Drivers</h1>[0m
[0m[32m+        <p class="text-sm text-gray-500 dark:text-gray-400">Discover {{ simulator.name }} drivers and their achievements</p>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Profiles Grid -->[0m
[0m[0m     <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">[0m
[0m[33m-        {% for profile in page_obj %}[0m
[0m[33m-            <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[33m-                <div class="flex items-center space-x-3 mb-3">[0m
[0m[33m-                    {% if simulator.icon %}[0m
[0m[33m-                        <img src="{{ simulator.icon.url }}" alt="{{ simulator.name }}" class="w-8 h-8 rounded">[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                            <span class="text-sm font-bold text-white">{{ simulator.name|first }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                    <div class="flex-1">[0m
[0m[33m-                        <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[33m-                        <p class="text-sm text-gray-500 dark:text-gray-400">{{ simulator.name }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                {% if profile.linked_user %}[0m
[0m[33m-                    <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[33m-                        {{ profile.linked_user.get_full_name|default:profile.linked_user.username }}[0m
[0m[33m-                    </p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <a href="{{ profile.get_absolute_url }}" class="btn-primary btn-sm w-full">[0m
[0m[33m-                    View Profile[0m
[0m[33m-                </a>[0m
[0m[32m+      {% for profile in page_obj %}[0m
[0m[32m+        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[32m+          <div class="flex items-center space-x-3 mb-3">[0m
[0m[32m+            {% if simulator.icon %}[0m
[0m[32m+              <img src="{{ simulator.icon.url }}"[0m
[0m[32m+                   alt="{{ simulator.name }}"[0m
[0m[32m+                   class="w-8 h-8 rounded" />[0m
[0m[32m+            {% else %}[0m
[0m[32m+              <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+                <span class="text-sm font-bold text-white">{{ simulator.name|first }}</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <div class="flex-1">[0m
[0m[32m+              <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[32m+              <p class="text-sm text-gray-500 dark:text-gray-400">{{ simulator.name }}</p>[0m
[0m[0m             </div>[0m
[0m[33m-        {% empty %}[0m
[0m[33m-            <div class="col-span-full text-center py-12">[0m
[0m[33m-                <p class="text-gray-500 dark:text-gray-400">No {{ simulator.name }} drivers found.</p>[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[32m+          </div>[0m
[0m[32m+          {% if profile.linked_user %}[0m
[0m[32m+            <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+              {{ profile.linked_user.get_full_name|default:profile.linked_user.username }}[0m
[0m[32m+            </p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <a href="{{ profile.get_absolute_url }}"[0m
[0m[32m+             class="btn-primary btn-sm w-full">View Profile</a>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% empty %}[0m
[0m[32m+        <div class="col-span-full text-center py-12">[0m
[0m[32m+          <p class="text-gray-500 dark:text-gray-400">No {{ simulator.name }} drivers found.</p>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endfor %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Pagination -->[0m
[0m[0m     {% if page_obj.has_other_pages %}[0m
[0m[33m-        <div class="flex justify-center">[0m
[0m[33m-            <nav class="flex space-x-2">[0m
[0m[33m-                {% if page_obj.has_previous %}[0m
[0m[33m-                    <a href="?page={{ page_obj.previous_page_number }}"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600">[0m
[0m[33m-                        Previous[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[33m-                    Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[33m-                </span>[0m
[0m[33m-[0m
[0m[33m-                {% if page_obj.has_next %}[0m
[0m[33m-                    <a href="?page={{ page_obj.next_page_number }}"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600">[0m
[0m[33m-                        Next[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </nav>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="flex justify-center">[0m
[0m[32m+        <nav class="flex space-x-2">[0m
[0m[32m+          {% if page_obj.has_previous %}[0m
[0m[32m+            <a href="?page={{ page_obj.previous_page_number }}"[0m
[0m[32m+               class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600">[0m
[0m[32m+              Previous[0m
[0m[32m+            </a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[32m+            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[32m+          </span>[0m
[0m[32m+          {% if page_obj.has_next %}[0m
[0m[32m+            <a href="?page={{ page_obj.next_page_number }}"[0m
[0m[32m+               class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600">[0m
[0m[32m+              Next[0m
[0m[32m+            </a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </nav>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-[0m
[0m[0m     <!-- Back to All Profiles -->[0m
[0m[0m     <div class="text-center">[0m
[0m[33m-        <a href="{% url 'drivers:profiles_list' %}" class="text-primary-600 dark:text-primary-400 hover:text-primary-500">[0m
[0m[33m-            ← Back to all drivers[0m
[0m[33m-        </a>[0m
[0m[32m+      <a href="{% url 'drivers:profiles_list' %}"[0m
[0m[32m+         class="text-primary-600 dark:text-primary-400 hover:text-primary-500">← Back to all drivers</a>[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/socialaccount/snippets/provider_list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -9,9 +9,7 @@
[0m
[0m[0m           {% provider_login_url provider openid=brand.openid_url process=process as href %}[0m
[0m[0m           <a class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200"[0m
[0m[0m              title="{{ brand.name }}"[0m
[0m[33m-             href="{{ href }}">[0m
[0m[33m-            {{ brand.name }}[0m
[0m[33m-          </a>[0m
[0m[32m+             href="{{ href }}">{{ brand.name }}</a>[0m
[0m[0m         {% endfor %}[0m
[0m[0m       {% else %}[0m
[0m[0m         {% provider_login_url provider process=process scope=scope auth_params=auth_params as href %}[0m
[0m[1m[34m@@ -20,7 +18,7 @@
[0m
[0m[0m              title="Continue with {{ provider.name }}"[0m
[0m[0m              href="{{ href }}">[0m
[0m[0m             <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-              <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z"/>[0m
[0m[32m+              <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515a.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0a12.64 12.64 0 0 0-.617-1.25a.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057a19.9 19.9 0 0 0 5.993 3.03a.078.078 0 0 0 .084-.028a14.09 14.09 0 0 0 1.226-1.994a.076.076 0 0 0-.041-.106a13.107 13.107 0 0 1-1.872-.892a.077.077 0 0 1-.008-.128a10.2 10.2 0 0 0 .372-.292a.074.074 0 0 1 .077-.01c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127a12.299 12.299 0 0 1-1.873.892a.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028a19.839 19.839 0 0 0 6.002-3.03a.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.956-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419c0-1.333.955-2.419 2.157-2.419c1.21 0 2.176 1.096 2.157 2.42c0 1.333-.946 2.418-2.157 2.418z" />[0m
[0m[0m             </svg>[0m
[0m[0m             Continue with {{ provider.name }}[0m
[0m[0m           </a>[0m
[0m[1m[34m@@ -29,16 +27,14 @@
[0m
[0m[0m              title="Continue with {{ provider.name }}"[0m
[0m[0m              href="{{ href }}">[0m
[0m[0m             <svg class="w-5 h-5 mr-2" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-              <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM8.5 9a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zm7 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zm-.82 6.61A5.5 5.5 0 0 1 12 17a5.5 5.5 0 0 1-2.68-1.39.75.75 0 0 1 .8-1.22A4 4 0 0 0 12 15.5a4 4 0 0 0 1.88-1.11.75.75 0 0 1 .8 1.22z"/>[0m
[0m[32m+              <path d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2zM8.5 9a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zm7 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3zm-.82 6.61A5.5 5.5 0 0 1 12 17a5.5 5.5 0 0 1-2.68-1.39.75.75 0 0 1 .8-1.22A4 4 0 0 0 12 15.5a4 4 0 0 0 1.88-1.11.75.75 0 0 1 .8 1.22z" />[0m
[0m[0m             </svg>[0m
[0m[0m             Continue with {{ provider.name }}[0m
[0m[0m           </a>[0m
[0m[0m         {% else %}[0m
[0m[0m           <a class="w-full inline-flex justify-center py-2 px-4 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm bg-white dark:bg-gray-700 text-sm font-medium text-gray-500 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-600 transition-colors duration-200"[0m
[0m[0m              title="Continue with {{ provider.name }}"[0m
[0m[33m-             href="{{ href }}">[0m
[0m[33m-            Continue with {{ provider.name }}[0m
[0m[33m-          </a>[0m
[0m[32m+             href="{{ href }}">Continue with {{ provider.name }}</a>[0m
[0m[0m         {% endif %}[0m
[0m[0m       {% endif %}[0m
[0m[0m     {% endfor %}[0m
[0m
[0m[31m[1m5 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:01<00:13,  1.39s/it][0m 36% 4/11 [00:01<00:02,  3.27it/s][0m 73% 8/11 [00:01<00:00,  6.91it/s][0m 91% 10/11 [00:01<00:00,  7.42it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/sim/events/list_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -2,116 +2,121 @@
[0m
[0m[0m [0m
[0m[0m <!-- Header -->[0m
[0m[0m <div class="mb-8">[0m
[0m[33m-    <div class="flex items-center justify-between">[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">[0m
[0m[33m-                {% if is_upcoming_view %}Upcoming Events{% else %}Events{% endif %}[0m
[0m[33m-            </h1>[0m
[0m[33m-            <p class="text-gray-600 dark:text-gray-400">[0m
[0m[33m-                {% if is_upcoming_view %}[0m
[0m[33m-                    Discover upcoming sim racing events from official series, clubs, and the community[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    Discover sim racing events from official series, clubs, and the community[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </p>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- View Toggle -->[0m
[0m[33m-        <div class="flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1">[0m
[0m[33m-            <a href="{% url 'events:events_list' %}"[0m
[0m[33m-               class="px-3 py-1.5 text-sm font-medium rounded-md {% if not is_upcoming_view %}bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm{% else %}text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors{% endif %}">[0m
[0m[33m-                All Events[0m
[0m[33m-            </a>[0m
[0m[33m-            <a href="{% url 'events:upcoming_events_list' %}"[0m
[0m[33m-               class="px-3 py-1.5 text-sm font-medium rounded-md {% if is_upcoming_view %}bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm{% else %}text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors{% endif %}">[0m
[0m[33m-                Upcoming Only[0m
[0m[33m-            </a>[0m
[0m[33m-        </div>[0m
[0m[32m+  <div class="flex items-center justify-between">[0m
[0m[32m+    <div>[0m
[0m[32m+      <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">[0m
[0m[32m+        {% if is_upcoming_view %}[0m
[0m[32m+          Upcoming Events[0m
[0m[32m+        {% else %}[0m
[0m[32m+          Events[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </h1>[0m
[0m[32m+      <p class="text-gray-600 dark:text-gray-400">[0m
[0m[32m+        {% if is_upcoming_view %}[0m
[0m[32m+          Discover upcoming sim racing events from official series, clubs, and the community[0m
[0m[32m+        {% else %}[0m
[0m[32m+          Discover sim racing events from official series, clubs, and the community[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </p>[0m
[0m[0m     </div>[0m
[0m[32m+    <!-- View Toggle -->[0m
[0m[32m+    <div class="flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1">[0m
[0m[32m+      <a href="{% url 'events:events_list' %}"[0m
[0m[32m+         class="px-3 py-1.5 text-sm font-medium rounded-md {% if not is_upcoming_view %}bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm{% else %}text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors{% endif %}">[0m
[0m[32m+        All Events[0m
[0m[32m+      </a>[0m
[0m[32m+      <a href="{% url 'events:upcoming_events_list' %}"[0m
[0m[32m+         class="px-3 py-1.5 text-sm font-medium rounded-md {% if is_upcoming_view %}bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm{% else %}text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-white transition-colors{% endif %}">[0m
[0m[32m+        Upcoming Only[0m
[0m[32m+      </a>[0m
[0m[32m+    </div>[0m
[0m[32m+  </div>[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[0m <!-- Search and Filters -->[0m
[0m[0m <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 mb-8">[0m
[0m[33m-    <form method="get"[0m
[0m[33m-          hx-get="{% if is_upcoming_view %}{% url 'events:upcoming_events_list' %}{% else %}{% url 'events:events_list' %}{% endif %}"[0m
[0m[33m-          hx-target="#events-container"[0m
[0m[33m-          hx-push-url="true"[0m
[0m[33m-          hx-indicator="#loading-indicator"[0m
[0m[33m-          hx-trigger="change"[0m
[0m[33m-          class="space-y-4">[0m
[0m[33m-        <!-- Search Bar -->[0m
[0m[33m-        <div class="flex gap-4 mb-4">[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <input type="text"[0m
[0m[33m-                       name="q"[0m
[0m[33m-                       id="events-search-input"[0m
[0m[33m-                       placeholder="{% if is_upcoming_view %}Search upcoming events...{% else %}Search events...{% endif %}"[0m
[0m[33m-                       value="{{ current_filters.q|default:'' }}"[0m
[0m[33m-                       hx-get="{% if is_upcoming_view %}{% url 'events:upcoming_events_list' %}{% else %}{% url 'events:events_list' %}{% endif %}"[0m
[0m[33m-                       hx-target="#events-container"[0m
[0m[33m-                       hx-push-url="true"[0m
[0m[33m-                       hx-indicator="#loading-indicator"[0m
[0m[33m-                       hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[33m-                       class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-        <!-- Filters Grid -->[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">[0m
[0m[33m-            <!-- Simulator Filter -->[0m
[0m[33m-            <div>[0m
[0m[33m-                <label for="simulator" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Simulator</label>[0m
[0m[33m-                <select name="simulator" id="simulator"[0m
[0m[33m-                        class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[33m-                    <option value="">All Simulators</option>[0m
[0m[33m-                    {% for simulator in simulators %}[0m
[0m[33m-                        <option value="{{ simulator.slug }}" {% if current_filters.simulator == simulator.slug %}selected{% endif %}>[0m
[0m[33m-                            {{ simulator.name }}[0m
[0m[33m-                        </option>[0m
[0m[33m-                    {% endfor %}[0m
[0m[33m-                </select>[0m
[0m[33m-            </div>[0m
[0m[33m-            <!-- Event Source Filter -->[0m
[0m[33m-            <div>[0m
[0m[33m-                <label for="source" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Event Type</label>[0m
[0m[33m-                <select name="source" id="source"[0m
[0m[33m-                        class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[33m-                    <option value="">All Types</option>[0m
[0m[33m-                    {% for source_key, source_label in event_sources %}[0m
[0m[33m-                        <option value="{{ source_key }}" {% if current_filters.source == source_key %}selected{% endif %}>[0m
[0m[33m-                            {{ source_label }}[0m
[0m[33m-                        </option>[0m
[0m[33m-                    {% endfor %}[0m
[0m[33m-                </select>[0m
[0m[33m-            </div>[0m
[0m[33m-            <!-- Status Filter -->[0m
[0m[33m-            <div>[0m
[0m[33m-                <label for="status" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Status</label>[0m
[0m[33m-                <select name="status" id="status"[0m
[0m[33m-                        class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[33m-                    <option value="">All Statuses</option>[0m
[0m[33m-                    {% for status_key, status_label in event_statuses %}[0m
[0m[33m-                        <option value="{{ status_key }}" {% if current_filters.status == status_key %}selected{% endif %}>[0m
[0m[33m-                            {{ status_label }}[0m
[0m[33m-                        </option>[0m
[0m[33m-                    {% endfor %}[0m
[0m[33m-                </select>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-    </form>[0m
[0m[32m+  <form method="get"[0m
[0m[32m+        hx-get="{% if is_upcoming_view %}{% url 'events:upcoming_events_list' %}{% else %}{% url 'events:events_list' %}{% endif %}"[0m
[0m[32m+        hx-target="#events-container"[0m
[0m[32m+        hx-push-url="true"[0m
[0m[32m+        hx-indicator="#loading-indicator"[0m
[0m[32m+        hx-trigger="change"[0m
[0m[32m+        class="space-y-4">[0m
[0m[32m+    <!-- Search Bar -->[0m
[0m[32m+    <div class="flex gap-4 mb-4">[0m
[0m[32m+      <div class="flex-1">[0m
[0m[32m+        <input type="text"[0m
[0m[32m+               name="q"[0m
[0m[32m+               id="events-search-input"[0m
[0m[32m+               placeholder="{% if is_upcoming_view %}Search upcoming events...{% else %}Search events...{% endif %}"[0m
[0m[32m+               value="{{ current_filters.q|default:'' }}"[0m
[0m[32m+               hx-get="{% if is_upcoming_view %}{% url 'events:upcoming_events_list' %}{% else %}{% url 'events:events_list' %}{% endif %}"[0m
[0m[32m+               hx-target="#events-container"[0m
[0m[32m+               hx-push-url="true"[0m
[0m[32m+               hx-indicator="#loading-indicator"[0m
[0m[32m+               hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[32m+               class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white" />[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+    <!-- Filters Grid -->[0m
[0m[32m+    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">[0m
[0m[32m+      <!-- Simulator Filter -->[0m
[0m[32m+      <div>[0m
[0m[32m+        <label for="simulator"[0m
[0m[32m+               class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Simulator</label>[0m
[0m[32m+        <select name="simulator"[0m
[0m[32m+                id="simulator"[0m
[0m[32m+                class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[32m+          <option value="">All Simulators</option>[0m
[0m[32m+          {% for simulator in simulators %}[0m
[0m[32m+            <option value="{{ simulator.slug }}"[0m
[0m[32m+                    {% if current_filters.simulator == simulator.slug %}selected{% endif %}>[0m
[0m[32m+              {{ simulator.name }}[0m
[0m[32m+            </option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Event Source Filter -->[0m
[0m[32m+      <div>[0m
[0m[32m+        <label for="source"[0m
[0m[32m+               class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Event Type</label>[0m
[0m[32m+        <select name="source"[0m
[0m[32m+                id="source"[0m
[0m[32m+                class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[32m+          <option value="">All Types</option>[0m
[0m[32m+          {% for source_key, source_label in event_sources %}[0m
[0m[32m+            <option value="{{ source_key }}"[0m
[0m[32m+                    {% if current_filters.source == source_key %}selected{% endif %}>{{ source_label }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Status Filter -->[0m
[0m[32m+      <div>[0m
[0m[32m+        <label for="status"[0m
[0m[32m+               class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Status</label>[0m
[0m[32m+        <select name="status"[0m
[0m[32m+                id="status"[0m
[0m[32m+                class="w-full border border-gray-300 dark:border-gray-600 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white">[0m
[0m[32m+          <option value="">All Statuses</option>[0m
[0m[32m+          {% for status_key, status_label in event_statuses %}[0m
[0m[32m+            <option value="{{ status_key }}"[0m
[0m[32m+                    {% if current_filters.status == status_key %}selected{% endif %}>{{ status_label }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+  </form>[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[0m <!-- Events Container with HTMX target -->[0m
[0m[0m {% include 'sim/events/events_list_partial.html' %}[0m
[0m[33m-[0m
[0m[0m <!-- Page-specific JavaScript for events search validation -->[0m
[0m[0m <script>[0m
[0m[33m-document.body.addEventListener('htmx:beforeRequest', function(evt) {[0m
[0m[32m+  document.body.addEventListener('htmx:beforeRequest', function(evt) {[0m
[0m[0m     var input = document.getElementById('events-search-input');[0m
[0m[0m     if (input && evt.target === input) {[0m
[0m[33m-        var val = input.value.trim();[0m
[0m[33m-        if (val.length > 0 && val.length < 4) {[0m
[0m[33m-            evt.preventDefault();[0m
[0m[33m-        }[0m
[0m[32m+      var val = input.value.trim();[0m
[0m[32m+      if (val.length > 0 && val.length < 4) {[0m
[0m[32m+        evt.preventDefault();[0m
[0m[32m+      }[0m
[0m[0m     }[0m
[0m[33m-});[0m
[0m[32m+  });[0m
[0m[0m </script>[0m
[0m[32m[1m
simlane/templates/sim/profiles/link_confirm_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,77 +1,76 @@
[0m
[0m[33m-<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50" id="modal-overlay">[0m
[0m[33m-    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">[0m
[0m[33m-        <div class="mt-3">[0m
[0m[33m-            <!-- Header -->[0m
[0m[33m-            <div class="text-center">[0m
[0m[33m-                <h3 class="text-lg font-medium text-gray-900 dark:text-white">[0m
[0m[33m-                    {% if action == 'link' %}[0m
[0m[33m-                        Link Profile[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        Unlink Profile[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </h3>[0m
[0m[33m-                <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">[0m
[0m[33m-                    {% if action == 'link' %}[0m
[0m[33m-                        Confirm linking this profile to your account[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        Confirm unlinking this profile from your account[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </p>[0m
[0m[32m+<div class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50"[0m
[0m[32m+     id="modal-overlay">[0m
[0m[32m+  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white dark:bg-gray-800">[0m
[0m[32m+    <div class="mt-3">[0m
[0m[32m+      <!-- Header -->[0m
[0m[32m+      <div class="text-center">[0m
[0m[32m+        <h3 class="text-lg font-medium text-gray-900 dark:text-white">[0m
[0m[32m+          {% if action == 'link' %}[0m
[0m[32m+            Link Profile[0m
[0m[32m+          {% else %}[0m
[0m[32m+            Unlink Profile[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </h3>[0m
[0m[32m+        <p class="text-sm text-gray-500 dark:text-gray-400 mt-2">[0m
[0m[32m+          {% if action == 'link' %}[0m
[0m[32m+            Confirm linking this profile to your account[0m
[0m[32m+          {% else %}[0m
[0m[32m+            Confirm unlinking this profile from your account[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </p>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Profile Card -->[0m
[0m[32m+      <div class="mt-4 bg-gray-50 dark:bg-gray-700 rounded-lg p-4">[0m
[0m[32m+        <div class="flex items-center space-x-3">[0m
[0m[32m+          {% if profile.simulator.icon %}[0m
[0m[32m+            <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+                 alt="{{ profile.simulator.name }}"[0m
[0m[32m+                 class="w-10 h-10 rounded-lg" />[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <div class="w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[32m+              <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Profile Card -->[0m
[0m[33m-            <div class="mt-4 bg-gray-50 dark:bg-gray-700 rounded-lg p-4">[0m
[0m[33m-                <div class="flex items-center space-x-3">[0m
[0m[33m-                    {% if profile.simulator.icon %}[0m
[0m[33m-                        <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-10 h-10 rounded-lg">[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        <div class="w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center">[0m
[0m[33m-                            <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    <div class="flex-1">[0m
[0m[33m-                        <h4 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h4>[0m
[0m[33m-                        <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Warning/Info -->[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <div class="flex-1">[0m
[0m[32m+            <h4 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h4>[0m
[0m[32m+            <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Warning/Info -->[0m
[0m[32m+      {% if action == 'link' %}[0m
[0m[32m+        <div class="mt-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">[0m
[0m[32m+          <p class="text-sm text-blue-700 dark:text-blue-300">[0m
[0m[32m+            This will link the profile to your account. You'll be able to access personalized features and verify ownership later.[0m
[0m[32m+          </p>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% else %}[0m
[0m[32m+        <div class="mt-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3">[0m
[0m[32m+          <p class="text-sm text-yellow-700 dark:text-yellow-300">[0m
[0m[32m+            This will unlink the profile from your account. You'll lose access to personalized features for this profile.[0m
[0m[32m+          </p>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      <!-- Form -->[0m
[0m[32m+      <form method="post" class="mt-4">[0m
[0m[32m+        {% csrf_token %}[0m
[0m[32m+        <div class="flex space-x-3">[0m
[0m[32m+          <button type="submit"[0m
[0m[32m+                  class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white {% if action == 'link' %}bg-primary-600 hover:bg-primary-700{% else %}bg-red-600 hover:bg-red-700{% endif %} focus:outline-none focus:ring-2 focus:ring-offset-2 {% if action == 'link' %}focus:ring-primary-500{% else %}focus:ring-red-500{% endif %}">[0m
[0m[0m             {% if action == 'link' %}[0m
[0m[33m-                <div class="mt-4 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-3">[0m
[0m[33m-                    <p class="text-sm text-blue-700 dark:text-blue-300">[0m
[0m[33m-                        This will link the profile to your account. You'll be able to access personalized features and verify ownership later.[0m
[0m[33m-                    </p>[0m
[0m[33m-                </div>[0m
[0m[32m+              Confirm Link[0m
[0m[0m             {% else %}[0m
[0m[33m-                <div class="mt-4 bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-3">[0m
[0m[33m-                    <p class="text-sm text-yellow-700 dark:text-yellow-300">[0m
[0m[33m-                        This will unlink the profile from your account. You'll lose access to personalized features for this profile.[0m
[0m[33m-                    </p>[0m
[0m[33m-                </div>[0m
[0m[32m+              Confirm Unlink[0m
[0m[0m             {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Form -->[0m
[0m[33m-            <form method="post" class="mt-4">[0m
[0m[33m-                {% csrf_token %}[0m
[0m[33m-                <div class="flex space-x-3">[0m
[0m[33m-                    <button type="submit"[0m
[0m[33m-                            class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white {% if action == 'link' %}bg-primary-600 hover:bg-primary-700{% else %}bg-red-600 hover:bg-red-700{% endif %} focus:outline-none focus:ring-2 focus:ring-offset-2 {% if action == 'link' %}focus:ring-primary-500{% else %}focus:ring-red-500{% endif %}">[0m
[0m[33m-                        {% if action == 'link' %}[0m
[0m[33m-                            Confirm Link[0m
[0m[33m-                        {% else %}[0m
[0m[33m-                            Confirm Unlink[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </button>[0m
[0m[33m-                    <button type="button"[0m
[0m[33m-                            hx-get="{% url 'drivers:profile_detail' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-                            hx-target="body"[0m
[0m[33m-                            class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[33m-                        Cancel[0m
[0m[33m-                    </button>[0m
[0m[33m-                </div>[0m
[0m[33m-            </form>[0m
[0m[32m+          </button>[0m
[0m[32m+          <button type="button"[0m
[0m[32m+                  hx-get="{% url 'drivers:profile_detail' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+                  hx-target="body"[0m
[0m[32m+                  class="flex-1 inline-flex justify-center items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[32m+            Cancel[0m
[0m[32m+          </button>[0m
[0m[0m         </div>[0m
[0m[32m+      </form>[0m
[0m[0m     </div>[0m
[0m[32m+  </div>[0m
[0m[0m </div>[0m
[0m
[0m[31m[1m2 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:09,  1.08it/s][0m 18% 2/11 [00:01<00:05,  1.69it/s][0m 36% 4/11 [00:01<00:02,  3.17it/s][0m 45% 5/11 [00:01<00:01,  3.55it/s][0m 82% 9/11 [00:01<00:00,  8.25it/s][0m100% 11/11 [00:02<00:00,  8.86it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/components/footer.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -6,13 +6,14 @@
[0m
[0m[0m       <!-- Logo and Description -->[0m
[0m[0m       <div class="md:col-span-1">[0m
[0m[0m         <div class="flex items-center mb-4">[0m
[0m[33m-          <img src="{% static 'images/logo.svg' %}" alt="SimLane" class="h-8 dark:invert dark:hue-rotate-180" />[0m
[0m[32m+          <img src="{% static 'images/logo.svg' %}"[0m
[0m[32m+               alt="SimLane"[0m
[0m[32m+               class="h-8 dark:invert dark:hue-rotate-180" />[0m
[0m[0m         </div>[0m
[0m[0m         <p class="text-gray-600 dark:text-gray-400 text-sm leading-relaxed">[0m
[0m[0m           Your ultimate simracing companion. Track your progress, analyze your performance, and connect with fellow racers.[0m
[0m[0m         </p>[0m
[0m[0m       </div>[0m
[0m[33m-[0m
[0m[0m       <!-- Browse Section -->[0m
[0m[0m       <div>[0m
[0m[0m         <h3 class="text-gray-900 dark:text-white font-semibold mb-4">Browse</h3>[0m
[0m[1m[34m@@ -26,24 +27,23 @@
[0m
[0m[0m                class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">All Tracks</a>[0m
[0m[0m           </li>[0m
[0m[0m           <li>[0m
[0m[33m-                                                    <a href="{% url 'drivers:profiles_list' %}"[0m
[0m[33m-                       class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Drivers</a>[0m
[0m[32m+            <a href="{% url 'drivers:profiles_list' %}"[0m
[0m[32m+               class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Drivers</a>[0m
[0m[0m           </li>[0m
[0m[0m           <li>[0m
[0m[33m-                                                    <a href="{% url 'drivers:profiles_by_simulator' simulator_slug='iracing' %}"[0m
[0m[33m-                       class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">iRacing Drivers</a>[0m
[0m[32m+            <a href="{% url 'drivers:profiles_by_simulator' simulator_slug='iracing' %}"[0m
[0m[32m+               class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">iRacing Drivers</a>[0m
[0m[0m           </li>[0m
[0m[0m           <li>[0m
[0m[33m-                                                    <a href="{% url 'drivers:profiles_by_simulator' simulator_slug='assetto-corsa-competizione' %}"[0m
[0m[33m-                       class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">ACC Drivers</a>[0m
[0m[32m+            <a href="{% url 'drivers:profiles_by_simulator' simulator_slug='assetto-corsa-competizione' %}"[0m
[0m[32m+               class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">ACC Drivers</a>[0m
[0m[0m           </li>[0m
[0m[0m           <li>[0m
[0m[33m-                                <a href="{% url 'dashboard:dashboard_home' %}"[0m
[0m[32m+            <a href="{% url 'dashboard:dashboard_home' %}"[0m
[0m[0m                class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Sim Dashboard</a>[0m
[0m[0m           </li>[0m
[0m[0m         </ul>[0m
[0m[0m       </div>[0m
[0m[33m-[0m
[0m[0m       <!-- Quick Links -->[0m
[0m[0m       <div>[0m
[0m[0m         <h3 class="text-gray-900 dark:text-white font-semibold mb-4">Quick Links</h3>[0m
[0m[1m[34m@@ -67,10 +67,10 @@
[0m
[0m[0m                class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Search</a>[0m
[0m[0m           </li>[0m
[0m[0m           {% if user.is_authenticated %}[0m
[0m[33m-          <li>[0m
[0m[33m-            <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[33m-               class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Clubs</a>[0m
[0m[33m-          </li>[0m
[0m[32m+            <li>[0m
[0m[32m+              <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[32m+                 class="text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">Clubs</a>[0m
[0m[32m+            </li>[0m
[0m[0m           {% endif %}[0m
[0m[0m         </ul>[0m
[0m[0m       </div>[0m
[0m[32m[1m
simlane/templates/sim/iracing/dashboard_overview_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -199,10 +199,10 @@
[0m
[0m[0m       <div class="px-4 py-5 sm:p-6">[0m
[0m[0m         <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white mb-4">Quick Actions</h3>[0m
[0m[0m         <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[33m-                                              <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[33m-                       hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[33m-                       hx-target="#dashboard-content"[0m
[0m[33m-                       hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[32m+          <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[32m+             hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[32m+             hx-target="#dashboard-content"[0m
[0m[32m+             hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'performance' %}"[0m
[0m[0m              class="flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">[0m
[0m[0m             <svg class="w-5 h-5 text-primary-500 mr-3"[0m
[0m[0m                  fill="none"[0m
[0m[1m[34m@@ -213,10 +213,10 @@
[0m
[0m[0m             </svg>[0m
[0m[0m             <span class="text-sm font-medium text-gray-900 dark:text-white">View Performance</span>[0m
[0m[0m           </a>[0m
[0m[33m-                                          <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[33m-                       hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[33m-                       hx-target="#dashboard-content"[0m
[0m[33m-                       hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[32m+          <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[32m+             hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[32m+             hx-target="#dashboard-content"[0m
[0m[32m+             hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'cars' %}"[0m
[0m[0m              class="flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">[0m
[0m[0m             <svg class="w-5 h-5 text-primary-500 mr-3"[0m
[0m[0m                  fill="none"[0m
[0m[1m[34m@@ -226,10 +226,10 @@
[0m
[0m[0m             </svg>[0m
[0m[0m             <span class="text-sm font-medium text-gray-900 dark:text-white">Explore Cars</span>[0m
[0m[0m           </a>[0m
[0m[33m-                                          <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[33m-                       hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[33m-                       hx-target="#dashboard-content"[0m
[0m[33m-                       hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[32m+          <a href="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[32m+             hx-get="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[32m+             hx-target="#dashboard-content"[0m
[0m[32m+             hx-push-url="{% url 'dashboard:simulator_dashboard_section' 'iracing' 'tracks' %}"[0m
[0m[0m              class="flex items-center p-3 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">[0m
[0m[0m             <svg class="w-5 h-5 text-primary-500 mr-3"[0m
[0m[0m                  fill="none"[0m
[0m[32m[1m
simlane/templates/teams/clubs_dashboard.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -104,7 +104,7 @@
[0m
[0m[0m                     <div class="flex items-center space-x-2">[0m
[0m[0m                       {% if club_member.role == 'admin' or club_member.role == 'teams_manager' %}[0m
[0m[0m                         <!-- Show club management link for admins/teams_managers -->[0m
[0m[33m-                                                            <a href="{% url 'teams:club_update' club_member.club.slug %}"[0m
[0m[32m+                        <a href="{% url 'teams:club_update' club_member.club.slug %}"[0m
[0m[0m                            class="text-primary-600 dark:text-primary-400 hover:text-primary-500 text-sm font-medium cursor-pointer mr-2">[0m
[0m[0m                           Manage Club[0m
[0m[0m                         </a>[0m
[0m[1m[34m@@ -164,7 +164,7 @@
[0m
[0m[0m                       </div>[0m
[0m[0m                     </div>[0m
[0m[0m                     <div class="flex items-center space-x-2">[0m
[0m[33m-                                                          <a href="{% url 'teams:club_dashboard' team_data.team.club.slug %}"[0m
[0m[32m+                      <a href="{% url 'teams:club_dashboard' team_data.team.club.slug %}"[0m
[0m[0m                          class="text-primary-600 dark:text-primary-400 hover:text-primary-500 text-sm font-medium cursor-pointer">[0m
[0m[0m                         View Dashboard[0m
[0m[0m                       </a>[0m
[0m[1m[34m@@ -207,7 +207,8 @@
[0m
[0m[0m           </div>[0m
[0m[0m           <!-- Action Buttons -->[0m
[0m[0m           <div class="flex justify-center space-x-4">[0m
[0m[33m-            <a href="{% url 'teams:club_create' %}" class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 cursor-pointer">[0m
[0m[32m+            <a href="{% url 'teams:club_create' %}"[0m
[0m[32m+               class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 cursor-pointer">[0m
[0m[0m               <svg class="w-5 h-5 mr-2"[0m
[0m[0m                    fill="none"[0m
[0m[0m                    stroke="currentColor"[0m
[0m[1m[34m@@ -216,7 +217,8 @@
[0m
[0m[0m               </svg>[0m
[0m[0m               Create Club[0m
[0m[0m             </a>[0m
[0m[33m-            <a href="{% url 'teams:browse_clubs' %}" class="inline-flex items-center px-6 py-3 border border-gray-300 dark:border-gray-600 text-base font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 cursor-pointer">[0m
[0m[32m+            <a href="{% url 'teams:browse_clubs' %}"[0m
[0m[32m+               class="inline-flex items-center px-6 py-3 border border-gray-300 dark:border-gray-600 text-base font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-primary-500 cursor-pointer">[0m
[0m[0m               <svg class="w-5 h-5 mr-2"[0m
[0m[0m                    fill="none"[0m
[0m[0m                    stroke="currentColor"[0m
[0m[1m[34m@@ -254,7 +256,8 @@
[0m
[0m[0m                             {{ club.description|default:"No description available"|truncatechars:80 }}[0m
[0m[0m                           </p>[0m
[0m[0m                           <div class="mt-3">[0m
[0m[33m-                            <a href="{% url 'teams:request_join_club' club.slug %}" class="text-sm text-primary-600 dark:text-primary-400 hover:text-primary-500 cursor-pointer">[0m
[0m[32m+                            <a href="{% url 'teams:request_join_club' club.slug %}"[0m
[0m[32m+                               class="text-sm text-primary-600 dark:text-primary-400 hover:text-primary-500 cursor-pointer">[0m
[0m[0m                               Request to Join[0m
[0m[0m                             </a>[0m
[0m[0m                           </div>[0m
[0m
[0m[31m[1m3 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:06,  1.43it/s][0m 18% 2/11 [00:01<00:06,  1.34it/s][0m 27% 3/11 [00:01<00:03,  2.01it/s][0m 73% 8/11 [00:01<00:00,  6.20it/s][0m[0m                                  [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/components/navbar.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -20,14 +20,10 @@
[0m
[0m[0m                class="h-10 md:hidden dark:invert dark:hue-rotate-180" />[0m
[0m[0m         </a>[0m
[0m[0m       </div>[0m
[0m[33m-[0m
[0m[0m       <!-- Center Search (Desktop) -->[0m
[0m[0m       <div class="hidden md:flex flex-1 justify-center px-6">[0m
[0m[33m-        <div class="w-full max-w-md">[0m
[0m[33m-          {% include 'components/search_component.html' %}[0m
[0m[33m-        </div>[0m
[0m[33m-      </div>[0m
[0m[33m-[0m
[0m[32m+        <div class="w-full max-w-md">{% include 'components/search_component.html' %}</div>[0m
[0m[32m+      </div>[0m
[0m[0m       <!-- Desktop Navigation -->[0m
[0m[0m       <div class="hidden md:flex items-center space-x-8">[0m
[0m[0m         <!-- Public Navigation Links -->[0m
[0m[1m[34m@@ -51,12 +47,10 @@
[0m
[0m[0m            hx-get="{% url 'events:events_list' %}"[0m
[0m[0m            hx-target="#main-content"[0m
[0m[0m            hx-push-url="true">Events</a>[0m
[0m[33m-[0m
[0m[0m         {% if request.user.is_authenticated %}[0m
[0m[0m           <!-- Dashboard Link -->[0m
[0m[0m           <a class="text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 transition-colors font-medium"[0m
[0m[0m              href="{% url 'core:dashboard' %}">Dashboard</a>[0m
[0m[33m-[0m
[0m[0m           <!-- User Dropdown -->[0m
[0m[0m           <div class="relative">[0m
[0m[0m             <button onclick="toggleUserDropdown()"[0m
[0m[1m[34m@@ -180,17 +174,19 @@
[0m
[0m[0m       <div class="px-3 pb-3 border-b border-gray-200 dark:border-gray-700 mb-2">[0m
[0m[0m         <div class="relative">[0m
[0m[0m           <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">[0m
[0m[33m-            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[32m+            <svg class="h-5 w-5 text-gray-400"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+              </path>[0m
[0m[0m             </svg>[0m
[0m[0m           </div>[0m
[0m[33m-          <input[0m
[0m[33m-            type="text"[0m
[0m[33m-            name="mobile-search"[0m
[0m[33m-            placeholder="Search..."[0m
[0m[33m-            class="block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm"[0m
[0m[33m-            onkeydown="if(event.key==='Enter') { const query = encodeURIComponent(this.value.trim()); if(query) window.location.href='{% url 'core:search' %}?q=' + query; }"[0m
[0m[33m-          >[0m
[0m[32m+          <input type="text"[0m
[0m[32m+                 name="mobile-search"[0m
[0m[32m+                 placeholder="Search..."[0m
[0m[32m+                 class="block w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:ring-1 focus:ring-blue-500 focus:border-blue-500 sm:text-sm"[0m
[0m[32m+                 onkeydown="if(event.key==='Enter') { const query = encodeURIComponent(this.value.trim()); if(query) window.location.href='{% url 'core:search' %}?q=' + query; }" />[0m
[0m[0m         </div>[0m
[0m[0m       </div>[0m
[0m[0m       <div class="space-y-2">[0m
[0m[1m[34m@@ -202,12 +198,11 @@
[0m
[0m[0m            href="{% url 'tracks_list' %}"[0m
[0m[0m            onclick="toggleMobileMenu()">Tracks</a>[0m
[0m[0m         <a class="block px-3 py-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md font-medium"[0m
[0m[33m-                                                                               href="{% url 'drivers:profiles_list' %}"[0m
[0m[33m-             onclick="toggleMobileMenu()">Drivers</a>[0m
[0m[32m+           href="{% url 'drivers:profiles_list' %}"[0m
[0m[32m+           onclick="toggleMobileMenu()">Drivers</a>[0m
[0m[0m         <a class="block px-3 py-2 text-gray-700 dark:text-gray-300 hover:text-primary-600 dark:hover:text-primary-400 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-md font-medium"[0m
[0m[0m            href="{% url 'events:events_list' %}"[0m
[0m[0m            onclick="toggleMobileMenu()">Events</a>[0m
[0m[33m-[0m
[0m[0m         {% if request.user.is_authenticated %}[0m
[0m[0m           <!-- Authenticated Mobile Menu -->[0m
[0m[0m           <div class="px-3 py-2 border-b border-gray-200 dark:border-gray-700 mb-2">[0m
[0m[32m[1m
simlane/templates/core/dashboard.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -60,7 +60,7 @@
[0m
[0m[0m                           </div>[0m
[0m[0m                         </div>[0m
[0m[0m                         <div class="flex-shrink-0">[0m
[0m[33m-                                                      <a href="{% url 'dashboard:simulator_dashboard' profile.simulator.slug %}"[0m
[0m[32m+                          <a href="{% url 'dashboard:simulator_dashboard' profile.simulator.slug %}"[0m
[0m[0m                              class="text-primary-600 dark:text-primary-400 hover:text-primary-500 text-sm font-medium cursor-pointer">[0m
[0m[0m                             View Dashboard[0m
[0m[0m                           </a>[0m
[0m[1m[34m@@ -93,7 +93,7 @@
[0m
[0m[0m       <div class="px-4 py-5 sm:p-6">[0m
[0m[0m         <div class="flex items-center justify-between mb-4">[0m
[0m[0m           <h3 class="text-lg leading-6 font-medium text-gray-900 dark:text-white">Your Teams & Clubs</h3>[0m
[0m[33m-                          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[32m+          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[0m              class="text-sm text-primary-600 dark:text-primary-400 hover:text-primary-500 cursor-pointer">[0m
[0m[0m             View Clubs Dashboard[0m
[0m[0m           </a>[0m
[0m[1m[34m@@ -106,7 +106,9 @@
[0m
[0m[0m                 <div class="flex items-center justify-between">[0m
[0m[0m                   <div class="flex items-center space-x-3">[0m
[0m[0m                     {% if club.logo %}[0m
[0m[33m-                      <img src="{{ club.logo.url }}" alt="{{ club.name }}" class="w-8 h-8 rounded" />[0m
[0m[32m+                      <img src="{{ club.logo.url }}"[0m
[0m[32m+                           alt="{{ club.name }}"[0m
[0m[32m+                           class="w-8 h-8 rounded" />[0m
[0m[0m                     {% else %}[0m
[0m[0m                       <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[0m                         <span class="text-sm font-bold text-white">{{ club.name|first }}</span>[0m
[0m[1m[34m@@ -117,13 +119,13 @@
[0m
[0m[0m                       <p class="text-sm text-gray-500 dark:text-gray-400">{{ club.description|default:"No description" }}</p>[0m
[0m[0m                     </div>[0m
[0m[0m                   </div>[0m
[0m[33m-                  <a href="{% url 'teams:club_dashboard' club.slug %}" class="text-primary-600 dark:text-primary-400 hover:text-primary-500 text-sm font-medium">[0m
[0m[32m+                  <a href="{% url 'teams:club_dashboard' club.slug %}"[0m
[0m[32m+                     class="text-primary-600 dark:text-primary-400 hover:text-primary-500 text-sm font-medium">[0m
[0m[0m                     Dashboard[0m
[0m[0m                   </a>[0m
[0m[0m                 </div>[0m
[0m[0m               </div>[0m
[0m[0m             {% endfor %}[0m
[0m[33m-[0m
[0m[0m             {# === TEAMS === #}[0m
[0m[0m             {% for team in user_teams %}[0m
[0m[0m               <div class="border border-gray-200 dark:border-gray-600 rounded-lg p-4 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">[0m
[0m[32m[1m
simlane/templates/cotton/skeleton_circle.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,3 +1,2 @@
[0m
[0m[0m <c-vars size="w-8 h-8" class="" />[0m
[0m[33m-[0m
[0m[0m <div class="animate-pulse bg-gray-200 dark:bg-gray-700 rounded-full {{ size }} {{ class }}"></div>[0m
[0m[32m[1m
simlane/templates/sim/events/upcoming_list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,8 +1,8 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Upcoming Events - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-    {% include "sim/events/list_partial.html" %}[0m
[0m[32m+  {% include "sim/events/list_partial.html" %}[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/tracks/detail.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,209 +1,201 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ track.name }} - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="flex text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-        <a href="{% url 'tracks_list' %}" class="hover:text-primary-600 dark:hover:text-primary-400">Tracks</a>[0m
[0m[33m-        <span class="mx-2">/</span>[0m
[0m[33m-        <span class="text-gray-900 dark:text-white">{{ track.name }}</span>[0m
[0m[32m+      <a href="{% url 'tracks_list' %}"[0m
[0m[32m+         class="hover:text-primary-600 dark:hover:text-primary-400">Tracks</a>[0m
[0m[32m+      <span class="mx-2">/</span>[0m
[0m[32m+      <span class="text-gray-900 dark:text-white">{{ track.name }}</span>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Track Header -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden">[0m
[0m[33m-        <div class="md:flex">[0m
[0m[33m-            <!-- Track Image -->[0m
[0m[33m-            <div class="md:w-1/2">[0m
[0m[33m-                {% if track.default_image_url %}[0m
[0m[33m-                    <img src="{{ track.default_image_url }}" alt="{{ track.name }}" class="w-full h-96 object-cover">[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <div class="w-full h-96 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">[0m
[0m[33m-                        <svg class="w-24 h-24 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"></path>[0m
[0m[33m-                        </svg>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Track Info -->[0m
[0m[33m-            <div class="md:w-1/2 p-6">[0m
[0m[33m-                <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">[0m
[0m[33m-                    {{ track.name }}[0m
[0m[33m-                </h1>[0m
[0m[33m-[0m
[0m[33m-                <div class="space-y-2 mb-6">[0m
[0m[33m-                    {% if track.location or track.country %}[0m
[0m[33m-                        <div class="flex items-center text-gray-600 dark:text-gray-300">[0m
[0m[33m-                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            {% if track.location %}{{ track.location }}, {% endif %}{{ track.country }}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    {% if track.latitude and track.longitude %}[0m
[0m[33m-                        <div class="flex items-center text-gray-600 dark:text-gray-300">[0m
[0m[33m-                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                            GPS: {{ track.latitude|floatformat:6 }}, {{ track.longitude|floatformat:6 }}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                {% if track.description %}[0m
[0m[33m-                    <p class="text-gray-600 dark:text-gray-300 mb-6">{{ track.description }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <!-- Layout Dropdown -->[0m
[0m[33m-                <div class="border-t border-gray-200 dark:border-gray-700 pt-4">[0m
[0m[33m-                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[33m-                        Select Layout Configuration[0m
[0m[33m-                    </label>[0m
[0m[33m-                    <select id="layoutSelector"[0m
[0m[33m-                            class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white"[0m
[0m[33m-                            onchange="if(this.value) window.location.href=this.value;">[0m
[0m[33m-                        <option value="">All Layouts</option>[0m
[0m[33m-                        {% for layout_data in layouts_data %}[0m
[0m[33m-                            <option value="{% url 'layout_detail' track.slug layout_data.layout.slug %}">[0m
[0m[33m-                                {{ layout_data.layout.name }} ({{ layout_data.layout.length_km }}km)[0m
[0m[33m-                            </option>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </select>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="md:flex">[0m
[0m[32m+        <!-- Track Image -->[0m
[0m[32m+        <div class="md:w-1/2">[0m
[0m[32m+          {% if track.default_image_url %}[0m
[0m[32m+            <img src="{{ track.default_image_url }}"[0m
[0m[32m+                 alt="{{ track.name }}"[0m
[0m[32m+                 class="w-full h-96 object-cover" />[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <div class="w-full h-96 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">[0m
[0m[32m+              <svg class="w-24 h-24 text-gray-400"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   stroke="currentColor"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7">[0m
[0m[32m+                </path>[0m
[0m[32m+              </svg>[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[0m         </div>[0m
[0m[32m+        <!-- Track Info -->[0m
[0m[32m+        <div class="md:w-1/2 p-6">[0m
[0m[32m+          <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-4">{{ track.name }}</h1>[0m
[0m[32m+          <div class="space-y-2 mb-6">[0m
[0m[32m+            {% if track.location or track.country %}[0m
[0m[32m+              <div class="flex items-center text-gray-600 dark:text-gray-300">[0m
[0m[32m+                <svg class="w-5 h-5 mr-2"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">[0m
[0m[32m+                  </path>[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                {% if track.location %}{{ track.location }},{% endif %}[0m
[0m[32m+                {{ track.country }}[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if track.latitude and track.longitude %}[0m
[0m[32m+              <div class="flex items-center text-gray-600 dark:text-gray-300">[0m
[0m[32m+                <svg class="w-5 h-5 mr-2"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z">[0m
[0m[32m+                  </path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                GPS: {{ track.latitude|floatformat:6 }}, {{ track.longitude|floatformat:6 }}[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          {% if track.description %}<p class="text-gray-600 dark:text-gray-300 mb-6">{{ track.description }}</p>{% endif %}[0m
[0m[32m+          <!-- Layout Dropdown -->[0m
[0m[32m+          <div class="border-t border-gray-200 dark:border-gray-700 pt-4">[0m
[0m[32m+            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Select Layout Configuration</label>[0m
[0m[32m+            <select id="layoutSelector"[0m
[0m[32m+                    class="w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white"[0m
[0m[32m+                    onchange="if(this.value) window.location.href=this.value;">[0m
[0m[32m+              <option value="">All Layouts</option>[0m
[0m[32m+              {% for layout_data in layouts_data %}[0m
[0m[32m+                <option value="{% url 'layout_detail' track.slug layout_data.layout.slug %}">[0m
[0m[32m+                  {{ layout_data.layout.name }} ({{ layout_data.layout.length_km }}km)[0m
[0m[32m+                </option>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </select>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Layouts Grid -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Track Layouts</h2>[0m
[0m[33m-[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[33m-            {% for layout_data in layouts_data %}[0m
[0m[33m-                <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[33m-                    <div class="flex justify-between items-start mb-3">[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h3 class="font-medium text-gray-900 dark:text-white">{{ layout_data.layout.name }}</h3>[0m
[0m[33m-                            <div class="text-sm text-gray-500 dark:text-gray-400 space-y-1 mt-1">[0m
[0m[33m-                                <p>Type: {{ layout_data.layout.get_type_display }}</p>[0m
[0m[33m-                                <p>Length: {{ layout_data.layout.length_km }}km</p>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <a href="{% url 'layout_detail' track.slug layout_data.layout.slug %}"[0m
[0m[33m-                           class="btn-primary btn-sm">[0m
[0m[33m-                            View Details[0m
[0m[33m-                        </a>[0m
[0m[32m+      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Track Layouts</h2>[0m
[0m[32m+      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[32m+        {% for layout_data in layouts_data %}[0m
[0m[32m+          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[32m+            <div class="flex justify-between items-start mb-3">[0m
[0m[32m+              <div>[0m
[0m[32m+                <h3 class="font-medium text-gray-900 dark:text-white">{{ layout_data.layout.name }}</h3>[0m
[0m[32m+                <div class="text-sm text-gray-500 dark:text-gray-400 space-y-1 mt-1">[0m
[0m[32m+                  <p>Type: {{ layout_data.layout.get_type_display }}</p>[0m
[0m[32m+                  <p>Length: {{ layout_data.layout.length_km }}km</p>[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+              <a href="{% url 'layout_detail' track.slug layout_data.layout.slug %}"[0m
[0m[32m+                 class="btn-primary btn-sm">View Details</a>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Simulator availability for this layout -->[0m
[0m[32m+            <div class="border-t border-gray-200 dark:border-gray-700 pt-3 mt-3">[0m
[0m[32m+              <p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Available in:</p>[0m
[0m[32m+              <div class="flex flex-wrap gap-1">[0m
[0m[32m+                {% for simulator in layout_data.simulators %}[0m
[0m[32m+                  {% if simulator.icon %}[0m
[0m[32m+                    <img src="{{ simulator.icon.url }}"[0m
[0m[32m+                         alt="{{ simulator.name }}"[0m
[0m[32m+                         title="{{ simulator.name }}"[0m
[0m[32m+                         class="w-6 h-6 rounded" />[0m
[0m[32m+                  {% else %}[0m
[0m[32m+                    <div class="w-6 h-6 bg-primary-500 rounded flex items-center justify-center"[0m
[0m[32m+                         title="{{ simulator.name }}">[0m
[0m[32m+                      <span class="text-xs font-bold text-white">{{ simulator.name|first }}</span>[0m
[0m[0m                     </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Simulator availability for this layout -->[0m
[0m[33m-                    <div class="border-t border-gray-200 dark:border-gray-700 pt-3 mt-3">[0m
[0m[33m-                        <p class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Available in:</p>[0m
[0m[33m-                        <div class="flex flex-wrap gap-1">[0m
[0m[33m-                            {% for simulator in layout_data.simulators %}[0m
[0m[33m-                                {% if simulator.icon %}[0m
[0m[33m-                                    <img src="{{ simulator.icon.url }}"[0m
[0m[33m-                                         alt="{{ simulator.name }}"[0m
[0m[33m-                                         title="{{ simulator.name }}"[0m
[0m[33m-                                         class="w-6 h-6 rounded">[0m
[0m[33m-                                {% else %}[0m
[0m[33m-                                    <div class="w-6 h-6 bg-primary-500 rounded flex items-center justify-center"[0m
[0m[33m-                                         title="{{ simulator.name }}">[0m
[0m[33m-                                        <span class="text-xs font-bold text-white">{{ simulator.name|first }}</span>[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            {% endfor %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <p class="text-gray-500 dark:text-gray-400 col-span-full">No layouts available for this track.</p>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                {% endfor %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <p class="text-gray-500 dark:text-gray-400 col-span-full">No layouts available for this track.</p>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Simulator Availability -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Simulator Availability</h2>[0m
[0m[33m-[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[33m-            {% for sim_track in track.sim_tracks.all %}[0m
[0m[33m-                <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[33m-                    <div class="flex items-center gap-3 mb-3">[0m
[0m[33m-                        {% if sim_track.simulator.icon %}[0m
[0m[33m-                            <img src="{{ sim_track.simulator.icon.url }}" alt="{{ sim_track.simulator.name }}" class="w-10 h-10 rounded">[0m
[0m[33m-                        {% else %}[0m
[0m[33m-                            <div class="w-10 h-10 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                                <span class="text-lg font-bold text-white">{{ sim_track.simulator.name|first }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h3 class="font-medium text-gray-900 dark:text-white">{{ sim_track.simulator.name }}</h3>[0m
[0m[33m-                            <p class="text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                                {{ sim_track.layouts.count }} layout{{ sim_track.layouts.count|pluralize }}[0m
[0m[33m-                            </p>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <div class="flex items-center justify-between">[0m
[0m[33m-                        {% if sim_track.is_laser_scanned %}[0m
[0m[33m-                            <span class="text-sm text-green-600 dark:text-green-400">[0m
[0m[33m-                                <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                Laser Scanned[0m
[0m[33m-                            </span>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                        <span class="text-sm {% if sim_track.is_active %}text-green-600 dark:text-green-400{% else %}text-red-600 dark:text-red-400{% endif %}">[0m
[0m[33m-                            {% if sim_track.is_active %}Active{% else %}Inactive{% endif %}[0m
[0m[33m-                        </span>[0m
[0m[33m-                    </div>[0m
[0m[32m+      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Simulator Availability</h2>[0m
[0m[32m+      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[32m+        {% for sim_track in track.sim_tracks.all %}[0m
[0m[32m+          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[32m+            <div class="flex items-center gap-3 mb-3">[0m
[0m[32m+              {% if sim_track.simulator.icon %}[0m
[0m[32m+                <img src="{{ sim_track.simulator.icon.url }}"[0m
[0m[32m+                     alt="{{ sim_track.simulator.name }}"[0m
[0m[32m+                     class="w-10 h-10 rounded" />[0m
[0m[32m+              {% else %}[0m
[0m[32m+                <div class="w-10 h-10 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+                  <span class="text-lg font-bold text-white">{{ sim_track.simulator.name|first }}</span>[0m
[0m[0m                 </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <p class="text-gray-500 dark:text-gray-400 col-span-full">No simulator data available.</p>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              <div>[0m
[0m[32m+                <h3 class="font-medium text-gray-900 dark:text-white">{{ sim_track.simulator.name }}</h3>[0m
[0m[32m+                <p class="text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+                  {{ sim_track.layouts.count }} layout{{ sim_track.layouts.count|pluralize }}[0m
[0m[32m+                </p>[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div class="flex items-center justify-between">[0m
[0m[32m+              {% if sim_track.is_laser_scanned %}[0m
[0m[32m+                <span class="text-sm text-green-600 dark:text-green-400">[0m
[0m[32m+                  <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[32m+                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  Laser Scanned[0m
[0m[32m+                </span>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              <span class="text-sm {% if sim_track.is_active %}text-green-600 dark:text-green-400{% else %}text-red-600 dark:text-red-400{% endif %}">[0m
[0m[32m+                {% if sim_track.is_active %}[0m
[0m[32m+                  Active[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  Inactive[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </span>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <p class="text-gray-500 dark:text-gray-400 col-span-full">No simulator data available.</p>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Lap Records -->[0m
[0m[0m     {% if lap_records %}[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Recent Lap Records</h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="overflow-x-auto">[0m
[0m[33m-                <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[33m-                    <thead>[0m
[0m[33m-                        <tr>[0m
[0m[33m-                            <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Driver</th>[0m
[0m[33m-                            <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Layout</th>[0m
[0m[33m-                            <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Time</th>[0m
[0m[33m-                            <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Simulator</th>[0m
[0m[33m-                        </tr>[0m
[0m[33m-                    </thead>[0m
[0m[33m-                    <tbody class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[33m-                        {% for lap_time in lap_records %}[0m
[0m[33m-                            <tr>[0m
[0m[33m-                                <td class="px-4 py-2 text-sm text-gray-900 dark:text-white">[0m
[0m[33m-                                    {{ lap_time.sim_profile.profile_name }}[0m
[0m[33m-                                </td>[0m
[0m[33m-                                <td class="px-4 py-2 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                                    {{ lap_time.sim_layout.name }}[0m
[0m[33m-                                </td>[0m
[0m[33m-                                <td class="px-4 py-2 text-sm font-mono text-gray-900 dark:text-white">[0m
[0m[33m-                                    {{ lap_time.lap_time_ms|floatformat:3 }}s[0m
[0m[33m-                                </td>[0m
[0m[33m-                                <td class="px-4 py-2 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                                    {{ lap_time.sim_profile.simulator.name }}[0m
[0m[33m-                                </td>[0m
[0m[33m-                            </tr>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </tbody>[0m
[0m[33m-                </table>[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[32m+        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Recent Lap Records</h2>[0m
[0m[32m+        <div class="overflow-x-auto">[0m
[0m[32m+          <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[32m+            <thead>[0m
[0m[32m+              <tr>[0m
[0m[32m+                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Driver</th>[0m
[0m[32m+                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Layout</th>[0m
[0m[32m+                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Time</th>[0m
[0m[32m+                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase">Simulator</th>[0m
[0m[32m+              </tr>[0m
[0m[32m+            </thead>[0m
[0m[32m+            <tbody class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[32m+              {% for lap_time in lap_records %}[0m
[0m[32m+                <tr>[0m
[0m[32m+                  <td class="px-4 py-2 text-sm text-gray-900 dark:text-white">{{ lap_time.sim_profile.profile_name }}</td>[0m
[0m[32m+                  <td class="px-4 py-2 text-sm text-gray-500 dark:text-gray-400">{{ lap_time.sim_layout.name }}</td>[0m
[0m[32m+                  <td class="px-4 py-2 text-sm font-mono text-gray-900 dark:text-white">{{ lap_time.lap_time_ms|floatformat:3 }}s</td>[0m
[0m[32m+                  <td class="px-4 py-2 text-sm text-gray-500 dark:text-gray-400">{{ lap_time.sim_profile.simulator.name }}</td>[0m
[0m[32m+                </tr>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </tbody>[0m
[0m[32m+          </table>[0m
[0m[0m         </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/users/sim_profile_form_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -73,10 +73,12 @@
[0m
[0m[0m           <label for="{{ form.sim_api_id.id_for_label }}"[0m
[0m[0m                  class="block text-sm font-medium text-gray-700">{{ form.sim_api_id.label }}</label>[0m
[0m[0m           <div class="mt-1">[0m
[0m[33m-            <input type="text" name="{{ form.sim_api_id.name }}" id="{{ form.sim_api_id.id_for_label }}"[0m
[0m[32m+            <input type="text"[0m
[0m[32m+                   name="{{ form.sim_api_id.name }}"[0m
[0m[32m+                   id="{{ form.sim_api_id.id_for_label }}"[0m
[0m[0m                    value="{{ form.sim_api_id.value|default:'' }}"[0m
[0m[0m                    class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-primary-500 focus:border-primary-500 sm:text-sm"[0m
[0m[33m-                   placeholder="{{ form.sim_api_id.field.widget.attrs.placeholder }}">[0m
[0m[32m+                   placeholder="{{ form.sim_api_id.field.widget.attrs.placeholder }}" />[0m
[0m[0m           </div>[0m
[0m[0m           {% if form.sim_api_id.help_text %}[0m
[0m[0m             <p class="mt-1 text-sm text-gray-500">{{ form.sim_api_id.help_text }}</p>[0m
[0m
[0m[31m[1m6 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:01<00:12,  1.23s/it][0m 27% 3/11 [00:01<00:02,  2.72it/s][0m 55% 6/11 [00:01<00:00,  5.75it/s][0m 73% 8/11 [00:01<00:00,  7.31it/s][0m 91% 10/11 [00:01<00:00,  6.90it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/cotton/car_class_card.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -4,22 +4,22 @@
[0m
[0m[0m - car_class (required)[0m
[0m[0m - show_speed (boolean)[0m
[0m[0m {% endcomment %}[0m
[0m[33m-[0m
[0m[0m <c-vars show_speed />[0m
[0m[33m-[0m
[0m[0m <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-md transition-shadow">[0m
[0m[33m-    {% if car_class.icon_url %}[0m
[0m[33m-        <img src="{{ car_class.icon_url }}" alt="{{ car_class.name }}" class="w-full h-32 object-contain bg-gray-50 dark:bg-gray-700 p-4">[0m
[0m[33m-    {% else %}[0m
[0m[33m-        <div class="w-full h-32 flex items-center justify-center bg-gray-50 dark:bg-gray-700 text-3xl">🚘</div>[0m
[0m[32m+  {% if car_class.icon_url %}[0m
[0m[32m+    <img src="{{ car_class.icon_url }}"[0m
[0m[32m+         alt="{{ car_class.name }}"[0m
[0m[32m+         class="w-full h-32 object-contain bg-gray-50 dark:bg-gray-700 p-4" />[0m
[0m[32m+  {% else %}[0m
[0m[32m+    <div class="w-full h-32 flex items-center justify-center bg-gray-50 dark:bg-gray-700 text-3xl">🚘</div>[0m
[0m[32m+  {% endif %}[0m
[0m[32m+  <div class="p-4 space-y-2">[0m
[0m[32m+    <h3 class="text-lg font-semibold text-gray-900 dark:text-white text-center">{{ car_class.name }}</h3>[0m
[0m[32m+    <div class="flex justify-center">[0m
[0m[32m+      <c-car-category-badge category="{{ car_class.category|default:'sports_car' }}" size="sm" />[0m
[0m[32m+    </div>[0m
[0m[32m+    {% if show_speed and car_class.relative_speed %}[0m
[0m[32m+      <div class="text-center text-xs text-gray-500 dark:text-gray-400">Relative speed: {{ car_class.relative_speed }}</div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-    <div class="p-4 space-y-2">[0m
[0m[33m-        <h3 class="text-lg font-semibold text-gray-900 dark:text-white text-center">{{ car_class.name }}</h3>[0m
[0m[33m-        <div class="flex justify-center">[0m
[0m[33m-            <c-car-category-badge category="{{ car_class.category|default:'sports_car' }}" size="sm" />[0m
[0m[33m-        </div>[0m
[0m[33m-        {% if show_speed and car_class.relative_speed %}[0m
[0m[33m-            <div class="text-center text-xs text-gray-500 dark:text-gray-400">Relative speed: {{ car_class.relative_speed }}</div>[0m
[0m[33m-        {% endif %}[0m
[0m[33m-    </div>[0m
[0m[32m+  </div>[0m
[0m[0m </div>[0m
[0m[32m[1m
simlane/templates/cotton/skeleton_text.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,3 +1,2 @@
[0m
[0m[0m <c-vars height="h-4" width="w-3/4" class="" />[0m
[0m[33m-[0m
[0m[0m <div class="animate-pulse bg-gray-200 dark:bg-gray-700 rounded {{ height }} {{ width }} {{ class }}"></div>[0m
[0m[32m[1m
simlane/templates/sim/cars/list_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,40 +1,43 @@
[0m
[0m[0m {% comment %} HTMX partial for cars search UI, grid, and pagination {% endcomment %}[0m
[0m[0m <div class="space-y-4">[0m
[0m[33m-<!-- Header -->[0m
[0m[33m-<div class="flex items-center justify-between">[0m
[0m[32m+  <!-- Header -->[0m
[0m[32m+  <div class="flex items-center justify-between">[0m
[0m[0m     <div>[0m
[0m[33m-        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Cars Database</h1>[0m
[0m[33m-        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-            Browse all available cars across simulators[0m
[0m[33m-        </p>[0m
[0m[32m+      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Cars Database</h1>[0m
[0m[32m+      <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Browse all available cars across simulators</p>[0m
[0m[0m     </div>[0m
[0m[0m     {% if request.user.is_authenticated and request.user.linked_sim_profiles.exists %}[0m
[0m[33m-    <div class="flex items-center space-x-2">[0m
[0m[33m-        <form id="refresh-owned-form" method="POST"[0m
[0m[32m+      <div class="flex items-center space-x-2">[0m
[0m[32m+        <form id="refresh-owned-form"[0m
[0m[32m+              method="POST"[0m
[0m[0m               hx-post="{% url 'sim:refresh_iracing_owned' %}"[0m
[0m[0m               hx-target="#refresh-status"[0m
[0m[0m               hx-indicator="#refresh-indicator">[0m
[0m[33m-            {% csrf_token %}[0m
[0m[33m-            <input type="hidden" name="sim_profile_id" value="{{ request.user.linked_sim_profiles.first.id }}">[0m
[0m[33m-            <button type="submit"[0m
[0m[33m-              class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[33m-              style="min-width: 120px;">[0m
[0m[33m-                <span>Refresh Owned</span>[0m
[0m[33m-                <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[33m-                    <svg class="animate-spin h-4 w-4 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">[0m
[0m[33m-                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[33m-                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                </span>[0m
[0m[33m-            </button>[0m
[0m[32m+          {% csrf_token %}[0m
[0m[32m+          <input type="hidden"[0m
[0m[32m+                 name="sim_profile_id"[0m
[0m[32m+                 value="{{ request.user.linked_sim_profiles.first.id }}" />[0m
[0m[32m+          <button type="submit"[0m
[0m[32m+                  class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[32m+                  style="min-width: 120px">[0m
[0m[32m+            <span>Refresh Owned</span>[0m
[0m[32m+            <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[32m+              <svg class="animate-spin h-4 w-4 text-primary-600"[0m
[0m[32m+                   xmlns="http://www.w3.org/2000/svg"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[32m+                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[32m+              </svg>[0m
[0m[32m+            </span>[0m
[0m[32m+          </button>[0m
[0m[0m         </form>[0m
[0m[0m         <div id="refresh-status"></div>[0m
[0m[33m-    </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<!-- Search and Filters -->[0m
[0m[33m-<div class="search-container">[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Search and Filters -->[0m
[0m[32m+  <div class="search-container">[0m
[0m[0m     <form method="get"[0m
[0m[0m           hx-get="{% url 'cars_list' %}"[0m
[0m[0m           hx-target="#cars-container"[0m
[0m[1m[34m@@ -42,60 +45,57 @@
[0m
[0m[0m           hx-indicator="#loading-indicator"[0m
[0m[0m           hx-trigger="change"[0m
[0m[0m           class="space-y-4">[0m
[0m[33m-        <!-- Search Bar -->[0m
[0m[33m-        <div class="flex gap-4">[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <input type="text"[0m
[0m[33m-                       name="q"[0m
[0m[33m-                       placeholder="Search cars..."[0m
[0m[33m-                       value="{{ search_query }}"[0m
[0m[33m-                       hx-get="{% url 'cars_list' %}"[0m
[0m[33m-                       hx-target="#cars-container"[0m
[0m[33m-                       hx-push-url="true"[0m
[0m[33m-                       hx-indicator="#loading-indicator"[0m
[0m[33m-                       hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[33m-                       class="form-input w-full">[0m
[0m[33m-            </div>[0m
[0m[33m-            <button type="submit" class="btn-primary">[0m
[0m[33m-                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Search[0m
[0m[33m-            </button>[0m
[0m[32m+      <!-- Search Bar -->[0m
[0m[32m+      <div class="flex gap-4">[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <input type="text"[0m
[0m[32m+                 name="q"[0m
[0m[32m+                 placeholder="Search cars..."[0m
[0m[32m+                 value="{{ search_query }}"[0m
[0m[32m+                 hx-get="{% url 'cars_list' %}"[0m
[0m[32m+                 hx-target="#cars-container"[0m
[0m[32m+                 hx-push-url="true"[0m
[0m[32m+                 hx-indicator="#loading-indicator"[0m
[0m[32m+                 hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[32m+                 class="form-input w-full" />[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Filters Grid -->[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">[0m
[0m[33m-            <select name="simulator" class="form-select">[0m
[0m[33m-                <option value="">All Simulators</option>[0m
[0m[33m-                {% for simulator in simulators %}[0m
[0m[33m-                    <option value="{{ simulator.slug }}" {% if selected_simulator == simulator.slug %}selected{% endif %}>[0m
[0m[33m-                        {{ simulator.name }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-[0m
[0m[33m-            <select name="class" class="form-select">[0m
[0m[33m-                <option value="">All Classes</option>[0m
[0m[33m-                {% for car_class in car_classes %}[0m
[0m[33m-                    <option value="{{ car_class.slug }}" {% if selected_class == car_class.slug %}selected{% endif %}>[0m
[0m[33m-                        {{ car_class.name }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-[0m
[0m[33m-            <select name="manufacturer" class="form-select">[0m
[0m[33m-                <option value="">All Manufacturers</option>[0m
[0m[33m-                {% for manufacturer in manufacturers %}[0m
[0m[33m-                    <option value="{{ manufacturer }}" {% if selected_manufacturer == manufacturer %}selected{% endif %}>[0m
[0m[33m-                        {{ manufacturer }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-        </div>[0m
[0m[32m+        <button type="submit" class="btn-primary">[0m
[0m[32m+          <svg class="w-4 h-4 mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+            </path>[0m
[0m[32m+          </svg>[0m
[0m[32m+          Search[0m
[0m[32m+        </button>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Filters Grid -->[0m
[0m[32m+      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">[0m
[0m[32m+        <select name="simulator" class="form-select">[0m
[0m[32m+          <option value="">All Simulators</option>[0m
[0m[32m+          {% for simulator in simulators %}[0m
[0m[32m+            <option value="{{ simulator.slug }}"[0m
[0m[32m+                    {% if selected_simulator == simulator.slug %}selected{% endif %}>{{ simulator.name }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <select name="class" class="form-select">[0m
[0m[32m+          <option value="">All Classes</option>[0m
[0m[32m+          {% for car_class in car_classes %}[0m
[0m[32m+            <option value="{{ car_class.slug }}"[0m
[0m[32m+                    {% if selected_class == car_class.slug %}selected{% endif %}>{{ car_class.name }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <select name="manufacturer" class="form-select">[0m
[0m[32m+          <option value="">All Manufacturers</option>[0m
[0m[32m+          {% for manufacturer in manufacturers %}[0m
[0m[32m+            <option value="{{ manufacturer }}"[0m
[0m[32m+                    {% if selected_manufacturer == manufacturer %}selected{% endif %}>{{ manufacturer }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+      </div>[0m
[0m[0m     </form>[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Include cars results partial -->[0m
[0m[32m+  {% include 'sim/cars/cars_list_partial.html' %}[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[33m-<!-- Include cars results partial -->[0m
[0m[33m-{% include 'sim/cars/cars_list_partial.html' %}[0m
[0m[33m-</div>[0m
[0m[32m[1m
simlane/templates/teams/club_dashboard.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -24,7 +24,10 @@
[0m
[0m[0m             {% endif %}[0m
[0m[0m             <div>[0m
[0m[0m               <h1 class="text-xl font-semibold text-gray-900 dark:text-white">{{ club.name }} Dashboard</h1>[0m
[0m[33m-              <p class="text-sm text-gray-500 dark:text-gray-400">Club Dashboard{% if user_role %} • {{ user_role|title }}{% endif %}</p>[0m
[0m[32m+              <p class="text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+                Club Dashboard[0m
[0m[32m+                {% if user_role %}• {{ user_role|title }}{% endif %}[0m
[0m[32m+              </p>[0m
[0m[0m             </div>[0m
[0m[0m           </div>[0m
[0m[0m           <!-- Right section -->[0m
[0m[1m[34m@@ -154,12 +157,12 @@
[0m
[0m[0m               </svg>[0m
[0m[0m               Results[0m
[0m[0m             </a>[0m
[0m[33m-                          <!-- Settings (if admin/teams_manager) -->[0m
[0m[33m-              {% if user_role == 'admin' or user_role == 'teams_manager' %}[0m
[0m[33m-                <a href="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[33m-                   hx-get="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[33m-                   hx-target="#dashboard-content"[0m
[0m[33m-                   hx-push-url="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[32m+            <!-- Settings (if admin/teams_manager) -->[0m
[0m[32m+            {% if user_role == 'admin' or user_role == 'teams_manager' %}[0m
[0m[32m+              <a href="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[32m+                 hx-get="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[32m+                 hx-target="#dashboard-content"[0m
[0m[32m+                 hx-push-url="{% url 'teams:club_dashboard_section' club.slug 'settings' %}"[0m
[0m[0m                  class="flex items-center px-3 py-2 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer {% if active_section == 'settings' %}bg-primary-50 dark:bg-primary-900/20 text-primary-700 dark:text-primary-300{% endif %}">[0m
[0m[0m                 <svg class="w-5 h-5 mr-3"[0m
[0m[0m                      fill="none"[0m
[0m[32m[1m
simlane/templates/teams/club_dashboard_content_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -120,7 +120,7 @@
[0m
[0m[0m                        fill="none"[0m
[0m[0m                        stroke="currentColor"[0m
[0m[0m                        viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />[0m
[0m[0m                   </svg>[0m
[0m[0m                   Bulk Create[0m
[0m[0m                 </a>[0m
[0m[1m[34m@@ -171,9 +171,7 @@
[0m
[0m[0m                           </span>[0m
[0m[0m                         {% endif %}[0m
[0m[0m                       </div>[0m
[0m[33m-                      <p class="text-sm text-gray-600 dark:text-gray-300">[0m
[0m[33m-                        {{ sheet.event.name }}[0m
[0m[33m-                      </p>[0m
[0m[32m+                      <p class="text-sm text-gray-600 dark:text-gray-300">{{ sheet.event.name }}</p>[0m
[0m[0m                       <div class="mt-1 flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400">[0m
[0m[0m                         <span>{{ sheet.signup_count }} signups</span>[0m
[0m[0m                         <span>•</span>[0m
[0m[1m[34m@@ -214,7 +212,7 @@
[0m
[0m[0m                          fill="none"[0m
[0m[0m                          stroke="currentColor"[0m
[0m[0m                          viewBox="0 0 24 24">[0m
[0m[33m-                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>[0m
[0m[32m+                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />[0m
[0m[0m                     </svg>[0m
[0m[0m                     Bulk Create[0m
[0m[0m                   </a>[0m
[0m[1m[34m@@ -534,8 +532,7 @@
[0m
[0m[0m               <div>[0m
[0m[0m                 {% comment %}[0m
[0m[0m                 Event signup functionality will be implemented later[0m
[0m[33m-                <a href="{% url 'teams:event_signup_create' club.slug %}"[0m
[0m[33m-                   class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600">[0m
[0m[32m+                <a href="{% url 'teams:event_signup_create' club.slug %}" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600">[0m
[0m[0m                 {% endcomment %}[0m
[0m[0m                 <a href="#"[0m
[0m[0m                    class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 dark:bg-purple-500 dark:hover:bg-purple-600 opacity-50 cursor-not-allowed"[0m
[0m[32m[1m
simlane/templates/teams/club_event_signups.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,61 +1,63 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Event Signups - {{ club.name }} | SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[32m+  <div class="mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="mb-6">[0m
[0m[33m-        <ol class="flex items-center space-x-2 text-sm">[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:clubs_dashboard' %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">[0m
[0m[33m-                    Clubs[0m
[0m[33m-                </a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:club_dashboard' club.slug %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">[0m
[0m[33m-                    {{ club.name }}[0m
[0m[33m-                </a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li class="text-gray-900 dark:text-gray-100">Event Signups</li>[0m
[0m[33m-        </ol>[0m
[0m[32m+      <ol class="flex items-center space-x-2 text-sm">[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Clubs</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:club_dashboard' club.slug %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">{{ club.name }}</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li class="text-gray-900 dark:text-gray-100">Event Signups</li>[0m
[0m[32m+      </ol>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="mb-8 flex items-center justify-between">[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Event Signups</h1>[0m
[0m[33m-            <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[33m-                Manage event signup sheets and member participation for {{ club.name }}.[0m
[0m[33m-            </p>[0m
[0m[32m+      <div>[0m
[0m[32m+        <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Event Signups</h1>[0m
[0m[32m+        <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[32m+          Manage event signup sheets and member participation for {{ club.name }}.[0m
[0m[32m+        </p>[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if perms.teams.can_manage_events %}[0m
[0m[32m+        <div class="flex space-x-3">[0m
[0m[32m+          <a href="{% url 'teams:club_event_signup_bulk_create' club.slug %}"[0m
[0m[32m+             class="btn btn-secondary">[0m
[0m[32m+            <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />[0m
[0m[32m+            </svg>[0m
[0m[32m+            Bulk Create[0m
[0m[32m+          </a>[0m
[0m[32m+          <a href="{% url 'teams:club_event_signup_create' club.slug %}"[0m
[0m[32m+             class="btn btn-primary">[0m
[0m[32m+            <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />[0m
[0m[32m+            </svg>[0m
[0m[32m+            Create Signup[0m
[0m[32m+          </a>[0m
[0m[0m         </div>[0m
[0m[33m-        {% if perms.teams.can_manage_events %}[0m
[0m[33m-            <div class="flex space-x-3">[0m
[0m[33m-                <a href="{% url 'teams:club_event_signup_bulk_create' club.slug %}" class="btn btn-secondary">[0m
[0m[33m-                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    Bulk Create[0m
[0m[33m-                </a>[0m
[0m[33m-                <a href="{% url 'teams:club_event_signup_create' club.slug %}" class="btn btn-primary">[0m
[0m[33m-                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    Create Signup[0m
[0m[33m-                </a>[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <div id="signup-list">[0m
[0m[33m-        {% include "teams/club_event_signups_partial.html" %}[0m
[0m[33m-    </div>[0m
[0m[33m-</div>[0m
[0m[32m+    <div id="signup-list">{% include "teams/club_event_signups_partial.html" %}</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/teams/club_events_list_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -5,7 +5,6 @@
[0m
[0m[0m       <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[0m         <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-1">{{ sheet.title }}</h3>[0m
[0m[0m         <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">{{ sheet.event.name }}</p>[0m
[0m[33m-[0m
[0m[0m         <div class="space-y-2 text-sm mb-4">[0m
[0m[0m           <div class="flex items-center justify-between">[0m
[0m[0m             <span class="text-gray-500 dark:text-gray-400">Signups:</span>[0m
[0m[1m[34m@@ -16,14 +15,14 @@
[0m
[0m[0m             <span class="font-medium text-gray-900 dark:text-gray-100">{{ sheet.signup_closes|date:"M j, H:i" }}</span>[0m
[0m[0m           </div>[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[0m         <div class="flex items-center justify-between">[0m
[0m[0m           {% if sheet.is_open %}[0m
[0m[0m             <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">Open</span>[0m
[0m[0m           {% else %}[0m
[0m[0m             <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">{{ sheet.status|capfirst }}</span>[0m
[0m[0m           {% endif %}[0m
[0m[33m-          <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}" class="text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">View Details →</a>[0m
[0m[32m+          <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}"[0m
[0m[32m+             class="text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">View Details →</a>[0m
[0m[0m         </div>[0m
[0m[0m       </div>[0m
[0m[0m     {% endfor %}[0m
[0m
[0m[31m[1m7 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:03,  2.52it/s][0m 27% 3/11 [00:00<00:01,  4.45it/s][0m 45% 5/11 [00:00<00:01,  5.90it/s][0m 64% 7/11 [00:01<00:00,  8.29it/s][0m100% 11/11 [00:01<00:00, 13.07it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/account/password_change.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -9,7 +9,9 @@
[0m
[0m[0m {% endblock head_title_inner %}[0m
[0m[0m {% block inner_content %}[0m
[0m[0m   <div class="mb-6">[0m
[0m[33m-    <p class="text-sm text-gray-600 dark:text-gray-300 text-center">{% trans "Enter your current password and choose a new one." %}</p>[0m
[0m[32m+    <p class="text-sm text-gray-600 dark:text-gray-300 text-center">[0m
[0m[32m+      {% trans "Enter your current password and choose a new one." %}[0m
[0m[32m+    </p>[0m
[0m[0m   </div>[0m
[0m[0m   <form method="post"[0m
[0m[0m         action="{% url 'account_change_password' %}"[0m
[0m[32m[1m
simlane/templates/cotton/car_class_badge.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -21,23 +21,14 @@
[0m
[0m[0m   dirt -> orange[0m
[0m[0m   default -> gray[0m
[0m[0m {% endcomment %}[0m
[0m[33m-[0m
[0m[0m <c-vars size="sm" />[0m
[0m[33m-[0m
[0m[0m {# Wrapper span with dynamic classes #}[0m
[0m[33m-<span class="inline-flex items-center rounded-full font-medium[0m
[0m[33m-    {# Padding / font size based on size prop #}[0m
[0m[33m-    {% if size == 'lg' %}px-3 py-1 text-sm{% elif size == 'md' %}px-3 py-0.5 text-xs{% else %}px-2 py-0.5 text-xs{% endif %}[0m
[0m[33m-    {# Colour based on category #}[0m
[0m[33m-    {% if car_class.category == 'road' %}bg-emerald-100 text-emerald-800[0m
[0m[33m-    {% elif car_class.category == 'oval' %}bg-indigo-100 text-indigo-800[0m
[0m[33m-    {% elif car_class.category == 'dirt' %}bg-orange-100 text-orange-800[0m
[0m[33m-    {% else %}bg-gray-100 text-gray-800{% endif %}">[0m
[0m[33m-[0m
[0m[32m+<span class="inline-flex items-center rounded-full font-medium {# Padding / font size based on size prop #} {% if size == 'lg' %}px-3 py-1 text-sm{% elif size == 'md' %}px-3 py-0.5 text-xs{% else %}px-2 py-0.5 text-xs{% endif %} {# Colour based on category #} {% if car_class.category == 'road' %}bg-emerald-100 text-emerald-800 {% elif car_class.category == 'oval' %}bg-indigo-100 text-indigo-800 {% elif car_class.category == 'dirt' %}bg-orange-100 text-orange-800 {% else %}bg-gray-100 text-gray-800{% endif %}">[0m
[0m[0m   {# Optional icon #}[0m
[0m[0m   {% if show_icon and car_class.icon_url %}[0m
[0m[33m-    <img src="{{ car_class.icon_url }}" alt="{{ car_class.short_name|default:car_class.name }}" class="w-4 h-4 rounded-full mr-1">[0m
[0m[32m+    <img src="{{ car_class.icon_url }}"[0m
[0m[32m+         alt="{{ car_class.short_name|default:car_class.name }}"[0m
[0m[32m+         class="w-4 h-4 rounded-full mr-1" />[0m
[0m[0m   {% endif %}[0m
[0m[33m-[0m
[0m[0m   <span>{{ car_class.short_name|default:car_class.name }}</span>[0m
[0m[0m </span>[0m
[0m[32m[1m
simlane/templates/sim/tracks/list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,7 +1,6 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}Tracks - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-    {% include 'sim/tracks/list_partial.html' %}[0m
[0m[32m+  {% include 'sim/tracks/list_partial.html' %}[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/tracks/list_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,41 +1,43 @@
[0m
[0m[0m {% comment %} HTMX partial for tracks search UI, grid, and pagination {% endcomment %}[0m
[0m[0m <div class="space-y-4">[0m
[0m[33m-[0m
[0m[33m-<!-- Header -->[0m
[0m[33m-<div class="flex items-center justify-between">[0m
[0m[32m+  <!-- Header -->[0m
[0m[32m+  <div class="flex items-center justify-between">[0m
[0m[0m     <div>[0m
[0m[33m-        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Tracks Database</h1>[0m
[0m[33m-        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-            Explore racing tracks across all simulators[0m
[0m[33m-        </p>[0m
[0m[32m+      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Tracks Database</h1>[0m
[0m[32m+      <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Explore racing tracks across all simulators</p>[0m
[0m[0m     </div>[0m
[0m[0m     {% if request.user.is_authenticated and request.user.linked_sim_profiles.exists %}[0m
[0m[33m-    <div class="flex items-center space-x-2">[0m
[0m[33m-        <form id="refresh-owned-form" method="POST"[0m
[0m[32m+      <div class="flex items-center space-x-2">[0m
[0m[32m+        <form id="refresh-owned-form"[0m
[0m[32m+              method="POST"[0m
[0m[0m               hx-post="{% url 'sim:refresh_iracing_owned' %}"[0m
[0m[0m               hx-target="#refresh-status"[0m
[0m[0m               hx-indicator="#refresh-indicator">[0m
[0m[33m-            {% csrf_token %}[0m
[0m[33m-            <input type="hidden" name="sim_profile_id" value="{{ request.user.linked_sim_profiles.first.id }}">[0m
[0m[33m-            <button type="submit"[0m
[0m[33m-              class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[33m-              style="min-width: 120px;">[0m
[0m[33m-                <span>Refresh Owned</span>[0m
[0m[33m-                <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[33m-                    <svg class="animate-spin h-4 w-4 text-primary-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">[0m
[0m[33m-                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[33m-                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                </span>[0m
[0m[33m-            </button>[0m
[0m[32m+          {% csrf_token %}[0m
[0m[32m+          <input type="hidden"[0m
[0m[32m+                 name="sim_profile_id"[0m
[0m[32m+                 value="{{ request.user.linked_sim_profiles.first.id }}" />[0m
[0m[32m+          <button type="submit"[0m
[0m[32m+                  class="inline-flex items-center px-4 py-2 border border-primary-600 text-primary-600 bg-white hover:bg-primary-50 dark:bg-gray-800 dark:hover:bg-primary-900/20 font-medium rounded-md transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2 cursor-pointer"[0m
[0m[32m+                  style="min-width: 120px">[0m
[0m[32m+            <span>Refresh Owned</span>[0m
[0m[32m+            <span id="refresh-indicator" class="ml-2 htmx-indicator">[0m
[0m[32m+              <svg class="animate-spin h-4 w-4 text-primary-600"[0m
[0m[32m+                   xmlns="http://www.w3.org/2000/svg"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>[0m
[0m[32m+                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>[0m
[0m[32m+              </svg>[0m
[0m[32m+            </span>[0m
[0m[32m+          </button>[0m
[0m[0m         </form>[0m
[0m[0m         <div id="refresh-status"></div>[0m
[0m[33m-    </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<!-- Search and Filters -->[0m
[0m[33m-<div class="search-container">[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Search and Filters -->[0m
[0m[32m+  <div class="search-container">[0m
[0m[0m     <form method="get"[0m
[0m[0m           hx-get="{% url 'tracks_list' %}"[0m
[0m[0m           hx-target="#tracks-container"[0m
[0m[1m[34m@@ -43,71 +45,67 @@
[0m
[0m[0m           hx-indicator="#loading-indicator"[0m
[0m[0m           hx-trigger="change"[0m
[0m[0m           class="space-y-4">[0m
[0m[33m-        <!-- Search Bar -->[0m
[0m[33m-        <div class="flex gap-4">[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <input type="text"[0m
[0m[33m-                       name="q"[0m
[0m[33m-                       placeholder="Search tracks..."[0m
[0m[33m-                       value="{{ search_query }}"[0m
[0m[33m-                       hx-get="{% url 'tracks_list' %}"[0m
[0m[33m-                       hx-target="#tracks-container"[0m
[0m[33m-                       hx-push-url="true"[0m
[0m[33m-                       hx-indicator="#loading-indicator"[0m
[0m[33m-                       hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[33m-                       class="form-input w-full">[0m
[0m[33m-            </div>[0m
[0m[33m-            <button type="submit" class="btn-primary">[0m
[0m[33m-                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Search[0m
[0m[33m-            </button>[0m
[0m[32m+      <!-- Search Bar -->[0m
[0m[32m+      <div class="flex gap-4">[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <input type="text"[0m
[0m[32m+                 name="q"[0m
[0m[32m+                 placeholder="Search tracks..."[0m
[0m[32m+                 value="{{ search_query }}"[0m
[0m[32m+                 hx-get="{% url 'tracks_list' %}"[0m
[0m[32m+                 hx-target="#tracks-container"[0m
[0m[32m+                 hx-push-url="true"[0m
[0m[32m+                 hx-indicator="#loading-indicator"[0m
[0m[32m+                 hx-trigger="input changed delay:500ms, keyup[key=='Enter']"[0m
[0m[32m+                 class="form-input w-full" />[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Filters Grid -->[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">[0m
[0m[33m-            <select name="simulator" class="form-select">[0m
[0m[33m-                <option value="">All Simulators</option>[0m
[0m[33m-                {% for simulator in simulators %}[0m
[0m[33m-                    <option value="{{ simulator.slug }}" {% if selected_simulator == simulator.slug %}selected{% endif %}>[0m
[0m[33m-                        {{ simulator.name }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-[0m
[0m[33m-            <select name="country" class="form-select">[0m
[0m[33m-                <option value="">All Countries</option>[0m
[0m[33m-                {% for country in countries %}[0m
[0m[33m-                    {% if country %}[0m
[0m[33m-                        <option value="{{ country }}" {% if selected_country == country %}selected{% endif %}>[0m
[0m[33m-                            {{ country }}[0m
[0m[33m-                        </option>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-[0m
[0m[33m-            <select name="type" class="form-select">[0m
[0m[33m-                <option value="">All Types</option>[0m
[0m[33m-                {% for type_value, type_label in track_types %}[0m
[0m[33m-                    <option value="{{ type_value }}" {% if selected_type == type_value %}selected{% endif %}>[0m
[0m[33m-                        {{ type_label }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-[0m
[0m[33m-            <label class="flex items-center px-3 py-2 bg-gray-50 dark:bg-gray-700 rounded-md border border-gray-200 dark:border-gray-600">[0m
[0m[33m-                <input type="checkbox"[0m
[0m[33m-                       name="laser_scanned"[0m
[0m[33m-                       value="true"[0m
[0m[33m-                       {% if laser_scanned_only %}checked{% endif %}[0m
[0m[33m-                       class="form-checkbox">[0m
[0m[33m-                <span class="ml-2 text-sm text-gray-700 dark:text-gray-300 font-medium">Laser Scanned Only</span>[0m
[0m[33m-            </label>[0m
[0m[33m-        </div>[0m
[0m[32m+        <button type="submit" class="btn-primary">[0m
[0m[32m+          <svg class="w-4 h-4 mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+            </path>[0m
[0m[32m+          </svg>[0m
[0m[32m+          Search[0m
[0m[32m+        </button>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Filters Grid -->[0m
[0m[32m+      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">[0m
[0m[32m+        <select name="simulator" class="form-select">[0m
[0m[32m+          <option value="">All Simulators</option>[0m
[0m[32m+          {% for simulator in simulators %}[0m
[0m[32m+            <option value="{{ simulator.slug }}"[0m
[0m[32m+                    {% if selected_simulator == simulator.slug %}selected{% endif %}>{{ simulator.name }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <select name="country" class="form-select">[0m
[0m[32m+          <option value="">All Countries</option>[0m
[0m[32m+          {% for country in countries %}[0m
[0m[32m+            {% if country %}[0m
[0m[32m+              <option value="{{ country }}"[0m
[0m[32m+                      {% if selected_country == country %}selected{% endif %}>{{ country }}</option>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <select name="type" class="form-select">[0m
[0m[32m+          <option value="">All Types</option>[0m
[0m[32m+          {% for type_value, type_label in track_types %}[0m
[0m[32m+            <option value="{{ type_value }}"[0m
[0m[32m+                    {% if selected_type == type_value %}selected{% endif %}>{{ type_label }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <label class="flex items-center px-3 py-2 bg-gray-50 dark:bg-gray-700 rounded-md border border-gray-200 dark:border-gray-600">[0m
[0m[32m+          <input type="checkbox"[0m
[0m[32m+                 name="laser_scanned"[0m
[0m[32m+                 value="true"[0m
[0m[32m+                 {% if laser_scanned_only %}checked{% endif %}[0m
[0m[32m+                 class="form-checkbox" />[0m
[0m[32m+          <span class="ml-2 text-sm text-gray-700 dark:text-gray-300 font-medium">Laser Scanned Only</span>[0m
[0m[32m+        </label>[0m
[0m[32m+      </div>[0m
[0m[0m     </form>[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Include tracks results partial -->[0m
[0m[32m+  {% include 'sim/tracks/tracks_list_partial.html' %}[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[33m-<!-- Include tracks results partial -->[0m
[0m[33m-{% include 'sim/tracks/tracks_list_partial.html' %}[0m
[0m[33m-</div>[0m
[0m[32m[1m
simlane/templates/teams/club_event_signup_detail.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,119 +1,132 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ signup_sheet.title }} | {{ club.name }} | SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="mx-auto max-w-5xl px-4 py-8 sm:px-6 lg:px-8 space-y-6">[0m
[0m[32m+  <div class="mx-auto max-w-5xl px-4 py-8 sm:px-6 lg:px-8 space-y-6">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="mb-6">[0m
[0m[33m-        <ol class="flex items-center space-x-2 text-sm">[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:clubs_dashboard' %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Clubs</a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li><span class="text-gray-400 dark:text-gray-600">/</span></li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:club_dashboard' club.slug %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">{{ club.name }}</a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li><span class="text-gray-400 dark:text-gray-600">/</span></li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:club_event_signups' club.slug %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Event Signups</a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li><span class="text-gray-400 dark:text-gray-600">/</span></li>[0m
[0m[33m-            <li class="text-gray-900 dark:text-gray-100 truncate">{{ signup_sheet.title|truncatechars:40 }}</li>[0m
[0m[33m-        </ol>[0m
[0m[32m+      <ol class="flex items-center space-x-2 text-sm">[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Clubs</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:club_dashboard' club.slug %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">{{ club.name }}</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:club_event_signups' club.slug %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Event Signups</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li class="text-gray-900 dark:text-gray-100 truncate">{{ signup_sheet.title|truncatechars:40 }}</li>[0m
[0m[32m+      </ol>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="flex items-start justify-between flex-wrap gap-4">[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">{{ signup_sheet.title }}</h1>[0m
[0m[33m-            <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[33m-                                  {{ signup_sheet.event.name }} &middot; {{ signup_sheet.event.time_slots.first.start_time|date:"M d, Y" }}[0m
[0m[33m-            </p>[0m
[0m[32m+      <div>[0m
[0m[32m+        <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">{{ signup_sheet.title }}</h1>[0m
[0m[32m+        <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[32m+          {{ signup_sheet.event.name }} &middot; {{ signup_sheet.event.time_slots.first.start_time|date:"M d, Y" }}[0m
[0m[32m+        </p>[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if can_manage %}[0m
[0m[32m+        <div class="flex space-x-2">[0m
[0m[32m+          <a href="{% url 'teams:club_event_signup_edit' club.slug signup_sheet.id %}"[0m
[0m[32m+             class="btn btn-secondary">Edit</a>[0m
[0m[32m+          <a href="#" class="btn btn-secondary opacity-50 cursor-not-allowed">Close Signups (TODO)</a>[0m
[0m[0m         </div>[0m
[0m[33m-        {% if can_manage %}[0m
[0m[33m-        <div class="flex space-x-2">[0m
[0m[33m-            <a href="{% url 'teams:club_event_signup_edit' club.slug signup_sheet.id %}" class="btn btn-secondary">Edit</a>[0m
[0m[33m-            <a href="#" class="btn btn-secondary opacity-50 cursor-not-allowed">Close Signups (TODO)</a>[0m
[0m[33m-        </div>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Event Quick Info -->[0m
[0m[0m     <div class="flex flex-wrap gap-4 text-sm text-gray-700 dark:text-gray-300 items-center">[0m
[0m[33m-        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[33m-          {{ signup_sheet.event.simulator.name }}[0m
[0m[33m-        </span>[0m
[0m[33m-        <span>{{ signup_sheet.event.sim_layout.sim_track.track_model.name }}{% if signup_sheet.event.sim_layout.name != signup_sheet.event.sim_layout.sim_track.track_model.name %} ({{ signup_sheet.event.sim_layout.name }}){% endif %}</span>[0m
[0m[33m-        <span>•</span>[0m
[0m[33m-                                <span>{{ signup_sheet.event.time_slots.first.start_time|date:"M d, Y H:i" }}</span>[0m
[0m[33m-        {% if signup_sheet.event.total_race_time %}[0m
[0m[33m-          <span>•</span><span>{{ signup_sheet.event.total_race_time }} race</span>[0m
[0m[32m+      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[32m+        {{ signup_sheet.event.simulator.name }}[0m
[0m[32m+      </span>[0m
[0m[32m+      <span>{{ signup_sheet.event.sim_layout.sim_track.track_model.name }}[0m
[0m[32m+        {% if signup_sheet.event.sim_layout.name != signup_sheet.event.sim_layout.sim_track.track_model.name %}[0m
[0m[32m+          ({{ signup_sheet.event.sim_layout.name }})[0m
[0m[0m         {% endif %}[0m
[0m[33m-        {% if signup_sheet.event.series %}[0m
[0m[33m-          <span>•</span><span>{{ signup_sheet.event.series.name }}</span>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      </span>[0m
[0m[32m+      <span>•</span>[0m
[0m[32m+      <span>{{ signup_sheet.event.time_slots.first.start_time|date:"M d, Y H:i" }}</span>[0m
[0m[32m+      {% if signup_sheet.event.total_race_time %}[0m
[0m[32m+        <span>•</span><span>{{ signup_sheet.event.total_race_time }} race</span>[0m
[0m[32m+      {% endif %}[0m
[0m[32m+      {% if signup_sheet.event.series %}<span>•</span><span>{{ signup_sheet.event.series.name }}</span>{% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Signup Sheet Info -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 space-y-6">[0m
[0m[33m-        <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">[0m
[0m[33m-            <div>[0m
[0m[33m-                <span class="text-gray-500 dark:text-gray-400">Signup Window</span>[0m
[0m[33m-                <div class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                    {{ signup_sheet.signup_opens|date:"M d, Y H:i" }} → {{ signup_sheet.signup_closes|date:"M d, Y H:i" }}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div>[0m
[0m[33m-                <span class="text-gray-500 dark:text-gray-400">Teams</span>[0m
[0m[33m-                <div class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                    {% if signup_sheet.max_teams %}{{ signup_sheet.max_teams }} max{% else %}No limit{% endif %}[0m
[0m[33m-                    &middot; Target size {{ signup_sheet.target_team_size }}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div>[0m
[0m[33m-                <span class="text-gray-500 dark:text-gray-400">Status</span>[0m
[0m[33m-                <div class="font-medium text-gray-900 dark:text-gray-100">{{ signup_sheet.status|capfirst }}</div>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div>[0m
[0m[33m-                <span class="text-gray-500 dark:text-gray-400">Min License</span>[0m
[0m[33m-                <div class="font-medium text-gray-900 dark:text-gray-100">{{ signup_sheet.min_license_level|default:"N/A" }}</div>[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-sm">[0m
[0m[32m+        <div>[0m
[0m[32m+          <span class="text-gray-500 dark:text-gray-400">Signup Window</span>[0m
[0m[32m+          <div class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[32m+            {{ signup_sheet.signup_opens|date:"M d, Y H:i" }} → {{ signup_sheet.signup_closes|date:"M d, Y H:i" }}[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        {% if signup_sheet.description %}[0m
[0m[0m         <div>[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2">Description</h2>[0m
[0m[33m-            <div class="prose dark:prose-invert max-w-none">[0m
[0m[33m-                {{ signup_sheet.description|linebreaksbr }}[0m
[0m[33m-            </div>[0m
[0m[32m+          <span class="text-gray-500 dark:text-gray-400">Teams</span>[0m
[0m[32m+          <div class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[32m+            {% if signup_sheet.max_teams %}[0m
[0m[32m+              {{ signup_sheet.max_teams }} max[0m
[0m[32m+            {% else %}[0m
[0m[32m+              No limit[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            &middot; Target size {{ signup_sheet.target_team_size }}[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+        <div>[0m
[0m[32m+          <span class="text-gray-500 dark:text-gray-400">Status</span>[0m
[0m[32m+          <div class="font-medium text-gray-900 dark:text-gray-100">{{ signup_sheet.status|capfirst }}</div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <div>[0m
[0m[32m+          <span class="text-gray-500 dark:text-gray-400">Min License</span>[0m
[0m[32m+          <div class="font-medium text-gray-900 dark:text-gray-100">{{ signup_sheet.min_license_level|default:"N/A" }}</div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if signup_sheet.description %}[0m
[0m[32m+        <div>[0m
[0m[32m+          <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-2">Description</h2>[0m
[0m[32m+          <div class="prose dark:prose-invert max-w-none">{{ signup_sheet.description|linebreaksbr }}</div>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Signups List -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Signups ({{ signups.count }})</h2>[0m
[0m[33m-        {% if signups %}[0m
[0m[33m-            <ul class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[33m-                {% for signup in signups %}[0m
[0m[33m-                <li class="py-3 flex items-center justify-between">[0m
[0m[33m-                    <div class="flex items-center space-x-3">[0m
[0m[33m-                        <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                            {% if signup.user %}{{ signup.user.username }}{% else %}{{ signup.team.name }}{% endif %}[0m
[0m[33m-                        </span>[0m
[0m[33m-                        {% if signup.team %}[0m
[0m[33m-                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200">Team</span>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                    <span class="text-sm text-gray-500 dark:text-gray-400">{{ signup.status|capfirst }}</span>[0m
[0m[33m-                </li>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </ul>[0m
[0m[33m-        {% else %}[0m
[0m[33m-            <p class="text-gray-600 dark:text-gray-400">No signups yet.</p>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Signups ({{ signups.count }})</h2>[0m
[0m[32m+      {% if signups %}[0m
[0m[32m+        <ul class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[32m+          {% for signup in signups %}[0m
[0m[32m+            <li class="py-3 flex items-center justify-between">[0m
[0m[32m+              <div class="flex items-center space-x-3">[0m
[0m[32m+                <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[32m+                  {% if signup.user %}[0m
[0m[32m+                    {{ signup.user.username }}[0m
[0m[32m+                  {% else %}[0m
[0m[32m+                    {{ signup.team.name }}[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                </span>[0m
[0m[32m+                {% if signup.team %}[0m
[0m[32m+                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200">Team</span>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+              <span class="text-sm text-gray-500 dark:text-gray-400">{{ signup.status|capfirst }}</span>[0m
[0m[32m+            </li>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </ul>[0m
[0m[32m+      {% else %}[0m
[0m[32m+        <p class="text-gray-600 dark:text-gray-400">No signups yet.</p>[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/users/profile/sim_profiles_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -15,8 +15,12 @@
[0m
[0m[0m                 hx-target="#profile-content"[0m
[0m[0m                 hx-swap="innerHTML"[0m
[0m[0m                 class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">[0m
[0m[33m-          <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[32m+          <svg class="-ml-1 mr-2 h-5 w-5"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+            </path>[0m
[0m[0m           </svg>[0m
[0m[0m           {% trans "Search & Link" %}[0m
[0m[0m         </button>[0m
[0m[1m[34m@@ -63,8 +67,12 @@
[0m
[0m[0m                     hx-target="#profile-content"[0m
[0m[0m                     hx-swap="innerHTML"[0m
[0m[0m                     class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-sm font-medium rounded-md text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">[0m
[0m[33m-              <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[32m+              <svg class="-ml-1 mr-2 h-5 w-5"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   stroke="currentColor"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+                </path>[0m
[0m[0m               </svg>[0m
[0m[0m               {% trans "Search & Link Profile" %}[0m
[0m[0m             </button>[0m
[0m
[0m[31m[1m6 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:04,  2.12it/s][0m 18% 2/11 [00:00<00:04,  2.10it/s][0m 27% 3/11 [00:01<00:02,  2.97it/s][0m 36% 4/11 [00:01<00:02,  3.04it/s][0m 45% 5/11 [00:01<00:01,  3.09it/s][0m 82% 9/11 [00:01<00:00,  7.00it/s][0m100% 11/11 [00:02<00:00,  6.33it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/components/search_component.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,98 +1,98 @@
[0m
[0m[0m <!-- Global Search Component -->[0m
[0m[33m-<div class="relative" x-data="{ open: false }" @click.outside="open = false">[0m
[0m[33m-    <div class="relative">[0m
[0m[33m-        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">[0m
[0m[33m-            <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-            </svg>[0m
[0m[33m-        </div>[0m
[0m[33m-        <input[0m
[0m[33m-            type="text"[0m
[0m[33m-            name="search"[0m
[0m[33m-            id="global-search"[0m
[0m[33m-            class="form-input w-full pl-10 pr-16 py-2.5 text-sm transition-all duration-200 shadow-sm hover:shadow-md"[0m
[0m[33m-            placeholder="Search users, events, teams..."[0m
[0m[33m-            autocomplete="off"[0m
[0m[33m-            hx-get="{% url 'core:search_htmx' %}"[0m
[0m[33m-            hx-trigger="input changed delay:300ms, focus"[0m
[0m[33m-            hx-target="#search-results"[0m
[0m[33m-            hx-include="[name='search']"[0m
[0m[33m-            hx-swap="innerHTML"[0m
[0m[33m-            @input="open = $event.target.value.length > 0"[0m
[0m[33m-            @focus="open = $event.target.value.length > 0"[0m
[0m[33m-        >[0m
[0m[33m-        <!-- Keyboard shortcut hint -->[0m
[0m[33m-        <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">[0m
[0m[33m-            <kbd class="hidden sm:inline-flex items-center px-2 py-0.5 border border-gray-200 dark:border-gray-600 rounded text-xs font-medium bg-gray-50 dark:bg-gray-700 text-gray-500 dark:text-gray-400">[0m
[0m[33m-                ⌘K[0m
[0m[33m-            </kbd>[0m
[0m[33m-        </div>[0m
[0m[32m+<div class="relative"[0m
[0m[32m+     x-data="{ open: false }"[0m
[0m[32m+     @click.outside="open = false">[0m
[0m[32m+  <div class="relative">[0m
[0m[32m+    <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">[0m
[0m[32m+      <svg class="h-5 w-5 text-gray-400"[0m
[0m[32m+           fill="none"[0m
[0m[32m+           stroke="currentColor"[0m
[0m[32m+           viewBox="0 0 24 24">[0m
[0m[32m+        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+        </path>[0m
[0m[32m+      </svg>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <!-- Search Results Dropdown -->[0m
[0m[33m-    <div[0m
[0m[33m-        id="search-results"[0m
[0m[33m-        x-show="open"[0m
[0m[33m-        x-transition:enter="transition ease-out duration-100"[0m
[0m[33m-        x-transition:enter-start="transform opacity-0 scale-95"[0m
[0m[33m-        x-transition:enter-end="transform opacity-100 scale-100"[0m
[0m[33m-        x-transition:leave="transition ease-in duration-75"[0m
[0m[33m-        x-transition:leave-start="transform opacity-100 scale-100"[0m
[0m[33m-        x-transition:leave-end="transform opacity-0 scale-95"[0m
[0m[33m-        class="relative"[0m
[0m[33m-    >[0m
[0m[33m-        <!-- Results will be populated by HTMX -->[0m
[0m[32m+    <input type="text"[0m
[0m[32m+           name="search"[0m
[0m[32m+           id="global-search"[0m
[0m[32m+           class="form-input w-full pl-10 pr-16 py-2.5 text-sm transition-all duration-200 shadow-sm hover:shadow-md"[0m
[0m[32m+           placeholder="Search users, events, teams..."[0m
[0m[32m+           autocomplete="off"[0m
[0m[32m+           hx-get="{% url 'core:search_htmx' %}"[0m
[0m[32m+           hx-trigger="input changed delay:300ms, focus"[0m
[0m[32m+           hx-target="#search-results"[0m
[0m[32m+           hx-include="[name='search']"[0m
[0m[32m+           hx-swap="innerHTML"[0m
[0m[32m+           @input="open = $event.target.value.length > 0"[0m
[0m[32m+           @focus="open = $event.target.value.length > 0" />[0m
[0m[32m+    <!-- Keyboard shortcut hint -->[0m
[0m[32m+    <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">[0m
[0m[32m+      <kbd class="hidden sm:inline-flex items-center px-2 py-0.5 border border-gray-200 dark:border-gray-600 rounded text-xs font-medium bg-gray-50 dark:bg-gray-700 text-gray-500 dark:text-gray-400">[0m
[0m[32m+        ⌘K[0m
[0m[32m+      </kbd>[0m
[0m[0m     </div>[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Search Results Dropdown -->[0m
[0m[32m+  <div id="search-results"[0m
[0m[32m+       x-show="open"[0m
[0m[32m+       x-transition:enter="transition ease-out duration-100"[0m
[0m[32m+       x-transition:enter-start="transform opacity-0 scale-95"[0m
[0m[32m+       x-transition:enter-end="transform opacity-100 scale-100"[0m
[0m[32m+       x-transition:leave="transition ease-in duration-75"[0m
[0m[32m+       x-transition:leave-start="transform opacity-100 scale-100"[0m
[0m[32m+       x-transition:leave-end="transform opacity-0 scale-95"[0m
[0m[32m+       class="relative">[0m
[0m[32m+    <!-- Results will be populated by HTMX -->[0m
[0m[32m+  </div>[0m
[0m[0m </div>[0m
[0m[33m-[0m
[0m[0m <!-- Add some JavaScript to handle the search interactions -->[0m
[0m[0m <script>[0m
[0m[33m-document.addEventListener('DOMContentLoaded', function() {[0m
[0m[32m+  document.addEventListener('DOMContentLoaded', function() {[0m
[0m[0m     const searchInput = document.getElementById('global-search');[0m
[0m[0m [0m
[0m[0m     // Global keyboard shortcut (Cmd+K or Ctrl+K)[0m
[0m[0m     document.addEventListener('keydown', function(e) {[0m
[0m[33m-        if ((e.metaKey || e.ctrlKey) && e.key === 'k') {[0m
[0m[33m-            e.preventDefault();[0m
[0m[33m-            searchInput.focus();[0m
[0m[33m-        }[0m
[0m[32m+      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {[0m
[0m[32m+        e.preventDefault();[0m
[0m[32m+        searchInput.focus();[0m
[0m[32m+      }[0m
[0m[0m     });[0m
[0m[0m [0m
[0m[0m     // Handle Enter key to go to full search page[0m
[0m[0m     searchInput.addEventListener('keydown', function(e) {[0m
[0m[33m-        if (e.key === 'Enter') {[0m
[0m[33m-            e.preventDefault();[0m
[0m[33m-            const query = encodeURIComponent(this.value.trim());[0m
[0m[33m-            if (query) {[0m
[0m[33m-                window.location.href = `{% url 'core:search' %}?q=${query}`;[0m
[0m[33m-            }[0m
[0m[32m+      if (e.key === 'Enter') {[0m
[0m[32m+        e.preventDefault();[0m
[0m[32m+        const query = encodeURIComponent(this.value.trim());[0m
[0m[32m+        if (query) {[0m
[0m[32m+          window.location.href = `{% url 'core:search' %}?q=${query}`;[0m
[0m[0m         }[0m
[0m[32m+      }[0m
[0m[0m     });[0m
[0m[0m [0m
[0m[0m     // Handle escape key to close search[0m
[0m[0m     searchInput.addEventListener('keydown', function(e) {[0m
[0m[33m-        if (e.key === 'Escape') {[0m
[0m[33m-            this.blur();[0m
[0m[33m-            this.value = '';[0m
[0m[33m-            // Clear the results[0m
[0m[33m-            document.getElementById('search-results').innerHTML = '';[0m
[0m[33m-        }[0m
[0m[32m+      if (e.key === 'Escape') {[0m
[0m[32m+        this.blur();[0m
[0m[32m+        this.value = '';[0m
[0m[32m+        // Clear the results[0m
[0m[32m+        document.getElementById('search-results').innerHTML = '';[0m
[0m[32m+      }[0m
[0m[0m     });[0m
[0m[0m [0m
[0m[0m     // Update the HTMX request to include the query parameter[0m
[0m[0m     searchInput.addEventListener('htmx:configRequest', function(e) {[0m
[0m[33m-        e.detail.parameters.q = this.value;[0m
[0m[32m+      e.detail.parameters.q = this.value;[0m
[0m[0m     });[0m
[0m[0m [0m
[0m[0m     // Hide keyboard hint when focused[0m
[0m[0m     searchInput.addEventListener('focus', function() {[0m
[0m[33m-        const kbd = this.parentElement.querySelector('kbd');[0m
[0m[33m-        if (kbd) kbd.style.opacity = '0';[0m
[0m[32m+      const kbd = this.parentElement.querySelector('kbd');[0m
[0m[32m+      if (kbd) kbd.style.opacity = '0';[0m
[0m[0m     });[0m
[0m[0m [0m
[0m[0m     searchInput.addEventListener('blur', function() {[0m
[0m[33m-        const kbd = this.parentElement.querySelector('kbd');[0m
[0m[33m-        if (kbd) kbd.style.opacity = '1';[0m
[0m[32m+      const kbd = this.parentElement.querySelector('kbd');[0m
[0m[32m+      if (kbd) kbd.style.opacity = '1';[0m
[0m[0m     });[0m
[0m[33m-});[0m
[0m[32m+  });[0m
[0m[0m </script>[0m
[0m[32m[1m
simlane/templates/sim/events/list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,8 +1,8 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Events - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-    {% include "sim/events/list_partial.html" %}[0m
[0m[32m+  {% include "sim/events/list_partial.html" %}[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/search_results.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,144 +1,155 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Driver Search Results - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div>[0m
[0m[33m-        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Driver Search Results</h1>[0m
[0m[33m-        {% if query %}[0m
[0m[33m-            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-                Results for "{{ query }}"[0m
[0m[33m-            </p>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Driver Search Results</h1>[0m
[0m[32m+      {% if query %}<p class="text-sm text-gray-500 dark:text-gray-400 mt-1">Results for "{{ query }}"</p>{% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Search Form -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4">[0m
[0m[33m-        <form method="get" class="flex gap-4">[0m
[0m[33m-            <div class="flex-1">[0m
[0m[33m-                <input type="text"[0m
[0m[33m-                       name="q"[0m
[0m[33m-                       value="{{ query }}"[0m
[0m[33m-                       placeholder="Search drivers..."[0m
[0m[33m-                       class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white">[0m
[0m[33m-            </div>[0m
[0m[33m-            <div>[0m
[0m[33m-                <select name="simulator" class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white">[0m
[0m[33m-                    <option value="">All Simulators</option>[0m
[0m[33m-                    <!-- Note: This would need simulator options passed from the view -->[0m
[0m[33m-                </select>[0m
[0m[33m-            </div>[0m
[0m[33m-            <button type="submit" class="btn-primary">[0m
[0m[33m-                Search[0m
[0m[33m-            </button>[0m
[0m[33m-        </form>[0m
[0m[32m+      <form method="get" class="flex gap-4">[0m
[0m[32m+        <div class="flex-1">[0m
[0m[32m+          <input type="text"[0m
[0m[32m+                 name="q"[0m
[0m[32m+                 value="{{ query }}"[0m
[0m[32m+                 placeholder="Search drivers..."[0m
[0m[32m+                 class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white" />[0m
[0m[32m+        </div>[0m
[0m[32m+        <div>[0m
[0m[32m+          <select name="simulator"[0m
[0m[32m+                  class="px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-gray-700 dark:text-white">[0m
[0m[32m+            <option value="">All Simulators</option>[0m
[0m[32m+            <!-- Note: This would need simulator options passed from the view -->[0m
[0m[32m+          </select>[0m
[0m[32m+        </div>[0m
[0m[32m+        <button type="submit" class="btn-primary">Search</button>[0m
[0m[32m+      </form>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Results -->[0m
[0m[0m     <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">[0m
[0m[33m-        {% for profile in page_obj %}[0m
[0m[33m-            <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[33m-                <div class="flex items-center space-x-3 mb-3">[0m
[0m[33m-                    {% if profile.simulator.icon %}[0m
[0m[33m-                        <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-8 h-8 rounded">[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                            <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                    <div class="flex-1">[0m
[0m[33m-                        <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[33m-                        <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                {% if profile.sim_api_id %}[0m
[0m[33m-                    <p class="text-xs text-gray-400 dark:text-gray-500 mb-3">ID: {{ profile.sim_api_id }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <div class="flex space-x-2">[0m
[0m[33m-                    <a href="{{ profile.get_absolute_url }}" class="flex-1 btn-primary btn-sm text-center">[0m
[0m[33m-                        View Profile[0m
[0m[33m-                    </a>[0m
[0m[33m-                    {% if user.is_authenticated and not profile.linked_user %}[0m
[0m[33m-                        <!-- Show link button for unlinked profiles when user is authenticated -->[0m
[0m[33m-                        <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[33m-                           class="btn btn-sm border border-primary-600 text-primary-600 hover:bg-primary-50 dark:hover:bg-primary-900/20"[0m
[0m[33m-                           hx-boost="true"[0m
[0m[33m-                           hx-target="body"[0m
[0m[33m-                           title="Link to My Account">[0m
[0m[33m-                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                        </a>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[32m+      {% for profile in page_obj %}[0m
[0m[32m+        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[32m+          <div class="flex items-center space-x-3 mb-3">[0m
[0m[32m+            {% if profile.simulator.icon %}[0m
[0m[32m+              <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+                   alt="{{ profile.simulator.name }}"[0m
[0m[32m+                   class="w-8 h-8 rounded" />[0m
[0m[32m+            {% else %}[0m
[0m[32m+              <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+                <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <div class="flex-1">[0m
[0m[32m+              <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[32m+              <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[0m             </div>[0m
[0m[33m-        {% empty %}[0m
[0m[33m-            <div class="col-span-full text-center py-12">[0m
[0m[33m-                {% if query %}[0m
[0m[33m-                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-4.418 0-8-3.134-8-7 0-3.866 3.582-7 8-7s8 3.134 8 7c0 1.76-.743 3.37-1.97 4.543-.413.394-.88.718-1.384.987L12 22l-2.646-2.47z"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No profiles found</h3>[0m
[0m[33m-                    <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Try adjusting your search terms or create a profile manually.</p>[0m
[0m[33m-                    {% if user.is_authenticated %}[0m
[0m[33m-                        <div class="mt-6">[0m
[0m[33m-                            <a href="{% url 'users:sim_profile_add' %}"[0m
[0m[33m-                               class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[33m-                                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                Create Profile Manually[0m
[0m[33m-                            </a>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                    <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">Search for profiles</h3>[0m
[0m[33m-                    <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Enter a profile name or ID to find available profiles to link.</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[32m+          </div>[0m
[0m[32m+          {% if profile.sim_api_id %}[0m
[0m[32m+            <p class="text-xs text-gray-400 dark:text-gray-500 mb-3">ID: {{ profile.sim_api_id }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <div class="flex space-x-2">[0m
[0m[32m+            <a href="{{ profile.get_absolute_url }}"[0m
[0m[32m+               class="flex-1 btn-primary btn-sm text-center">View Profile</a>[0m
[0m[32m+            {% if user.is_authenticated and not profile.linked_user %}[0m
[0m[32m+              <!-- Show link button for unlinked profiles when user is authenticated -->[0m
[0m[32m+              <a href="{% url 'drivers:profile_link' profile.simulator.slug profile.sim_api_id|default:profile.profile_name %}"[0m
[0m[32m+                 class="btn btn-sm border border-primary-600 text-primary-600 hover:bg-primary-50 dark:hover:bg-primary-900/20"[0m
[0m[32m+                 hx-boost="true"[0m
[0m[32m+                 hx-target="body"[0m
[0m[32m+                 title="Link to My Account">[0m
[0m[32m+                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1">[0m
[0m[32m+                  </path>[0m
[0m[32m+                </svg>[0m
[0m[32m+              </a>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% empty %}[0m
[0m[32m+        <div class="col-span-full text-center py-12">[0m
[0m[32m+          {% if query %}[0m
[0m[32m+            <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-4.418 0-8-3.134-8-7 0-3.866 3.582-7 8-7s8 3.134 8 7c0 1.76-.743 3.37-1.97 4.543-.413.394-.88.718-1.384.987L12 22l-2.646-2.47z">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No profiles found</h3>[0m
[0m[32m+            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+              Try adjusting your search terms or create a profile manually.[0m
[0m[32m+            </p>[0m
[0m[32m+            {% if user.is_authenticated %}[0m
[0m[32m+              <div class="mt-6">[0m
[0m[32m+                <a href="{% url 'users:sim_profile_add' %}"[0m
[0m[32m+                   class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700">[0m
[0m[32m+                  <svg class="w-4 h-4 mr-2"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  Create Profile Manually[0m
[0m[32m+                </a>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[32m+              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+              </path>[0m
[0m[32m+            </svg>[0m
[0m[32m+            <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">Search for profiles</h3>[0m
[0m[32m+            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[32m+              Enter a profile name or ID to find available profiles to link.[0m
[0m[32m+            </p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endfor %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Back to All Profiles -->[0m
[0m[0m     <div class="text-center">[0m
[0m[33m-        <a href="{% url 'drivers:profiles_list' %}" class="text-primary-600 dark:text-primary-400 hover:text-primary-500">[0m
[0m[33m-            ← Back to all drivers[0m
[0m[33m-        </a>[0m
[0m[32m+      <a href="{% url 'drivers:profiles_list' %}"[0m
[0m[32m+         class="text-primary-600 dark:text-primary-400 hover:text-primary-500">← Back to all drivers</a>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Pagination -->[0m
[0m[0m     {% if page_obj.has_other_pages %}[0m
[0m[33m-        <div class="flex justify-center mt-6">[0m
[0m[33m-            <nav class="flex space-x-2">[0m
[0m[33m-                {% if page_obj.has_previous %}[0m
[0m[33m-                    <a href="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[33m-                       {% if from_profile %}hx-get="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}&from_profile=1" hx-target="#search-results-container" hx-swap="innerHTML"{% endif %}>[0m
[0m[33m-                        Previous[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[33m-                    Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[33m-                </span>[0m
[0m[33m-[0m
[0m[33m-                {% if page_obj.has_next %}[0m
[0m[33m-                    <a href="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[33m-                       {% if from_profile %}hx-get="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}&from_profile=1" hx-target="#search-results-container" hx-swap="innerHTML"{% endif %}>[0m
[0m[33m-                        Next[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </nav>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="flex justify-center mt-6">[0m
[0m[32m+        <nav class="flex space-x-2">[0m
[0m[32m+          {% if page_obj.has_previous %}[0m
[0m[32m+            <a href="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[32m+               class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[32m+               {% if from_profile %}hx-get="?page={{ page_obj.previous_page_number }}{% if query %}&q={{ query }}{% endif %}[0m
[0m[32m+               {% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}[0m
[0m[32m+               from_profile="1"[0m
[0m[32m+               "[0m
[0m[32m+               hx-target="#search-results-container"[0m
[0m[32m+               hx-swap="innerHTML"[0m
[0m[32m+               {% endif %}>Previous</a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">[0m
[0m[32m+            Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}[0m
[0m[32m+          </span>[0m
[0m[32m+          {% if page_obj.has_next %}[0m
[0m[32m+            <a href="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}{% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}{% if from_profile %}&from_profile=1{% endif %}"[0m
[0m[32m+               class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"[0m
[0m[32m+               {% if from_profile %}hx-get="?page={{ page_obj.next_page_number }}{% if query %}&q={{ query }}{% endif %}[0m
[0m[32m+               {% if selected_simulator %}&simulator={{ selected_simulator }}{% endif %}[0m
[0m[32m+               from_profile="1"[0m
[0m[32m+               "[0m
[0m[32m+               hx-target="#search-results-container"[0m
[0m[32m+               hx-swap="innerHTML"[0m
[0m[32m+               {% endif %}>Next</a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </nav>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/search_to_link_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -11,7 +11,10 @@
[0m
[0m[0m                   hx-target="#profile-content"[0m
[0m[0m                   hx-swap="innerHTML"[0m
[0m[0m                   class="inline-flex items-center text-sm text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300">[0m
[0m[33m-            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[32m+            <svg class="w-4 h-4 mr-1"[0m
[0m[32m+                 fill="none"[0m
[0m[32m+                 stroke="currentColor"[0m
[0m[32m+                 viewBox="0 0 24 24">[0m
[0m[0m               <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>[0m
[0m[0m             </svg>[0m
[0m[0m             {% trans "Back to Profiles" %}[0m
[0m[1m[34m@@ -24,7 +27,6 @@
[0m
[0m[0m       </div>[0m
[0m[0m     </div>[0m
[0m[0m   </div>[0m
[0m[33m-[0m
[0m[0m   <!-- Search and Filters -->[0m
[0m[0m   <div class="search-container mb-6">[0m
[0m[0m     <form method="get"[0m
[0m[1m[34m@@ -33,58 +35,56 @@
[0m
[0m[0m           hx-trigger="submit, keyup delay:500ms from:input[name='q']"[0m
[0m[0m           hx-swap="innerHTML"[0m
[0m[0m           class="flex flex-col sm:flex-row gap-4">[0m
[0m[33m-      <input type="hidden" name="from_profile" value="1">[0m
[0m[32m+      <input type="hidden" name="from_profile" value="1" />[0m
[0m[0m       <div class="flex-1">[0m
[0m[0m         <input type="text"[0m
[0m[0m                name="q"[0m
[0m[0m                placeholder="Search by profile name or ID..."[0m
[0m[0m                value="{{ query }}"[0m
[0m[33m-               class="form-input w-full">[0m
[0m[32m+               class="form-input w-full" />[0m
[0m[0m       </div>[0m
[0m[33m-      <select name="simulator"[0m
[0m[33m-              class="form-select">[0m
[0m[32m+      <select name="simulator" class="form-select">[0m
[0m[0m         <option value="">All Simulators</option>[0m
[0m[0m         {% for simulator in simulators %}[0m
[0m[33m-          <option value="{{ simulator.slug }}" {% if selected_simulator == simulator.slug %}selected{% endif %}>[0m
[0m[33m-            {{ simulator.name }}[0m
[0m[33m-          </option>[0m
[0m[32m+          <option value="{{ simulator.slug }}"[0m
[0m[32m+                  {% if selected_simulator == simulator.slug %}selected{% endif %}>{{ simulator.name }}</option>[0m
[0m[0m         {% endfor %}[0m
[0m[0m       </select>[0m
[0m[33m-      <button type="submit"[0m
[0m[33m-              class="btn-primary">[0m
[0m[32m+      <button type="submit" class="btn-primary">[0m
[0m[0m         <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+          </path>[0m
[0m[0m         </svg>[0m
[0m[0m       </button>[0m
[0m[0m     </form>[0m
[0m[0m   </div>[0m
[0m[33m-[0m
[0m[0m   <!-- Info Card -->[0m
[0m[0m   <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6">[0m
[0m[0m     <div class="flex">[0m
[0m[33m-      <svg class="w-5 h-5 text-blue-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>[0m
[0m[32m+      <svg class="w-5 h-5 text-blue-400 mt-0.5"[0m
[0m[32m+           fill="currentColor"[0m
[0m[32m+           viewBox="0 0 20 20">[0m
[0m[32m+        <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd">[0m
[0m[32m+        </path>[0m
[0m[0m       </svg>[0m
[0m[0m       <div class="ml-3">[0m
[0m[0m         <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">{% trans "Looking for your profile?" %}</h3>[0m
[0m[0m         <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[33m-          <p>{% trans "Search for your exact profile name or ID as it appears in the simulator. Only unlinked profiles are shown." %}</p>[0m
[0m[32m+          <p>[0m
[0m[32m+            {% trans "Search for your exact profile name or ID as it appears in the simulator. Only unlinked profiles are shown." %}[0m
[0m[32m+          </p>[0m
[0m[0m           <p class="mt-1">[0m
[0m[0m             {% trans "If you can't find your profile, you can" %}[0m
[0m[0m             <button hx-get="{% url 'users:sim_profile_add' %}"[0m
[0m[0m                     hx-target="#profile-modal"[0m
[0m[0m                     hx-swap="innerHTML"[0m
[0m[33m-                    class="font-medium underline hover:no-underline">[0m
[0m[33m-              {% trans "create a new one manually" %}[0m
[0m[33m-            </button>.[0m
[0m[32m+                    class="font-medium underline hover:no-underline">{% trans "create a new one manually" %}</button>[0m
[0m[32m+            .[0m
[0m[0m           </p>[0m
[0m[0m         </div>[0m
[0m[0m       </div>[0m
[0m[0m     </div>[0m
[0m[0m   </div>[0m
[0m[33m-[0m
[0m[0m   <!-- Search Results Container -->[0m
[0m[33m-  <div id="search-results-container">[0m
[0m[33m-    {% include 'sim/profiles/search_results_partial.html' %}[0m
[0m[33m-  </div>[0m
[0m[32m+  <div id="search-results-container">{% include 'sim/profiles/search_results_partial.html' %}</div>[0m
[0m[0m </div>[0m
[0m[32m[1m
simlane/templates/teams/stint_plan_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -740,7 +740,8 @@
[0m
[0m[0m     }[0m
[0m[0m   }, 1000);[0m
[0m[0m   {[0m
[0m[33m-    % endif %[0m
[0m[32m+    %[0m
[0m[32m+    endif %[0m
[0m[0m   }[0m
[0m[0m </script>[0m
[0m[0m <style>[0m
[0m
[0m[31m[1m5 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:05,  1.77it/s][0m 18% 2/11 [00:01<00:05,  1.54it/s][0m 45% 5/11 [00:01<00:01,  4.63it/s][0m 73% 8/11 [00:01<00:00,  7.42it/s][0m 91% 10/11 [00:01<00:00,  7.61it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/sim/events/events_list_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -2,217 +2,206 @@
[0m
[0m[0m [0m
[0m[0m <!-- Events Container -->[0m
[0m[0m <div id="events-container">[0m
[0m[33m-    <!-- Results count -->[0m
[0m[33m-    <div class="mb-6">[0m
[0m[33m-        <p class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[33m-            Showing {{ page_obj.start_index }}-{{ page_obj.end_index }} of {{ page_obj.paginator.count }} events[0m
[0m[33m-        </p>[0m
[0m[32m+  <!-- Results count -->[0m
[0m[32m+  <div class="mb-6">[0m
[0m[32m+    <p class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[32m+      Showing {{ page_obj.start_index }}-{{ page_obj.end_index }} of {{ page_obj.paginator.count }} events[0m
[0m[32m+    </p>[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Skeleton Loader (only visible when loading) -->[0m
[0m[32m+  <c-skeleton-grid count="3" class="htmx-indicator" id="loading-indicator"></c-skeleton-grid>[0m
[0m[32m+  <!-- Events Grid -->[0m
[0m[32m+  {% if page_obj.object_list %}[0m
[0m[32m+    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">[0m
[0m[32m+      {% for event in page_obj.object_list %}[0m
[0m[32m+        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-md transition-shadow">[0m
[0m[32m+          <!-- Event Header -->[0m
[0m[32m+          <div class="p-6 pb-4">[0m
[0m[32m+            <div class="flex items-start justify-between mb-3">[0m
[0m[32m+              <div class="flex-1">[0m
[0m[32m+                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">[0m
[0m[32m+                  <a href="{% url 'events:event_detail' event.slug %}"[0m
[0m[32m+                     class="hover:text-blue-600 dark:hover:text-blue-400">{{ event.name }}</a>[0m
[0m[32m+                </h3>[0m
[0m[32m+                <!-- Event Source/Type Badge -->[0m
[0m[32m+                <div class="flex items-center space-x-2 mb-2">[0m
[0m[32m+                  {% if event.event_source == 'SERIES' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[32m+                      Official Series[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% elif event.event_source == 'SPECIAL' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200">[0m
[0m[32m+                      Special Event[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% elif event.event_source == 'CLUB' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">[0m
[0m[32m+                      Club Event[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% else %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[32m+                      Community[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                  <!-- Status Badge -->[0m
[0m[32m+                  {% if event.status == 'SCHEDULED' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">[0m
[0m[32m+                      {{ event.get_status_display }}[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% elif event.status == 'ONGOING' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200">[0m
[0m[32m+                      {{ event.get_status_display }}[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% elif event.status == 'COMPLETED' %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[32m+                      {{ event.get_status_display }}[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% else %}[0m
[0m[32m+                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[32m+                      {{ event.get_status_display }}[0m
[0m[32m+                    </span>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+              <!-- Simulator Icon -->[0m
[0m[32m+              <div class="flex-shrink-0 ml-3">[0m
[0m[32m+                {% if event.simulator.icon %}[0m
[0m[32m+                  <img src="{{ event.simulator.icon.url }}"[0m
[0m[32m+                       alt="{{ event.simulator.name }}"[0m
[0m[32m+                       class="w-8 h-8 rounded" />[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  <div class="w-8 h-8 bg-gray-200 dark:bg-gray-600 rounded flex items-center justify-center">[0m
[0m[32m+                    <span class="text-xs font-medium text-gray-600 dark:text-gray-300">{{ event.simulator.name|first }}</span>[0m
[0m[32m+                  </div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Track Information -->[0m
[0m[32m+            <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+              <div class="flex items-center">[0m
[0m[32m+                <svg class="w-4 h-4 mr-1"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">[0m
[0m[32m+                  </path>[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+                </svg>[0m
[0m[32m+                <span>{{ event.sim_layout.sim_track.track_model.name }}</span>[0m
[0m[32m+                {% if event.sim_layout.name != event.sim_layout.sim_track.track_model.name %}[0m
[0m[32m+                  <span class="text-gray-500 dark:text-gray-500 ml-1">({{ event.sim_layout.name }})</span>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+              {% if event.sim_layout.sim_track.track_model.country %}[0m
[0m[32m+                <div class="text-xs text-gray-500 dark:text-gray-500 mt-1">{{ event.sim_layout.sim_track.track_model.country }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Series Information -->[0m
[0m[32m+            {% if event.series %}[0m
[0m[32m+              <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+                <div class="flex items-center">[0m
[0m[32m+                  <svg class="w-4 h-4 mr-1"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  <span>{{ event.series.name }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <!-- Organizer Information -->[0m
[0m[32m+            {% if event.organizing_club %}[0m
[0m[32m+              <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+                <span class="font-medium">Organized by:</span> {{ event.organizing_club.name }}[0m
[0m[32m+              </div>[0m
[0m[32m+            {% elif event.organizing_user %}[0m
[0m[32m+              <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+                <span class="font-medium">Organized by:</span> {{ event.organizing_user.get_full_name|default:event.organizing_user.username }}[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <!-- Description Preview -->[0m
[0m[32m+            {% if event.description %}[0m
[0m[32m+              <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">{{ event.description|truncatewords:20 }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Event Footer with Time Slots Info -->[0m
[0m[32m+          <div class="px-6 py-4 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600">[0m
[0m[32m+            {% if event.time_slots.all %}[0m
[0m[32m+              <div class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[32m+                <div class="flex items-center justify-between">[0m
[0m[32m+                  <span>{{ event.time_slots.all|length }} time slot{{ event.time_slots.all|pluralize }}</span>[0m
[0m[32m+                  {% with next_instance=event.time_slots.all|first %}[0m
[0m[32m+                    {% if next_instance %}<span class="text-xs">Next: {{ next_instance.start_time|date:"M j, Y H:i" }}</span>{% endif %}[0m
[0m[32m+                  {% endwith %}[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% else %}[0m
[0m[32m+              <div class="text-sm text-gray-500 dark:text-gray-500">No scheduled time slots</div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if event.is_team_event %}[0m
[0m[32m+              <div class="mt-2">[0m
[0m[32m+                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[32m+                  Team Event[0m
[0m[32m+                </span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endfor %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <!-- Skeleton Loader (only visible when loading) -->[0m
[0m[33m-    <c-skeleton-grid count="3" class="htmx-indicator" id="loading-indicator"></c-skeleton-grid>[0m
[0m[33m-[0m
[0m[33m-    <!-- Events Grid -->[0m
[0m[33m-    {% if page_obj.object_list %}[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">[0m
[0m[33m-            {% for event in page_obj.object_list %}[0m
[0m[33m-                <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-md transition-shadow">[0m
[0m[33m-                    <!-- Event Header -->[0m
[0m[33m-                    <div class="p-6 pb-4">[0m
[0m[33m-                        <div class="flex items-start justify-between mb-3">[0m
[0m[33m-                            <div class="flex-1">[0m
[0m[33m-                                <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1">[0m
[0m[33m-                                    <a href="{% url 'events:event_detail' event.slug %}" class="hover:text-blue-600 dark:hover:text-blue-400">[0m
[0m[33m-                                        {{ event.name }}[0m
[0m[33m-                                    </a>[0m
[0m[33m-                                </h3>[0m
[0m[33m-[0m
[0m[33m-                                <!-- Event Source/Type Badge -->[0m
[0m[33m-                                <div class="flex items-center space-x-2 mb-2">[0m
[0m[33m-                                    {% if event.event_source == 'SERIES' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[33m-                                            Official Series[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% elif event.event_source == 'SPECIAL' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 dark:bg-purple-900 text-purple-800 dark:text-purple-200">[0m
[0m[33m-                                            Special Event[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% elif event.event_source == 'CLUB' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">[0m
[0m[33m-                                            Club Event[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% else %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[33m-                                            Community[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                                    <!-- Status Badge -->[0m
[0m[33m-                                    {% if event.status == 'SCHEDULED' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200">[0m
[0m[33m-                                            {{ event.get_status_display }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% elif event.status == 'ONGOING' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-yellow-100 dark:bg-yellow-900 text-yellow-800 dark:text-yellow-200">[0m
[0m[33m-                                            {{ event.get_status_display }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% elif event.status == 'COMPLETED' %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[33m-                                            {{ event.get_status_display }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% else %}[0m
[0m[33m-                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-gray-200">[0m
[0m[33m-                                            {{ event.get_status_display }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            </div>[0m
[0m[33m-[0m
[0m[33m-                            <!-- Simulator Icon -->[0m
[0m[33m-                            <div class="flex-shrink-0 ml-3">[0m
[0m[33m-                                {% if event.simulator.icon %}[0m
[0m[33m-                                    <img src="{{ event.simulator.icon.url }}" alt="{{ event.simulator.name }}" class="w-8 h-8 rounded">[0m
[0m[33m-                                {% else %}[0m
[0m[33m-                                    <div class="w-8 h-8 bg-gray-200 dark:bg-gray-600 rounded flex items-center justify-center">[0m
[0m[33m-                                        <span class="text-xs font-medium text-gray-600 dark:text-gray-300">{{ event.simulator.name|first }}</span>[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Track Information -->[0m
[0m[33m-                        <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[33m-                            <div class="flex items-center">[0m
[0m[33m-                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span>{{ event.sim_layout.sim_track.track_model.name }}</span>[0m
[0m[33m-                                {% if event.sim_layout.name != event.sim_layout.sim_track.track_model.name %}[0m
[0m[33m-                                    <span class="text-gray-500 dark:text-gray-500 ml-1">({{ event.sim_layout.name }})</span>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                            {% if event.sim_layout.sim_track.track_model.country %}[0m
[0m[33m-                                <div class="text-xs text-gray-500 dark:text-gray-500 mt-1">{{ event.sim_layout.sim_track.track_model.country }}</div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Series Information -->[0m
[0m[33m-                        {% if event.series %}[0m
[0m[33m-                            <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[33m-                                <div class="flex items-center">[0m
[0m[33m-                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                    <span>{{ event.series.name }}</span>[0m
[0m[33m-                                </div>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        <!-- Organizer Information -->[0m
[0m[33m-                        {% if event.organizing_club %}[0m
[0m[33m-                            <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[33m-                                <span class="font-medium">Organized by:</span> {{ event.organizing_club.name }}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% elif event.organizing_user %}[0m
[0m[33m-                            <div class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[33m-                                <span class="font-medium">Organized by:</span> {{ event.organizing_user.get_full_name|default:event.organizing_user.username }}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        <!-- Description Preview -->[0m
[0m[33m-                        {% if event.description %}[0m
[0m[33m-                            <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2">[0m
[0m[33m-                                {{ event.description|truncatewords:20 }}[0m
[0m[33m-                            </p>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Event Footer with Time Slots Info -->[0m
[0m[33m-                    <div class="px-6 py-4 bg-gray-50 dark:bg-gray-700/50 border-t border-gray-200 dark:border-gray-600">[0m
[0m[33m-                        {% if event.time_slots.all %}[0m
[0m[33m-                            <div class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[33m-                                <div class="flex items-center justify-between">[0m
[0m[33m-                                    <span>{{ event.time_slots.all|length }} time slot{{ event.time_slots.all|pluralize }}</span>[0m
[0m[33m-                                    {% with next_instance=event.time_slots.all|first %}[0m
[0m[33m-                                        {% if next_instance %}[0m
[0m[33m-                                            <span class="text-xs">[0m
[0m[33m-                                                Next: {{ next_instance.start_time|date:"M j, Y H:i" }}[0m
[0m[33m-                                            </span>[0m
[0m[33m-                                        {% endif %}[0m
[0m[33m-                                    {% endwith %}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% else %}[0m
[0m[33m-                            <div class="text-sm text-gray-500 dark:text-gray-500">[0m
[0m[33m-                                No scheduled time slots[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        {% if event.is_team_event %}[0m
[0m[33m-                            <div class="mt-2">[0m
[0m[33m-                                <span class="inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200">[0m
[0m[33m-                                    Team Event[0m
[0m[33m-                                </span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Pagination -->[0m
[0m[33m-        {% if page_obj.has_other_pages %}[0m
[0m[33m-            <div class="flex justify-center">[0m
[0m[33m-                <nav class="flex items-center space-x-2">[0m
[0m[33m-                    {% if page_obj.has_previous %}[0m
[0m[33m-                        <a href="?page={{ page_obj.previous_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                           hx-get="?page={{ page_obj.previous_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                           hx-target="#events-container"[0m
[0m[33m-                           hx-push-url="true"[0m
[0m[33m-                           class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[33m-                            Previous[0m
[0m[33m-                        </a>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    {% for num in page_obj.paginator.page_range %}[0m
[0m[33m-                        {% if page_obj.number == num %}[0m
[0m[33m-                            <span class="px-3 py-2 text-sm text-white bg-blue-600 dark:bg-blue-500 border border-blue-600 dark:border-blue-500 rounded-md">[0m
[0m[33m-                                {{ num }}[0m
[0m[33m-                            </span>[0m
[0m[33m-                        {% elif num > page_obj.number|add:'-3' and num < page_obj.number|add:'3' %}[0m
[0m[33m-                            <a href="?page={{ num }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                               hx-get="?page={{ num }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                               hx-target="#events-container"[0m
[0m[33m-                               hx-push-url="true"[0m
[0m[33m-                               class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[33m-                                {{ num }}[0m
[0m[33m-                            </a>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    {% endfor %}[0m
[0m[33m-[0m
[0m[33m-                    {% if page_obj.has_next %}[0m
[0m[33m-                        <a href="?page={{ page_obj.next_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                           hx-get="?page={{ page_obj.next_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[33m-                           hx-target="#events-container"[0m
[0m[33m-                           hx-push-url="true"[0m
[0m[33m-                           class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[33m-                            Next[0m
[0m[33m-                        </a>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </nav>[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endif %}[0m
[0m[33m-    {% else %}[0m
[0m[33m-        <!-- No events found -->[0m
[0m[33m-        <div class="text-center py-12">[0m
[0m[33m-            <svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>[0m
[0m[33m-            </svg>[0m
[0m[33m-            <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No events found</h3>[0m
[0m[33m-            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                Try adjusting your filters to find more events.[0m
[0m[33m-            </p>[0m
[0m[33m-        </div>[0m
[0m[32m+    <!-- Pagination -->[0m
[0m[32m+    {% if page_obj.has_other_pages %}[0m
[0m[32m+      <div class="flex justify-center">[0m
[0m[32m+        <nav class="flex items-center space-x-2">[0m
[0m[32m+          {% if page_obj.has_previous %}[0m
[0m[32m+            <a href="?page={{ page_obj.previous_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+               hx-get="?page={{ page_obj.previous_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+               hx-target="#events-container"[0m
[0m[32m+               hx-push-url="true"[0m
[0m[32m+               class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[32m+              Previous[0m
[0m[32m+            </a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          {% for num in page_obj.paginator.page_range %}[0m
[0m[32m+            {% if page_obj.number == num %}[0m
[0m[32m+              <span class="px-3 py-2 text-sm text-white bg-blue-600 dark:bg-blue-500 border border-blue-600 dark:border-blue-500 rounded-md">[0m
[0m[32m+                {{ num }}[0m
[0m[32m+              </span>[0m
[0m[32m+            {% elif num > page_obj.number|add:'-3' and num < page_obj.number|add:'3' %}[0m
[0m[32m+              <a href="?page={{ num }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+                 hx-get="?page={{ num }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+                 hx-target="#events-container"[0m
[0m[32m+                 hx-push-url="true"[0m
[0m[32m+                 class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[32m+                {{ num }}[0m
[0m[32m+              </a>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+          {% if page_obj.has_next %}[0m
[0m[32m+            <a href="?page={{ page_obj.next_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+               hx-get="?page={{ page_obj.next_page_number }}{% if current_filters.simulator %}&simulator={{ current_filters.simulator }}{% endif %}{% if current_filters.source %}&source={{ current_filters.source }}{% endif %}{% if current_filters.status %}&status={{ current_filters.status }}{% endif %}{% if current_filters.q %}&q={{ current_filters.q }}{% endif %}"[0m
[0m[32m+               hx-target="#events-container"[0m
[0m[32m+               hx-push-url="true"[0m
[0m[32m+               class="px-3 py-2 text-sm text-gray-600 dark:text-gray-400 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[32m+              Next[0m
[0m[32m+            </a>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </nav>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[32m+  {% else %}[0m
[0m[32m+    <!-- No events found -->[0m
[0m[32m+    <div class="text-center py-12">[0m
[0m[32m+      <svg class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-500"[0m
[0m[32m+           fill="none"[0m
[0m[32m+           viewBox="0 0 24 24"[0m
[0m[32m+           stroke="currentColor">[0m
[0m[32m+        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z">[0m
[0m[32m+        </path>[0m
[0m[32m+      </svg>[0m
[0m[32m+      <h3 class="mt-2 text-sm font-medium text-gray-900 dark:text-white">No events found</h3>[0m
[0m[32m+      <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">Try adjusting your filters to find more events.</p>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% endif %}[0m
[0m[0m </div>[0m
[0m[32m[1m
simlane/templates/sim/profiles/list.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,7 +1,6 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}Sim Racing Drivers - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-    {% include 'sim/profiles/list_partial.html' %}[0m
[0m[32m+  {% include 'sim/profiles/list_partial.html' %}[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/teams/club_event_signups_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,123 +1,96 @@
[0m
[0m[0m <!-- Open Signups -->[0m
[0m[0m {% if open_signups %}[0m
[0m[33m-<div class="mb-8">[0m
[0m[32m+  <div class="mb-8">[0m
[0m[0m     <h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-gray-100">Open Signups</h2>[0m
[0m[0m     <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">[0m
[0m[33m-        {% for sheet in open_signups %}[0m
[0m[32m+      {% for sheet in open_signups %}[0m
[0m[0m         <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-            <div class="mb-4">[0m
[0m[33m-                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">[0m
[0m[33m-                    {{ sheet.title }}[0m
[0m[33m-                </h3>[0m
[0m[33m-                <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">[0m
[0m[33m-                    {{ sheet.event.name }}[0m
[0m[33m-                </p>[0m
[0m[32m+          <div class="mb-4">[0m
[0m[32m+            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">{{ sheet.title }}</h3>[0m
[0m[32m+            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{{ sheet.event.name }}</p>[0m
[0m[32m+          </div>[0m
[0m[32m+          {% if sheet.description %}[0m
[0m[32m+            <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">{{ sheet.description|truncatewords:20 }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <div class="space-y-2 text-sm">[0m
[0m[32m+            <div class="flex items-center justify-between">[0m
[0m[32m+              <span class="text-gray-500 dark:text-gray-400">Signups:</span>[0m
[0m[32m+              <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[32m+                {{ sheet.signup_count }}[0m
[0m[32m+                {% if sheet.max_teams %}[0m
[0m[32m+                  / {% widthratio sheet.max_teams 1 sheet.target_team_size %} max[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </span>[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            {% if sheet.description %}[0m
[0m[33m-            <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">[0m
[0m[33m-                {{ sheet.description|truncatewords:20 }}[0m
[0m[33m-            </p>[0m
[0m[32m+            <div class="flex items-center justify-between">[0m
[0m[32m+              <span class="text-gray-500 dark:text-gray-400">Closes:</span>[0m
[0m[32m+              <span class="font-medium text-gray-900 dark:text-gray-100">{{ sheet.signup_closes|date:"M j, H:i" }}</span>[0m
[0m[32m+            </div>[0m
[0m[32m+            {% if sheet.max_teams %}[0m
[0m[32m+              <div class="flex items-center justify-between">[0m
[0m[32m+                <span class="text-gray-500 dark:text-gray-400">Teams:</span>[0m
[0m[32m+                <span class="font-medium text-gray-900 dark:text-gray-100">{{ sheet.max_teams }} max</span>[0m
[0m[32m+              </div>[0m
[0m[0m             {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <div class="space-y-2 text-sm">[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <span class="text-gray-500 dark:text-gray-400">Signups:</span>[0m
[0m[33m-                    <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                                                 {{ sheet.signup_count }}[0m
[0m[33m-                         {% if sheet.max_teams %}[0m
[0m[33m-                         / {% widthratio sheet.max_teams 1 sheet.target_team_size %} max[0m
[0m[33m-                         {% endif %}[0m
[0m[33m-                    </span>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <span class="text-gray-500 dark:text-gray-400">Closes:</span>[0m
[0m[33m-                    <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                        {{ sheet.signup_closes|date:"M j, H:i" }}[0m
[0m[33m-                    </span>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                {% if sheet.max_teams %}[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <span class="text-gray-500 dark:text-gray-400">Teams:</span>[0m
[0m[33m-                    <span class="font-medium text-gray-900 dark:text-gray-100">[0m
[0m[33m-                        {{ sheet.max_teams }} max[0m
[0m[33m-                    </span>[0m
[0m[33m-                </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <div class="mt-4 flex items-center justify-between">[0m
[0m[33m-                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">[0m
[0m[33m-                    Open[0m
[0m[33m-                </span>[0m
[0m[33m-[0m
[0m[33m-                <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}" class="text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">[0m
[0m[33m-                    View Details →[0m
[0m[33m-                </a>[0m
[0m[33m-            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="mt-4 flex items-center justify-between">[0m
[0m[32m+            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200">[0m
[0m[32m+              Open[0m
[0m[32m+            </span>[0m
[0m[32m+            <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}"[0m
[0m[32m+               class="text-sm font-medium text-blue-600 hover:text-blue-500 dark:text-blue-400 dark:hover:text-blue-300">[0m
[0m[32m+              View Details →[0m
[0m[32m+            </a>[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[32m+      {% endfor %}[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% else %}[0m
[0m[33m-<div class="mb-8">[0m
[0m[32m+  <div class="mb-8">[0m
[0m[0m     <h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-gray-100">Open Signups</h2>[0m
[0m[0m     <div class="bg-gray-50 dark:bg-gray-800/50 rounded-lg p-8 text-center">[0m
[0m[33m-        <p class="text-gray-600 dark:text-gray-400">No open signup sheets at the moment.</p>[0m
[0m[33m-        {% if can_manage %}[0m
[0m[32m+      <p class="text-gray-600 dark:text-gray-400">No open signup sheets at the moment.</p>[0m
[0m[32m+      {% if can_manage %}[0m
[0m[0m         <p class="mt-2 text-sm text-gray-500 dark:text-gray-500">[0m
[0m[33m-            Create a signup sheet to allow members to register for events.[0m
[0m[32m+          Create a signup sheet to allow members to register for events.[0m
[0m[0m         </p>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endif %}[0m
[0m[33m-[0m
[0m[0m <!-- Closed/Past Signups -->[0m
[0m[0m {% if closed_signups %}[0m
[0m[33m-<div>[0m
[0m[32m+  <div>[0m
[0m[0m     <h2 class="mb-4 text-xl font-semibold text-gray-900 dark:text-gray-100">Closed Signups</h2>[0m
[0m[0m     <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">[0m
[0m[33m-        {% for sheet in closed_signups %}[0m
[0m[32m+      {% for sheet in closed_signups %}[0m
[0m[0m         <div class="bg-gray-50 dark:bg-gray-800/50 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 p-6 opacity-75">[0m
[0m[33m-            <div class="mb-4">[0m
[0m[33m-                <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">[0m
[0m[33m-                    {{ sheet.title }}[0m
[0m[33m-                </h3>[0m
[0m[33m-                <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">[0m
[0m[33m-                    {{ sheet.event.name }}[0m
[0m[33m-                </p>[0m
[0m[32m+          <div class="mb-4">[0m
[0m[32m+            <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100">{{ sheet.title }}</h3>[0m
[0m[32m+            <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">{{ sheet.event.name }}</p>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="space-y-2 text-sm">[0m
[0m[32m+            <div class="flex items-center justify-between">[0m
[0m[32m+              <span class="text-gray-500 dark:text-gray-400">Final signups:</span>[0m
[0m[32m+              <span class="font-medium text-gray-700 dark:text-gray-300">{{ sheet.signup_count }}</span>[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            <div class="space-y-2 text-sm">[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <span class="text-gray-500 dark:text-gray-400">Final signups:</span>[0m
[0m[33m-                    <span class="font-medium text-gray-700 dark:text-gray-300">[0m
[0m[33m-                        {{ sheet.signup_count }}[0m
[0m[33m-                    </span>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div class="flex items-center justify-between">[0m
[0m[33m-                    <span class="text-gray-500 dark:text-gray-400">Closed:</span>[0m
[0m[33m-                    <span class="font-medium text-gray-700 dark:text-gray-300">[0m
[0m[33m-                        {{ sheet.signup_closes|date:"M j, H:i" }}[0m
[0m[33m-                    </span>[0m
[0m[33m-                </div>[0m
[0m[32m+            <div class="flex items-center justify-between">[0m
[0m[32m+              <span class="text-gray-500 dark:text-gray-400">Closed:</span>[0m
[0m[32m+              <span class="font-medium text-gray-700 dark:text-gray-300">{{ sheet.signup_closes|date:"M j, H:i" }}</span>[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            <div class="mt-4 flex items-center justify-between">[0m
[0m[33m-                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">[0m
[0m[33m-                    {{ sheet.status|capfirst }}[0m
[0m[33m-                </span>[0m
[0m[33m-[0m
[0m[33m-                <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}" class="text-sm font-medium text-gray-600 hover:text-gray-500 dark:text-gray-400 dark:hover:text-gray-300">[0m
[0m[33m-                    View →[0m
[0m[33m-                </a>[0m
[0m[33m-            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="mt-4 flex items-center justify-between">[0m
[0m[32m+            <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300">[0m
[0m[32m+              {{ sheet.status|capfirst }}[0m
[0m[32m+            </span>[0m
[0m[32m+            <a href="{% url 'teams:club_event_signup_detail' club.slug sheet.id %}"[0m
[0m[32m+               class="text-sm font-medium text-gray-600 hover:text-gray-500 dark:text-gray-400 dark:hover:text-gray-300">[0m
[0m[32m+              View →[0m
[0m[32m+            </a>[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[32m+      {% endfor %}[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endif %}[0m
[0m[32m[1m
simlane/templates/teams/event_signup_create_enhanced.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,266 +1,240 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m {% load webpack_loader %}[0m
[0m[0m [0m
[0m[0m {% block title %}Sign Up for {{ event.name }}{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="max-w-4xl mx-auto py-8">[0m
[0m[32m+  <div class="max-w-4xl mx-auto py-8">[0m
[0m[0m     <!-- Event Header -->[0m
[0m[0m     <div class="bg-white rounded-lg shadow-sm border mb-6">[0m
[0m[33m-        <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[33m-            <h1 class="text-2xl font-bold text-gray-900">{{ event.name }}</h1>[0m
[0m[33m-            <div class="mt-2 flex items-center space-x-4 text-sm text-gray-600">[0m
[0m[33m-                <span>📅 {{ event.start_date|date:"M d, Y" }}</span>[0m
[0m[33m-                <span>🏁 {{ event.track.name }}</span>[0m
[0m[33m-                <span>🚗 {{ event.car_class.name }}</span>[0m
[0m[33m-                {% if event.duration_hours %}[0m
[0m[33m-                    <span>⏱️ {{ event.duration_hours }}h</span>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        {% if event.description %}[0m
[0m[32m+      <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[32m+        <h1 class="text-2xl font-bold text-gray-900">{{ event.name }}</h1>[0m
[0m[32m+        <div class="mt-2 flex items-center space-x-4 text-sm text-gray-600">[0m
[0m[32m+          <span>📅 {{ event.start_date|date:"M d, Y" }}</span>[0m
[0m[32m+          <span>🏁 {{ event.track.name }}</span>[0m
[0m[32m+          <span>🚗 {{ event.car_class.name }}</span>[0m
[0m[32m+          {% if event.duration_hours %}<span>⏱️ {{ event.duration_hours }}h</span>{% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      {% if event.description %}[0m
[0m[0m         <div class="px-6 py-4">[0m
[0m[33m-            <p class="text-gray-700">{{ event.description }}</p>[0m
[0m[33m-        </div>[0m
[0m[33m-        {% endif %}[0m
[0m[32m+          <p class="text-gray-700">{{ event.description }}</p>[0m
[0m[32m+        </div>[0m
[0m[32m+      {% endif %}[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Signup Form -->[0m
[0m[0m     <form hx-post="{% url 'teams:event_signup' event.id %}"[0m
[0m[0m           hx-target="#form-container"[0m
[0m[0m           hx-swap="outerHTML"[0m
[0m[0m           class="space-y-6">[0m
[0m[33m-[0m
[0m[33m-        <div id="form-container">[0m
[0m[33m-            {% csrf_token %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Basic Preferences -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[33m-                <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[33m-                    <h2 class="text-lg font-semibold">Basic Preferences</h2>[0m
[0m[33m-                    <p class="text-sm text-gray-600 mt-1">Tell us about your car preferences and experience level</p>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div class="px-6 py-4 space-y-4">[0m
[0m[33m-                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[33m-                        <!-- Preferred Car -->[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <label for="{{ form.preferred_car.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-1">[0m
[0m[33m-                                Preferred Car[0m
[0m[33m-                            </label>[0m
[0m[33m-                            {{ form.preferred_car }}[0m
[0m[33m-                            {% if form.preferred_car.help_text %}[0m
[0m[33m-                                <p class="text-xs text-gray-500 mt-1">{{ form.preferred_car.help_text }}</p>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Backup Car -->[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <label for="{{ form.backup_car.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-1">[0m
[0m[33m-                                Backup Car[0m
[0m[33m-                            </label>[0m
[0m[33m-                            {{ form.backup_car }}[0m
[0m[33m-                            {% if form.backup_car.help_text %}[0m
[0m[33m-                                <p class="text-xs text-gray-500 mt-1">{{ form.backup_car.help_text }}</p>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Experience Level -->[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.experience_level.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-1">[0m
[0m[33m-                            Experience Level[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.experience_level }}[0m
[0m[33m-                        {% if form.experience_level.help_text %}[0m
[0m[33m-                            <p class="text-xs text-gray-500 mt-1">{{ form.experience_level.help_text }}</p>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Stint Preferences -->[0m
[0m[33m-                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <label for="{{ form.max_stint_duration.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-1">[0m
[0m[33m-                                Max Stint Duration (minutes)[0m
[0m[33m-                            </label>[0m
[0m[33m-                            {{ form.max_stint_duration }}[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <label for="{{ form.min_rest_duration.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-1">[0m
[0m[33m-                                Min Rest Between Stints (minutes)[0m
[0m[33m-                            </label>[0m
[0m[33m-                            {{ form.min_rest_duration }}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Availability Calendar -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[33m-                <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[33m-                    <h2 class="text-lg font-semibold">Your Availability</h2>[0m
[0m[33m-                    <p class="text-sm text-gray-600 mt-1">[0m
[0m[33m-                        Select the time periods when you're available to participate.[0m
[0m[33m-                        You can specify different roles (driver, spotter, strategist) and preference levels.[0m
[0m[33m-                    </p>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div class="px-6 py-4">[0m
[0m[33m-                    <!-- Timezone Selector -->[0m
[0m[33m-                    <div class="mb-4">[0m
[0m[33m-                        <label class="block text-sm font-medium text-gray-700 mb-2">[0m
[0m[33m-                            Your Timezone[0m
[0m[33m-                        </label>[0m
[0m[33m-                        <select id="user-timezone" class="w-full md:w-auto rounded-md border-gray-300">[0m
[0m[33m-                            <option value="UTC">UTC</option>[0m
[0m[33m-                            <option value="US/Eastern">US Eastern</option>[0m
[0m[33m-                            <option value="US/Central">US Central</option>[0m
[0m[33m-                            <option value="US/Mountain">US Mountain</option>[0m
[0m[33m-                            <option value="US/Pacific">US Pacific</option>[0m
[0m[33m-                            <option value="Europe/London">Europe/London</option>[0m
[0m[33m-                            <option value="Europe/Paris">Europe/Paris</option>[0m
[0m[33m-                            <option value="Europe/Berlin">Europe/Berlin</option>[0m
[0m[33m-                            <option value="Australia/Sydney">Australia/Sydney</option>[0m
[0m[33m-                        </select>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Availability Calendar Component -->[0m
[0m[33m-                    <div id="availability-input"[0m
[0m[33m-                         data-component="availability-calendar"[0m
[0m[33m-                         data-user-timezone="{{ user.profile.timezone|default:'UTC' }}"[0m
[0m[33m-                         data-event-start="{{ event.start_date|date:'c' }}"[0m
[0m[33m-                         data-event-end="{{ event.end_date|date:'c' }}"[0m
[0m[33m-                         data-existing-windows="[]">[0m
[0m[33m-                        <!-- Calendar will be initialized here -->[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Hidden field to store availability data -->[0m
[0m[33m-                    <input type="hidden" name="availability_data" id="availability-data" value="">[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Additional Notes -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[33m-                <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[33m-                    <h2 class="text-lg font-semibold">Additional Information</h2>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div class="px-6 py-4">[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.notes.id_for_label }}" class="block text-sm font-medium text-gray-700 mb-2">[0m
[0m[33m-                            Notes & Comments[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.notes }}[0m
[0m[33m-                        <p class="text-xs text-gray-500 mt-1">[0m
[0m[33m-                            Any additional information about your availability, preferences, or special requirements.[0m
[0m[33m-                        </p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Form Actions -->[0m
[0m[33m-            <div class="flex justify-end space-x-4">[0m
[0m[33m-                <a href="{% url 'teams:event_detail' event.id %}"[0m
[0m[33m-                   class="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">[0m
[0m[33m-                    Cancel[0m
[0m[33m-                </a>[0m
[0m[33m-                <button type="submit"[0m
[0m[33m-                        class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50"[0m
[0m[33m-                        id="submit-btn">[0m
[0m[33m-                    Sign Up for Event[0m
[0m[33m-                </button>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div id="form-container">[0m
[0m[32m+        {% csrf_token %}[0m
[0m[32m+        <!-- Basic Preferences -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[32m+          <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[32m+            <h2 class="text-lg font-semibold">Basic Preferences</h2>[0m
[0m[32m+            <p class="text-sm text-gray-600 mt-1">Tell us about your car preferences and experience level</p>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="px-6 py-4 space-y-4">[0m
[0m[32m+            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[32m+              <!-- Preferred Car -->[0m
[0m[32m+              <div>[0m
[0m[32m+                <label for="{{ form.preferred_car.id_for_label }}"[0m
[0m[32m+                       class="block text-sm font-medium text-gray-700 mb-1">Preferred Car</label>[0m
[0m[32m+                {{ form.preferred_car }}[0m
[0m[32m+                {% if form.preferred_car.help_text %}[0m
[0m[32m+                  <p class="text-xs text-gray-500 mt-1">{{ form.preferred_car.help_text }}</p>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+              <!-- Backup Car -->[0m
[0m[32m+              <div>[0m
[0m[32m+                <label for="{{ form.backup_car.id_for_label }}"[0m
[0m[32m+                       class="block text-sm font-medium text-gray-700 mb-1">Backup Car</label>[0m
[0m[32m+                {{ form.backup_car }}[0m
[0m[32m+                {% if form.backup_car.help_text %}[0m
[0m[32m+                  <p class="text-xs text-gray-500 mt-1">{{ form.backup_car.help_text }}</p>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Experience Level -->[0m
[0m[32m+            <div>[0m
[0m[32m+              <label for="{{ form.experience_level.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 mb-1">Experience Level</label>[0m
[0m[32m+              {{ form.experience_level }}[0m
[0m[32m+              {% if form.experience_level.help_text %}[0m
[0m[32m+                <p class="text-xs text-gray-500 mt-1">{{ form.experience_level.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Stint Preferences -->[0m
[0m[32m+            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">[0m
[0m[32m+              <div>[0m
[0m[32m+                <label for="{{ form.max_stint_duration.id_for_label }}"[0m
[0m[32m+                       class="block text-sm font-medium text-gray-700 mb-1">Max Stint Duration (minutes)</label>[0m
[0m[32m+                {{ form.max_stint_duration }}[0m
[0m[32m+              </div>[0m
[0m[32m+              <div>[0m
[0m[32m+                <label for="{{ form.min_rest_duration.id_for_label }}"[0m
[0m[32m+                       class="block text-sm font-medium text-gray-700 mb-1">Min Rest Between Stints (minutes)</label>[0m
[0m[32m+                {{ form.min_rest_duration }}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Availability Calendar -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[32m+          <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[32m+            <h2 class="text-lg font-semibold">Your Availability</h2>[0m
[0m[32m+            <p class="text-sm text-gray-600 mt-1">[0m
[0m[32m+              Select the time periods when you're available to participate.[0m
[0m[32m+              You can specify different roles (driver, spotter, strategist) and preference levels.[0m
[0m[32m+            </p>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="px-6 py-4">[0m
[0m[32m+            <!-- Timezone Selector -->[0m
[0m[32m+            <div class="mb-4">[0m
[0m[32m+              <label class="block text-sm font-medium text-gray-700 mb-2">Your Timezone</label>[0m
[0m[32m+              <select id="user-timezone"[0m
[0m[32m+                      class="w-full md:w-auto rounded-md border-gray-300">[0m
[0m[32m+                <option value="UTC">UTC</option>[0m
[0m[32m+                <option value="US/Eastern">US Eastern</option>[0m
[0m[32m+                <option value="US/Central">US Central</option>[0m
[0m[32m+                <option value="US/Mountain">US Mountain</option>[0m
[0m[32m+                <option value="US/Pacific">US Pacific</option>[0m
[0m[32m+                <option value="Europe/London">Europe/London</option>[0m
[0m[32m+                <option value="Europe/Paris">Europe/Paris</option>[0m
[0m[32m+                <option value="Europe/Berlin">Europe/Berlin</option>[0m
[0m[32m+                <option value="Australia/Sydney">Australia/Sydney</option>[0m
[0m[32m+              </select>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Availability Calendar Component -->[0m
[0m[32m+            <div id="availability-input"[0m
[0m[32m+                 data-component="availability-calendar"[0m
[0m[32m+                 data-user-timezone="{{ user.profile.timezone|default:'UTC' }}"[0m
[0m[32m+                 data-event-start="{{ event.start_date|date:'c' }}"[0m
[0m[32m+                 data-event-end="{{ event.end_date|date:'c' }}"[0m
[0m[32m+                 data-existing-windows="[]">[0m
[0m[32m+              <!-- Calendar will be initialized here -->[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Hidden field to store availability data -->[0m
[0m[32m+            <input type="hidden"[0m
[0m[32m+                   name="availability_data"[0m
[0m[32m+                   id="availability-data"[0m
[0m[32m+                   value="" />[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Additional Notes -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border">[0m
[0m[32m+          <div class="px-6 py-4 border-b border-gray-200">[0m
[0m[32m+            <h2 class="text-lg font-semibold">Additional Information</h2>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div class="px-6 py-4">[0m
[0m[32m+            <div>[0m
[0m[32m+              <label for="{{ form.notes.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 mb-2">Notes & Comments</label>[0m
[0m[32m+              {{ form.notes }}[0m
[0m[32m+              <p class="text-xs text-gray-500 mt-1">[0m
[0m[32m+                Any additional information about your availability, preferences, or special requirements.[0m
[0m[32m+              </p>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Form Actions -->[0m
[0m[32m+        <div class="flex justify-end space-x-4">[0m
[0m[32m+          <a href="{% url 'teams:event_detail' event.id %}"[0m
[0m[32m+             class="px-6 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50">Cancel</a>[0m
[0m[32m+          <button type="submit"[0m
[0m[32m+                  class="px-6 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50"[0m
[0m[32m+                  id="submit-btn">Sign Up for Event</button>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </form>[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<!-- Real-time availability validation -->[0m
[0m[33m-<div x-data="availabilityValidator()" x-init="init()">[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Real-time availability validation -->[0m
[0m[32m+  <div x-data="availabilityValidator()" x-init="init()">[0m
[0m[0m     <div x-show="showWarning"[0m
[0m[0m          class="fixed bottom-4 right-4 bg-yellow-100 border-l-4 border-yellow-500 text-yellow-700 p-4 rounded-r-lg shadow-lg max-w-md">[0m
[0m[33m-        <div class="flex">[0m
[0m[33m-            <div class="flex-shrink-0">[0m
[0m[33m-                <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[33m-                    <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div class="ml-3">[0m
[0m[33m-                <p class="text-sm font-medium" x-text="warningMessage"></p>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div class="ml-auto pl-3">[0m
[0m[33m-                <button @click="showWarning = false" class="text-yellow-400 hover:text-yellow-600">[0m
[0m[33m-                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[33m-                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>[0m
[0m[33m-                    </svg>[0m
[0m[33m-                </button>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="flex">[0m
[0m[32m+        <div class="flex-shrink-0">[0m
[0m[32m+          <svg class="h-5 w-5 text-yellow-400"[0m
[0m[32m+               viewBox="0 0 20 20"[0m
[0m[32m+               fill="currentColor">[0m
[0m[32m+            <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />[0m
[0m[32m+          </svg>[0m
[0m[32m+        </div>[0m
[0m[32m+        <div class="ml-3">[0m
[0m[32m+          <p class="text-sm font-medium" x-text="warningMessage"></p>[0m
[0m[32m+        </div>[0m
[0m[32m+        <div class="ml-auto pl-3">[0m
[0m[32m+          <button @click="showWarning = false"[0m
[0m[32m+                  class="text-yellow-400 hover:text-yellow-600">[0m
[0m[32m+            <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[32m+              <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />[0m
[0m[32m+            </svg>[0m
[0m[32m+          </button>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<script>[0m
[0m[33m-function availabilityValidator() {[0m
[0m[33m-    return {[0m
[0m[32m+  </div>[0m
[0m[32m+  <script>[0m
[0m[32m+    function availabilityValidator() {[0m
[0m[32m+      return {[0m
[0m[0m         showWarning: false,[0m
[0m[0m         warningMessage: '',[0m
[0m[0m [0m
[0m[0m         init() {[0m
[0m[33m-            // Listen for availability updates[0m
[0m[33m-            document.addEventListener('availabilityUpdated', (e) => {[0m
[0m[33m-                this.validateAvailability(e.detail.windows);[0m
[0m[33m-            });[0m
[0m[33m-[0m
[0m[33m-            // Validate on form submission[0m
[0m[33m-            document.getElementById('submit-btn').addEventListener('click', (e) => {[0m
[0m[33m-                const availabilityData = document.getElementById('availability-data').value;[0m
[0m[33m-                if (!availabilityData || availabilityData === '[]') {[0m
[0m[33m-                    e.preventDefault();[0m
[0m[33m-                    this.showWarning = true;[0m
[0m[33m-                    this.warningMessage = 'Please add at least one availability window before submitting.';[0m
[0m[33m-                }[0m
[0m[33m-            });[0m
[0m[32m+          // Listen for availability updates[0m
[0m[32m+          document.addEventListener('availabilityUpdated', (e) => {[0m
[0m[32m+            this.validateAvailability(e.detail.windows);[0m
[0m[32m+          });[0m
[0m[32m+[0m
[0m[32m+          // Validate on form submission[0m
[0m[32m+          document.getElementById('submit-btn').addEventListener('click', (e) => {[0m
[0m[32m+            const availabilityData = document.getElementById('availability-data').value;[0m
[0m[32m+            if (!availabilityData || availabilityData === '[]') {[0m
[0m[32m+              e.preventDefault();[0m
[0m[32m+              this.showWarning = true;[0m
[0m[32m+              this.warningMessage = 'Please add at least one availability window before submitting.';[0m
[0m[32m+            }[0m
[0m[32m+          });[0m
[0m[0m         },[0m
[0m[0m [0m
[0m[0m         validateAvailability(windows) {[0m
[0m[33m-            if (windows.length === 0) {[0m
[0m[33m-                this.showWarning = true;[0m
[0m[33m-                this.warningMessage = 'No availability windows defined. Add your available times to help with team formation.';[0m
[0m[33m-                return;[0m
[0m[33m-            }[0m
[0m[33m-[0m
[0m[33m-            // Calculate total availability hours[0m
[0m[33m-            const totalHours = windows.reduce((sum, window) => {[0m
[0m[33m-                const start = new Date(window.start_time);[0m
[0m[33m-                const end = new Date(window.end_time);[0m
[0m[33m-                return sum + (end - start) / (1000 * 60 * 60);[0m
[0m[33m-            }, 0);[0m
[0m[33m-[0m
[0m[33m-            if (totalHours < 2) {[0m
[0m[33m-                this.showWarning = true;[0m
[0m[33m-                this.warningMessage = `Only ${totalHours.toFixed(1)} hours of availability. Consider adding more time windows for better team formation.`;[0m
[0m[33m-            } else {[0m
[0m[33m-                this.showWarning = false;[0m
[0m[33m-            }[0m
[0m[32m+          if (windows.length === 0) {[0m
[0m[32m+            this.showWarning = true;[0m
[0m[32m+            this.warningMessage = 'No availability windows defined. Add your available times to help with team formation.';[0m
[0m[32m+            return;[0m
[0m[32m+          }[0m
[0m[32m+[0m
[0m[32m+          // Calculate total availability hours[0m
[0m[32m+          const totalHours = windows.reduce((sum, window) => {[0m
[0m[32m+            const start = new Date(window.start_time);[0m
[0m[32m+            const end = new Date(window.end_time);[0m
[0m[32m+            return sum + (end - start) / (1000 * 60 * 60);[0m
[0m[32m+          }, 0);[0m
[0m[32m+[0m
[0m[32m+          if (totalHours < 2) {[0m
[0m[32m+            this.showWarning = true;[0m
[0m[32m+            this.warningMessage = `Only ${totalHours.toFixed(1)} hours of availability. Consider adding more time windows for better team formation.`;[0m
[0m[32m+          } else {[0m
[0m[32m+            this.showWarning = false;[0m
[0m[32m+          }[0m
[0m[0m         }[0m
[0m[32m+      }[0m
[0m[0m     }[0m
[0m[33m-}[0m
[0m[33m-[0m
[0m[33m-// Update timezone when changed[0m
[0m[33m-document.getElementById('user-timezone').addEventListener('change', function(e) {[0m
[0m[33m-    const availabilityCalendar = window.availabilityCalendar;[0m
[0m[33m-    if (availabilityCalendar) {[0m
[0m[32m+[0m
[0m[32m+    // Update timezone when changed[0m
[0m[32m+    document.getElementById('user-timezone').addEventListener('change', function(e) {[0m
[0m[32m+      const availabilityCalendar = window.availabilityCalendar;[0m
[0m[32m+      if (availabilityCalendar) {[0m
[0m[0m         availabilityCalendar.options.userTimezone = e.target.value;[0m
[0m[0m         // Reinitialize if needed[0m
[0m[0m         console.log('Timezone changed to:', e.target.value);[0m
[0m[33m-    }[0m
[0m[33m-});[0m
[0m[33m-</script>[0m
[0m[32m+      }[0m
[0m[32m+    });[0m
[0m[32m+  </script>[0m
[0m[0m {% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block javascript %}[0m
[0m[33m-    {{ block.super }}[0m
[0m[33m-    {% render_bundle 'event-signup' 'js' %}[0m
[0m[32m+  {{ block.super }}[0m
[0m[32m+  {% render_bundle 'event-signup' 'js' %}[0m
[0m[0m {% endblock javascript %}[0m
[0m[32m[1m
simlane/templates/teams/invitation_response.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,155 +1,140 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Event Invitation - {{ event.name }}{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">[0m
[0m[32m+  <div class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8">[0m
[0m[0m     <div class="sm:mx-auto sm:w-full sm:max-w-md">[0m
[0m[33m-        <div class="text-center">[0m
[0m[33m-            <h2 class="text-3xl font-extrabold text-gray-900">[0m
[0m[33m-                Event Team Invitation[0m
[0m[33m-            </h2>[0m
[0m[33m-            <p class="mt-2 text-sm text-gray-600">[0m
[0m[33m-                You've been invited to join a team[0m
[0m[33m-            </p>[0m
[0m[32m+      <div class="text-center">[0m
[0m[32m+        <h2 class="text-3xl font-extrabold text-gray-900">Event Team Invitation</h2>[0m
[0m[32m+        <p class="mt-2 text-sm text-gray-600">You've been invited to join a team</p>[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">[0m
[0m[32m+      <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">[0m
[0m[32m+        <!-- Event Details -->[0m
[0m[32m+        <div class="mb-6">[0m
[0m[32m+          <h3 class="text-lg font-medium text-gray-900 mb-4">Event Details</h3>[0m
[0m[32m+          <div class="bg-gray-50 rounded-lg p-4 space-y-2">[0m
[0m[32m+            <div class="flex justify-between">[0m
[0m[32m+              <span class="text-sm text-gray-500">Event:</span>[0m
[0m[32m+              <span class="text-sm font-medium text-gray-900">{{ event.name }}</span>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div class="flex justify-between">[0m
[0m[32m+              <span class="text-sm text-gray-500">Date:</span>[0m
[0m[32m+              <span class="text-sm font-medium text-gray-900">{{ event.start_date|date:"M d, Y" }}</span>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div class="flex justify-between">[0m
[0m[32m+              <span class="text-sm text-gray-500">Track:</span>[0m
[0m[32m+              <span class="text-sm font-medium text-gray-900">{{ event.track.name }}</span>[0m
[0m[32m+            </div>[0m
[0m[32m+            {% if event.duration_hours %}[0m
[0m[32m+              <div class="flex justify-between">[0m
[0m[32m+                <span class="text-sm text-gray-500">Duration:</span>[0m
[0m[32m+                <span class="text-sm font-medium text-gray-900">{{ event.duration_hours }}h</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[32m+        <!-- Invitation Details -->[0m
[0m[32m+        <div class="mb-6">[0m
[0m[32m+          <h3 class="text-lg font-medium text-gray-900 mb-4">Invitation Details</h3>[0m
[0m[32m+          <div class="space-y-3">[0m
[0m[32m+            <div>[0m
[0m[32m+              <span class="text-sm text-gray-500">From:</span>[0m
[0m[32m+              <p class="text-sm font-medium text-gray-900">[0m
[0m[32m+                {{ organizer.get_full_name|default:organizer.username }}[0m
[0m[32m+                <span class="text-gray-500">(@{{ organizer.username }})</span>[0m
[0m[32m+              </p>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <span class="text-sm text-gray-500">Team Name:</span>[0m
[0m[32m+              <p class="text-sm font-medium text-gray-900">{{ invitation.team_name }}</p>[0m
[0m[32m+            </div>[0m
[0m[32m+            {% if invitation.message %}[0m
[0m[32m+              <div>[0m
[0m[32m+                <span class="text-sm text-gray-500">Message:</span>[0m
[0m[32m+                <p class="mt-1 text-sm text-gray-700 bg-gray-50 p-3 rounded-md">{{ invitation.message }}</p>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Status Messages -->[0m
[0m[32m+        {% if invitation.is_expired %}[0m
[0m[32m+          <div class="mb-6 bg-yellow-50 border border-yellow-200 rounded-md p-4">[0m
[0m[32m+            <div class="flex">[0m
[0m[32m+              <div class="flex-shrink-0">[0m
[0m[32m+                <svg class="h-5 w-5 text-yellow-400"[0m
[0m[32m+                     viewBox="0 0 20 20"[0m
[0m[32m+                     fill="currentColor">[0m
[0m[32m+                  <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />[0m
[0m[32m+                </svg>[0m
[0m[32m+              </div>[0m
[0m[32m+              <div class="ml-3">[0m
[0m[32m+                <h3 class="text-sm font-medium text-yellow-800">Invitation Expired</h3>[0m
[0m[32m+                <p class="mt-1 text-sm text-yellow-700">[0m
[0m[32m+                  This invitation expired on {{ invitation.expires_at|date:"M d, Y" }}.[0m
[0m[32m+                  Please contact {{ organizer.first_name|default:organizer.username }} for a new invitation.[0m
[0m[32m+                </p>[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% elif invitation.status != 'pending' %}[0m
[0m[32m+          <div class="mb-6 bg-blue-50 border border-blue-200 rounded-md p-4">[0m
[0m[32m+            <div class="flex">[0m
[0m[32m+              <div class="flex-shrink-0">[0m
[0m[32m+                <svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[32m+                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />[0m
[0m[32m+                </svg>[0m
[0m[32m+              </div>[0m
[0m[32m+              <div class="ml-3">[0m
[0m[32m+                <h3 class="text-sm font-medium text-blue-800">Already Responded</h3>[0m
[0m[32m+                <p class="mt-1 text-sm text-blue-700">You have already {{ invitation.get_status_display|lower }} this invitation.</p>[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <!-- Action Buttons -->[0m
[0m[32m+        {% if invitation.status == 'pending' and not invitation.is_expired %}[0m
[0m[32m+          <form method="post" class="space-y-4">[0m
[0m[32m+            {% csrf_token %}[0m
[0m[32m+            {% if not user.is_authenticated %}[0m
[0m[32m+              <div class="mb-4 text-sm text-gray-600 text-center">[0m
[0m[32m+                Please log in or create an account to respond to this invitation.[0m
[0m[32m+              </div>[0m
[0m[32m+              <button type="submit"[0m
[0m[32m+                      name="action"[0m
[0m[32m+                      value="accept"[0m
[0m[32m+                      class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">[0m
[0m[32m+                Log In to Accept[0m
[0m[32m+              </button>[0m
[0m[32m+            {% else %}[0m
[0m[32m+              <button type="submit"[0m
[0m[32m+                      name="action"[0m
[0m[32m+                      value="accept"[0m
[0m[32m+                      class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">[0m
[0m[32m+                Accept Invitation[0m
[0m[32m+              </button>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <button type="submit"[0m
[0m[32m+                    name="action"[0m
[0m[32m+                    value="decline"[0m
[0m[32m+                    class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">[0m
[0m[32m+              Decline Invitation[0m
[0m[32m+            </button>[0m
[0m[32m+          </form>[0m
[0m[32m+        {% else %}[0m
[0m[32m+          <div class="text-center">[0m
[0m[32m+            <a href="{% url 'core:home' %}"[0m
[0m[32m+               class="text-sm text-blue-600 hover:text-blue-800">Return to Home</a>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <!-- Additional Info -->[0m
[0m[32m+        <div class="mt-6 text-center">[0m
[0m[32m+          <p class="text-xs text-gray-500">Expires {{ invitation.expires_at|timeuntil }}</p>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">[0m
[0m[33m-        <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">[0m
[0m[33m-            <!-- Event Details -->[0m
[0m[33m-            <div class="mb-6">[0m
[0m[33m-                <h3 class="text-lg font-medium text-gray-900 mb-4">Event Details</h3>[0m
[0m[33m-                <div class="bg-gray-50 rounded-lg p-4 space-y-2">[0m
[0m[33m-                    <div class="flex justify-between">[0m
[0m[33m-                        <span class="text-sm text-gray-500">Event:</span>[0m
[0m[33m-                        <span class="text-sm font-medium text-gray-900">{{ event.name }}</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    <div class="flex justify-between">[0m
[0m[33m-                        <span class="text-sm text-gray-500">Date:</span>[0m
[0m[33m-                        <span class="text-sm font-medium text-gray-900">{{ event.start_date|date:"M d, Y" }}</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    <div class="flex justify-between">[0m
[0m[33m-                        <span class="text-sm text-gray-500">Track:</span>[0m
[0m[33m-                        <span class="text-sm font-medium text-gray-900">{{ event.track.name }}</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% if event.duration_hours %}[0m
[0m[33m-                    <div class="flex justify-between">[0m
[0m[33m-                        <span class="text-sm text-gray-500">Duration:</span>[0m
[0m[33m-                        <span class="text-sm font-medium text-gray-900">{{ event.duration_hours }}h</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Invitation Details -->[0m
[0m[33m-            <div class="mb-6">[0m
[0m[33m-                <h3 class="text-lg font-medium text-gray-900 mb-4">Invitation Details</h3>[0m
[0m[33m-                <div class="space-y-3">[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <span class="text-sm text-gray-500">From:</span>[0m
[0m[33m-                        <p class="text-sm font-medium text-gray-900">[0m
[0m[33m-                            {{ organizer.get_full_name|default:organizer.username }}[0m
[0m[33m-                            <span class="text-gray-500">(@{{ organizer.username }})</span>[0m
[0m[33m-                        </p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <span class="text-sm text-gray-500">Team Name:</span>[0m
[0m[33m-                        <p class="text-sm font-medium text-gray-900">{{ invitation.team_name }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% if invitation.message %}[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <span class="text-sm text-gray-500">Message:</span>[0m
[0m[33m-                        <p class="mt-1 text-sm text-gray-700 bg-gray-50 p-3 rounded-md">[0m
[0m[33m-                            {{ invitation.message }}[0m
[0m[33m-                        </p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Status Messages -->[0m
[0m[33m-            {% if invitation.is_expired %}[0m
[0m[33m-                <div class="mb-6 bg-yellow-50 border border-yellow-200 rounded-md p-4">[0m
[0m[33m-                    <div class="flex">[0m
[0m[33m-                        <div class="flex-shrink-0">[0m
[0m[33m-                            <svg class="h-5 w-5 text-yellow-400" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[33m-                                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <div class="ml-3">[0m
[0m[33m-                            <h3 class="text-sm font-medium text-yellow-800">[0m
[0m[33m-                                Invitation Expired[0m
[0m[33m-                            </h3>[0m
[0m[33m-                            <p class="mt-1 text-sm text-yellow-700">[0m
[0m[33m-                                This invitation expired on {{ invitation.expires_at|date:"M d, Y" }}.[0m
[0m[33m-                                Please contact {{ organizer.first_name|default:organizer.username }} for a new invitation.[0m
[0m[33m-                            </p>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% elif invitation.status != 'pending' %}[0m
[0m[33m-                <div class="mb-6 bg-blue-50 border border-blue-200 rounded-md p-4">[0m
[0m[33m-                    <div class="flex">[0m
[0m[33m-                        <div class="flex-shrink-0">[0m
[0m[33m-                            <svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[33m-                                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>[0m
[0m[33m-                            </svg>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <div class="ml-3">[0m
[0m[33m-                            <h3 class="text-sm font-medium text-blue-800">[0m
[0m[33m-                                Already Responded[0m
[0m[33m-                            </h3>[0m
[0m[33m-                            <p class="mt-1 text-sm text-blue-700">[0m
[0m[33m-                                You have already {{ invitation.get_status_display|lower }} this invitation.[0m
[0m[33m-                            </p>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Action Buttons -->[0m
[0m[33m-            {% if invitation.status == 'pending' and not invitation.is_expired %}[0m
[0m[33m-                <form method="post" class="space-y-4">[0m
[0m[33m-                    {% csrf_token %}[0m
[0m[33m-[0m
[0m[33m-                    {% if not user.is_authenticated %}[0m
[0m[33m-                        <div class="mb-4 text-sm text-gray-600 text-center">[0m
[0m[33m-                            Please log in or create an account to respond to this invitation.[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <button type="submit" name="action" value="accept"[0m
[0m[33m-                                class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">[0m
[0m[33m-                            Log In to Accept[0m
[0m[33m-                        </button>[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        <button type="submit" name="action" value="accept"[0m
[0m[33m-                                class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">[0m
[0m[33m-                            Accept Invitation[0m
[0m[33m-                        </button>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    <button type="submit" name="action" value="decline"[0m
[0m[33m-                            class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">[0m
[0m[33m-                        Decline Invitation[0m
[0m[33m-                    </button>[0m
[0m[33m-                </form>[0m
[0m[33m-            {% else %}[0m
[0m[33m-                <div class="text-center">[0m
[0m[33m-                    <a href="{% url 'core:home' %}"[0m
[0m[33m-                       class="text-sm text-blue-600 hover:text-blue-800">[0m
[0m[33m-                        Return to Home[0m
[0m[33m-                    </a>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Additional Info -->[0m
[0m[33m-            <div class="mt-6 text-center">[0m
[0m[33m-                <p class="text-xs text-gray-500">[0m
[0m[33m-                    Expires {{ invitation.expires_at|timeuntil }}[0m
[0m[33m-                </p>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-    </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m
[0m[31m[1m5 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:09,  1.00it/s][0m 18% 2/11 [00:01<00:06,  1.43it/s][0m 36% 4/11 [00:01<00:02,  3.43it/s][0m 45% 5/11 [00:01<00:01,  4.03it/s][0m 64% 7/11 [00:01<00:00,  6.22it/s][0m 82% 9/11 [00:02<00:00,  7.42it/s][0m[0m                                  [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/admin/index.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,386 +1,402 @@
[0m
[0m[0m {% extends "admin/base_site.html" %}[0m
[0m[32m+[0m
[0m[0m {% load i18n static %}[0m
[0m[0m {% load admin_urls %}[0m
[0m[0m [0m
[0m[33m-{% block title %}{% trans 'Site administration' %}{% endblock %}[0m
[0m[33m-[0m
[0m[32m+{% block title %}[0m
[0m[32m+  {% trans 'Site administration' %}[0m
[0m[32m+{% endblock %}[0m
[0m[0m {% block extrahead %}[0m
[0m[33m-    {{ block.super }}[0m
[0m[33m-    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>[0m
[0m[33m-    <style>[0m
[0m[33m-        .dashboard-stats {[0m
[0m[33m-            display: grid;[0m
[0m[33m-            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));[0m
[0m[33m-            gap: 1rem;[0m
[0m[33m-            margin-bottom: 2rem;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .stat-card {[0m
[0m[33m-            background: var(--bg-surface-primary);[0m
[0m[33m-            border: 1px solid var(--border-color-muted);[0m
[0m[33m-            border-radius: 8px;[0m
[0m[33m-            padding: 1.5rem;[0m
[0m[33m-            text-align: center;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .stat-number {[0m
[0m[33m-            font-size: 2rem;[0m
[0m[33m-            font-weight: bold;[0m
[0m[33m-            color: var(--color-primary-600);[0m
[0m[33m-            display: block;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .stat-label {[0m
[0m[33m-            font-size: 0.875rem;[0m
[0m[33m-            color: var(--text-color-muted);[0m
[0m[33m-            margin-top: 0.5rem;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .chart-container {[0m
[0m[33m-            background: var(--bg-surface-primary);[0m
[0m[33m-            border: 1px solid var(--border-color-muted);[0m
[0m[33m-            border-radius: 8px;[0m
[0m[33m-            padding: 1.5rem;[0m
[0m[33m-            margin: 2rem 0;[0m
[0m[33m-            max-width: 800px;[0m
[0m[33m-            height: 400px;[0m
[0m[33m-            position: relative;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        #signupsChart {[0m
[0m[33m-            max-height: 300px !important;[0m
[0m[33m-            height: 300px !important;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .recent-activity {[0m
[0m[33m-            display: grid;[0m
[0m[33m-            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));[0m
[0m[33m-            gap: 2rem;[0m
[0m[33m-            margin-top: 2rem;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .activity-card {[0m
[0m[33m-            background: var(--bg-surface-primary);[0m
[0m[33m-            border: 1px solid var(--border-color-muted);[0m
[0m[33m-            border-radius: 8px;[0m
[0m[33m-            padding: 1.5rem;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .activity-item {[0m
[0m[33m-            padding: 0.5rem 0;[0m
[0m[33m-            border-bottom: 1px solid var(--border-color-muted);[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .activity-item:last-child {[0m
[0m[33m-            border-bottom: none;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .growth-indicator {[0m
[0m[33m-            display: inline-flex;[0m
[0m[33m-            align-items: center;[0m
[0m[33m-            padding: 0.25rem 0.5rem;[0m
[0m[33m-            border-radius: 4px;[0m
[0m[33m-            font-size: 0.75rem;[0m
[0m[33m-            font-weight: 600;[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .growth-positive {[0m
[0m[33m-            background: rgba(34, 197, 94, 0.1);[0m
[0m[33m-            color: rgb(34, 197, 94);[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .growth-negative {[0m
[0m[33m-            background: rgba(239, 68, 68, 0.1);[0m
[0m[33m-            color: rgb(239, 68, 68);[0m
[0m[33m-        }[0m
[0m[33m-[0m
[0m[33m-        .growth-neutral {[0m
[0m[33m-            background: rgba(107, 114, 128, 0.1);[0m
[0m[33m-            color: rgb(107, 114, 128);[0m
[0m[33m-        }[0m
[0m[33m-    </style>[0m
[0m[32m+  {{ block.super }}[0m
[0m[32m+  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>[0m
[0m[32m+  <style>[0m
[0m[32m+    .dashboard-stats {[0m
[0m[32m+      display: grid;[0m
[0m[32m+      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));[0m
[0m[32m+      gap: 1rem;[0m
[0m[32m+      margin-bottom: 2rem;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .stat-card {[0m
[0m[32m+      background: var(--bg-surface-primary);[0m
[0m[32m+      border: 1px solid var(--border-color-muted);[0m
[0m[32m+      border-radius: 8px;[0m
[0m[32m+      padding: 1.5rem;[0m
[0m[32m+      text-align: center;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .stat-number {[0m
[0m[32m+      font-size: 2rem;[0m
[0m[32m+      font-weight: bold;[0m
[0m[32m+      color: var(--color-primary-600);[0m
[0m[32m+      display: block;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .stat-label {[0m
[0m[32m+      font-size: 0.875rem;[0m
[0m[32m+      color: var(--text-color-muted);[0m
[0m[32m+      margin-top: 0.5rem;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .chart-container {[0m
[0m[32m+      background: var(--bg-surface-primary);[0m
[0m[32m+      border: 1px solid var(--border-color-muted);[0m
[0m[32m+      border-radius: 8px;[0m
[0m[32m+      padding: 1.5rem;[0m
[0m[32m+      margin: 2rem 0;[0m
[0m[32m+      max-width: 800px;[0m
[0m[32m+      height: 400px;[0m
[0m[32m+      position: relative;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    #signupsChart {[0m
[0m[32m+      max-height: 300px !important;[0m
[0m[32m+      height: 300px !important;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .recent-activity {[0m
[0m[32m+      display: grid;[0m
[0m[32m+      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));[0m
[0m[32m+      gap: 2rem;[0m
[0m[32m+      margin-top: 2rem;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .activity-card {[0m
[0m[32m+      background: var(--bg-surface-primary);[0m
[0m[32m+      border: 1px solid var(--border-color-muted);[0m
[0m[32m+      border-radius: 8px;[0m
[0m[32m+      padding: 1.5rem;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .activity-item {[0m
[0m[32m+      padding: 0.5rem 0;[0m
[0m[32m+      border-bottom: 1px solid var(--border-color-muted);[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .activity-item:last-child {[0m
[0m[32m+      border-bottom: none;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .growth-indicator {[0m
[0m[32m+      display: inline-flex;[0m
[0m[32m+      align-items: center;[0m
[0m[32m+      padding: 0.25rem 0.5rem;[0m
[0m[32m+      border-radius: 4px;[0m
[0m[32m+      font-size: 0.75rem;[0m
[0m[32m+      font-weight: 600;[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .growth-positive {[0m
[0m[32m+      background: rgba(34, 197, 94, 0.1);[0m
[0m[32m+      color: rgb(34, 197, 94);[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .growth-negative {[0m
[0m[32m+      background: rgba(239, 68, 68, 0.1);[0m
[0m[32m+      color: rgb(239, 68, 68);[0m
[0m[32m+    }[0m
[0m[32m+[0m
[0m[32m+    .growth-neutral {[0m
[0m[32m+      background: rgba(107, 114, 128, 0.1);[0m
[0m[32m+      color: rgb(107, 114, 128);[0m
[0m[32m+    }[0m
[0m[32m+  </style>[0m
[0m[0m {% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div id="content-main">[0m
[0m[32m+  <div id="content-main">[0m
[0m[0m     <h1>{% trans 'SimLane Dashboard' %}</h1>[0m
[0m[33m-[0m
[0m[0m     <!-- Overview Statistics -->[0m
[0m[0m     <div class="dashboard-stats">[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_users }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Total Users' %}</div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_users }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Total Users' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_clubs }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Clubs' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_teams }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Teams' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_sim_profiles }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Sim Profiles' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_events }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Events' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_series }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Series' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ pending_contact_messages }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Pending Messages' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ total_event_participation }}</span>[0m
[0m[32m+        <div class="stat-label">{% trans 'Event Participations' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="stat-card">[0m
[0m[32m+        <span class="stat-number">{{ current_month_users }}</span>[0m
[0m[32m+        <div class="stat-label">[0m
[0m[32m+          {% trans 'This Month Signups' %}[0m
[0m[32m+          {% if growth_percentage > 0 %}[0m
[0m[32m+            <span class="growth-indicator growth-positive">+{{ growth_percentage }}%</span>[0m
[0m[32m+          {% elif growth_percentage < 0 %}[0m
[0m[32m+            <span class="growth-indicator growth-negative">{{ growth_percentage }}%</span>[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <span class="growth-indicator growth-neutral">{{ growth_percentage }}%</span>[0m
[0m[32m+          {% endif %}[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_clubs }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Clubs' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+    <!-- Charts Section -->[0m
[0m[32m+    <div style="display: grid;[0m
[0m[32m+                grid-template-columns: 1fr 1fr;[0m
[0m[32m+                gap: 2rem;[0m
[0m[32m+                margin: 2rem 0">[0m
[0m[32m+      <!-- User Signups Chart -->[0m
[0m[32m+      <div class="chart-container">[0m
[0m[32m+        <h3>{% trans 'User Signups (Last 30 Days)' %}</h3>[0m
[0m[32m+        <div style="position: relative; height: 300px;">[0m
[0m[32m+          <canvas id="signupsChart"></canvas>[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_teams }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Teams' %}</div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Event Participation Chart -->[0m
[0m[32m+      <div class="chart-container">[0m
[0m[32m+        <h3>{% trans 'Event Participation (Last 30 Days)' %}</h3>[0m
[0m[32m+        <div style="position: relative; height: 300px;">[0m
[0m[32m+          <canvas id="participationChart"></canvas>[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_sim_profiles }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Sim Profiles' %}</div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_events }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Events' %}</div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_series }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Series' %}</div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ pending_contact_messages }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Pending Messages' %}</div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ total_event_participation }}</span>[0m
[0m[33m-            <div class="stat-label">{% trans 'Event Participations' %}</div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="stat-card">[0m
[0m[33m-            <span class="stat-number">{{ current_month_users }}</span>[0m
[0m[33m-            <div class="stat-label">[0m
[0m[33m-                {% trans 'This Month Signups' %}[0m
[0m[33m-                {% if growth_percentage > 0 %}[0m
[0m[33m-                    <span class="growth-indicator growth-positive">+{{ growth_percentage }}%</span>[0m
[0m[33m-                {% elif growth_percentage < 0 %}[0m
[0m[33m-                    <span class="growth-indicator growth-negative">{{ growth_percentage }}%</span>[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <span class="growth-indicator growth-neutral">{{ growth_percentage }}%</span>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <!-- Charts Section -->[0m
[0m[33m-    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 2rem; margin: 2rem 0;">[0m
[0m[33m-        <!-- User Signups Chart -->[0m
[0m[33m-        <div class="chart-container">[0m
[0m[33m-            <h3>{% trans 'User Signups (Last 30 Days)' %}</h3>[0m
[0m[33m-            <div style="position: relative; height: 300px;">[0m
[0m[33m-                <canvas id="signupsChart"></canvas>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Event Participation Chart -->[0m
[0m[33m-        <div class="chart-container">[0m
[0m[33m-            <h3>{% trans 'Event Participation (Last 30 Days)' %}</h3>[0m
[0m[33m-            <div style="position: relative; height: 300px;">[0m
[0m[33m-                <canvas id="participationChart"></canvas>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-    </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Participation Status Chart -->[0m
[0m[0m     <div class="chart-container" style="max-width: 600px;">[0m
[0m[33m-        <h3>{% trans 'Event Participation by Status' %}</h3>[0m
[0m[33m-        <div style="position: relative; height: 300px;">[0m
[0m[33m-            <canvas id="participationStatusChart"></canvas>[0m
[0m[33m-        </div>[0m
[0m[32m+      <h3>{% trans 'Event Participation by Status' %}</h3>[0m
[0m[32m+      <div style="position: relative; height: 300px;">[0m
[0m[32m+        <canvas id="participationStatusChart"></canvas>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Recent Activity -->[0m
[0m[0m     <div class="recent-activity">[0m
[0m[33m-        <div class="activity-card">[0m
[0m[33m-            <h3>{% trans 'Recent Users' %}</h3>[0m
[0m[33m-            {% for user in recent_users %}[0m
[0m[33m-                <div class="activity-item">[0m
[0m[33m-                    <strong>{{ user.username }}</strong>[0m
[0m[33m-                    <div class="stat-label">{{ user.date_joined|date:"M d, Y H:i" }}</div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <div class="activity-item">{% trans 'No recent users' %}</div>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="activity-card">[0m
[0m[33m-            <h3>{% trans 'Recent Clubs' %}</h3>[0m
[0m[33m-            {% for club in recent_clubs %}[0m
[0m[33m-                <div class="activity-item">[0m
[0m[33m-                    <strong>{{ club.name }}</strong>[0m
[0m[33m-                    <div class="stat-label">{{ club.created_at|date:"M d, Y H:i" }}</div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <div class="activity-item">{% trans 'No recent clubs' %}</div>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <div class="activity-card">[0m
[0m[33m-            <h3>{% trans 'Recent Events' %}</h3>[0m
[0m[33m-            {% for event in recent_events %}[0m
[0m[33m-                <div class="activity-item">[0m
[0m[33m-                    <strong>{{ event.name }}</strong>[0m
[0m[33m-                    <div class="stat-label">{{ event.created_at|date:"M d, Y H:i" }}</div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <div class="activity-item">{% trans 'No recent events' %}</div>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="activity-card">[0m
[0m[32m+        <h3>{% trans 'Recent Users' %}</h3>[0m
[0m[32m+        {% for user in recent_users %}[0m
[0m[32m+          <div class="activity-item">[0m
[0m[32m+            <strong>{{ user.username }}</strong>[0m
[0m[32m+            <div class="stat-label">{{ user.date_joined|date:"M d, Y H:i" }}</div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <div class="activity-item">{% trans 'No recent users' %}</div>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="activity-card">[0m
[0m[32m+        <h3>{% trans 'Recent Clubs' %}</h3>[0m
[0m[32m+        {% for club in recent_clubs %}[0m
[0m[32m+          <div class="activity-item">[0m
[0m[32m+            <strong>{{ club.name }}</strong>[0m
[0m[32m+            <div class="stat-label">{{ club.created_at|date:"M d, Y H:i" }}</div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <div class="activity-item">{% trans 'No recent clubs' %}</div>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="activity-card">[0m
[0m[32m+        <h3>{% trans 'Recent Events' %}</h3>[0m
[0m[32m+        {% for event in recent_events %}[0m
[0m[32m+          <div class="activity-item">[0m
[0m[32m+            <strong>{{ event.name }}</strong>[0m
[0m[32m+            <div class="stat-label">{{ event.created_at|date:"M d, Y H:i" }}</div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <div class="activity-item">{% trans 'No recent events' %}</div>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<script>[0m
[0m[33m-document.addEventListener('DOMContentLoaded', function() {[0m
[0m[33m-    // User Signups Chart[0m
[0m[33m-    const ctx = document.getElementById('signupsChart').getContext('2d');[0m
[0m[33m-    const signupsChart = new Chart(ctx, {[0m
[0m[32m+  </div>[0m
[0m[32m+  <script>[0m
[0m[32m+    document.addEventListener('DOMContentLoaded', function() {[0m
[0m[32m+      // User Signups Chart[0m
[0m[32m+      const ctx = document.getElementById('signupsChart').getContext('2d');[0m
[0m[32m+      const signupsChart = new Chart(ctx, {[0m
[0m[0m         type: 'line',[0m
[0m[0m         data: {[0m
[0m[33m-            labels: {{ daily_signups_labels|safe }},[0m
[0m[33m-            datasets: [{[0m
[0m[33m-                label: '{% trans "Daily Signups" %}',[0m
[0m[33m-                data: {{ daily_signups_data|safe }},[0m
[0m[33m-                borderColor: 'rgb(147, 51, 234)',[0m
[0m[33m-                backgroundColor: 'rgba(147, 51, 234, 0.1)',[0m
[0m[33m-                borderWidth: 2,[0m
[0m[33m-                fill: true,[0m
[0m[33m-                tension: 0.4[0m
[0m[33m-            }][0m
[0m[32m+          labels: {[0m
[0m[32m+            {[0m
[0m[32m+              daily_signups_labels | safe[0m
[0m[32m+            }[0m
[0m[32m+          },[0m
[0m[32m+          datasets: [{[0m
[0m[32m+            label: '{% trans "Daily Signups" %}',[0m
[0m[32m+            data: {[0m
[0m[32m+              {[0m
[0m[32m+                daily_signups_data | safe[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            borderColor: 'rgb(147, 51, 234)',[0m
[0m[32m+            backgroundColor: 'rgba(147, 51, 234, 0.1)',[0m
[0m[32m+            borderWidth: 2,[0m
[0m[32m+            fill: true,[0m
[0m[32m+            tension: 0.4[0m
[0m[32m+          }][0m
[0m[0m         },[0m
[0m[0m         options: {[0m
[0m[33m-            responsive: true,[0m
[0m[33m-            maintainAspectRatio: false,[0m
[0m[33m-            interaction: {[0m
[0m[33m-                intersect: false,[0m
[0m[33m-                mode: 'index'[0m
[0m[33m-            },[0m
[0m[33m-            plugins: {[0m
[0m[33m-                legend: {[0m
[0m[33m-                    display: false[0m
[0m[33m-                },[0m
[0m[33m-                tooltip: {[0m
[0m[33m-                    backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[33m-                    titleColor: 'white',[0m
[0m[33m-                    bodyColor: 'white',[0m
[0m[33m-                    borderColor: 'rgb(147, 51, 234)',[0m
[0m[33m-                    borderWidth: 1[0m
[0m[33m-                }[0m
[0m[33m-            },[0m
[0m[33m-            scales: {[0m
[0m[33m-                x: {[0m
[0m[33m-                    grid: {[0m
[0m[33m-                        display: false[0m
[0m[33m-                    }[0m
[0m[33m-                },[0m
[0m[33m-                y: {[0m
[0m[33m-                    beginAtZero: true,[0m
[0m[33m-                    ticks: {[0m
[0m[33m-                        stepSize: 1,[0m
[0m[33m-                        precision: 0[0m
[0m[33m-                    },[0m
[0m[33m-                    grid: {[0m
[0m[33m-                        color: 'rgba(107, 114, 128, 0.1)'[0m
[0m[33m-                    }[0m
[0m[33m-                }[0m
[0m[33m-            }[0m
[0m[32m+          responsive: true,[0m
[0m[32m+          maintainAspectRatio: false,[0m
[0m[32m+          interaction: {[0m
[0m[32m+            intersect: false,[0m
[0m[32m+            mode: 'index'[0m
[0m[32m+          },[0m
[0m[32m+          plugins: {[0m
[0m[32m+            legend: {[0m
[0m[32m+              display: false[0m
[0m[32m+            },[0m
[0m[32m+            tooltip: {[0m
[0m[32m+              backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[32m+              titleColor: 'white',[0m
[0m[32m+              bodyColor: 'white',[0m
[0m[32m+              borderColor: 'rgb(147, 51, 234)',[0m
[0m[32m+              borderWidth: 1[0m
[0m[32m+            }[0m
[0m[32m+          },[0m
[0m[32m+          scales: {[0m
[0m[32m+            x: {[0m
[0m[32m+              grid: {[0m
[0m[32m+                display: false[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            y: {[0m
[0m[32m+              beginAtZero: true,[0m
[0m[32m+              ticks: {[0m
[0m[32m+                stepSize: 1,[0m
[0m[32m+                precision: 0[0m
[0m[32m+              },[0m
[0m[32m+              grid: {[0m
[0m[32m+                color: 'rgba(107, 114, 128, 0.1)'[0m
[0m[32m+              }[0m
[0m[32m+            }[0m
[0m[32m+          }[0m
[0m[0m         }[0m
[0m[33m-    });[0m
[0m[33m-[0m
[0m[33m-    // Event Participation Chart (Line Chart)[0m
[0m[33m-    const participationCtx = document.getElementById('participationChart').getContext('2d');[0m
[0m[33m-    const participationChart = new Chart(participationCtx, {[0m
[0m[32m+      });[0m
[0m[32m+[0m
[0m[32m+      // Event Participation Chart (Line Chart)[0m
[0m[32m+      const participationCtx = document.getElementById('participationChart').getContext('2d');[0m
[0m[32m+      const participationChart = new Chart(participationCtx, {[0m
[0m[0m         type: 'line',[0m
[0m[0m         data: {[0m
[0m[33m-            labels: {{ daily_participation_labels|safe }},[0m
[0m[33m-            datasets: [{[0m
[0m[33m-                label: '{% trans "Daily Participation" %}',[0m
[0m[33m-                data: {{ daily_participation_data|safe }},[0m
[0m[33m-                borderColor: 'rgb(16, 185, 129)',[0m
[0m[33m-                backgroundColor: 'rgba(16, 185, 129, 0.1)',[0m
[0m[33m-                borderWidth: 2,[0m
[0m[33m-                fill: true,[0m
[0m[33m-                tension: 0.4[0m
[0m[33m-            }][0m
[0m[32m+          labels: {[0m
[0m[32m+            {[0m
[0m[32m+              daily_participation_labels | safe[0m
[0m[32m+            }[0m
[0m[32m+          },[0m
[0m[32m+          datasets: [{[0m
[0m[32m+            label: '{% trans "Daily Participation" %}',[0m
[0m[32m+            data: {[0m
[0m[32m+              {[0m
[0m[32m+                daily_participation_data | safe[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            borderColor: 'rgb(16, 185, 129)',[0m
[0m[32m+            backgroundColor: 'rgba(16, 185, 129, 0.1)',[0m
[0m[32m+            borderWidth: 2,[0m
[0m[32m+            fill: true,[0m
[0m[32m+            tension: 0.4[0m
[0m[32m+          }][0m
[0m[0m         },[0m
[0m[0m         options: {[0m
[0m[33m-            responsive: true,[0m
[0m[33m-            maintainAspectRatio: false,[0m
[0m[33m-            interaction: {[0m
[0m[33m-                intersect: false,[0m
[0m[33m-                mode: 'index'[0m
[0m[33m-            },[0m
[0m[33m-            plugins: {[0m
[0m[33m-                legend: {[0m
[0m[33m-                    display: false[0m
[0m[33m-                },[0m
[0m[33m-                tooltip: {[0m
[0m[33m-                    backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[33m-                    titleColor: 'white',[0m
[0m[33m-                    bodyColor: 'white',[0m
[0m[33m-                    borderColor: 'rgb(16, 185, 129)',[0m
[0m[33m-                    borderWidth: 1[0m
[0m[33m-                }[0m
[0m[33m-            },[0m
[0m[33m-            scales: {[0m
[0m[33m-                x: {[0m
[0m[33m-                    grid: {[0m
[0m[33m-                        display: false[0m
[0m[33m-                    }[0m
[0m[33m-                },[0m
[0m[33m-                y: {[0m
[0m[33m-                    beginAtZero: true,[0m
[0m[33m-                    ticks: {[0m
[0m[33m-                        stepSize: 1,[0m
[0m[33m-                        precision: 0[0m
[0m[33m-                    },[0m
[0m[33m-                    grid: {[0m
[0m[33m-                        color: 'rgba(107, 114, 128, 0.1)'[0m
[0m[33m-                    }[0m
[0m[33m-                }[0m
[0m[33m-            }[0m
[0m[32m+          responsive: true,[0m
[0m[32m+          maintainAspectRatio: false,[0m
[0m[32m+          interaction: {[0m
[0m[32m+            intersect: false,[0m
[0m[32m+            mode: 'index'[0m
[0m[32m+          },[0m
[0m[32m+          plugins: {[0m
[0m[32m+            legend: {[0m
[0m[32m+              display: false[0m
[0m[32m+            },[0m
[0m[32m+            tooltip: {[0m
[0m[32m+              backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[32m+              titleColor: 'white',[0m
[0m[32m+              bodyColor: 'white',[0m
[0m[32m+              borderColor: 'rgb(16, 185, 129)',[0m
[0m[32m+              borderWidth: 1[0m
[0m[32m+            }[0m
[0m[32m+          },[0m
[0m[32m+          scales: {[0m
[0m[32m+            x: {[0m
[0m[32m+              grid: {[0m
[0m[32m+                display: false[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            y: {[0m
[0m[32m+              beginAtZero: true,[0m
[0m[32m+              ticks: {[0m
[0m[32m+                stepSize: 1,[0m
[0m[32m+                precision: 0[0m
[0m[32m+              },[0m
[0m[32m+              grid: {[0m
[0m[32m+                color: 'rgba(107, 114, 128, 0.1)'[0m
[0m[32m+              }[0m
[0m[32m+            }[0m
[0m[32m+          }[0m
[0m[0m         }[0m
[0m[33m-    });[0m
[0m[33m-[0m
[0m[33m-    // Participation Status Chart (Doughnut Chart)[0m
[0m[33m-    const statusCtx = document.getElementById('participationStatusChart').getContext('2d');[0m
[0m[33m-    const statusChart = new Chart(statusCtx, {[0m
[0m[32m+      });[0m
[0m[32m+[0m
[0m[32m+      // Participation Status Chart (Doughnut Chart)[0m
[0m[32m+      const statusCtx = document.getElementById('participationStatusChart').getContext('2d');[0m
[0m[32m+      const statusChart = new Chart(statusCtx, {[0m
[0m[0m         type: 'doughnut',[0m
[0m[0m         data: {[0m
[0m[33m-            labels: {{ participation_status_labels|safe }},[0m
[0m[33m-            datasets: [{[0m
[0m[33m-                data: {{ participation_status_data|safe }},[0m
[0m[33m-                backgroundColor: {{ participation_status_colors|safe }},[0m
[0m[33m-                borderWidth: 2,[0m
[0m[33m-                borderColor: '#ffffff'[0m
[0m[33m-            }][0m
[0m[32m+          labels: {[0m
[0m[32m+            {[0m
[0m[32m+              participation_status_labels | safe[0m
[0m[32m+            }[0m
[0m[32m+          },[0m
[0m[32m+          datasets: [{[0m
[0m[32m+            data: {[0m
[0m[32m+              {[0m
[0m[32m+                participation_status_data | safe[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            backgroundColor: {[0m
[0m[32m+              {[0m
[0m[32m+                participation_status_colors | safe[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            borderWidth: 2,[0m
[0m[32m+            borderColor: '#ffffff'[0m
[0m[32m+          }][0m
[0m[0m         },[0m
[0m[0m         options: {[0m
[0m[33m-            responsive: true,[0m
[0m[33m-            maintainAspectRatio: false,[0m
[0m[33m-            plugins: {[0m
[0m[33m-                legend: {[0m
[0m[33m-                    position: 'right',[0m
[0m[33m-                    labels: {[0m
[0m[33m-                        padding: 20,[0m
[0m[33m-                        usePointStyle: true[0m
[0m[33m-                    }[0m
[0m[33m-                },[0m
[0m[33m-                tooltip: {[0m
[0m[33m-                    backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[33m-                    titleColor: 'white',[0m
[0m[33m-                    bodyColor: 'white',[0m
[0m[33m-                    borderWidth: 1,[0m
[0m[33m-                    callbacks: {[0m
[0m[33m-                        label: function(context) {[0m
[0m[33m-                            const total = context.dataset.data.reduce((a, b) => a + b, 0);[0m
[0m[33m-                            const percentage = ((context.parsed * 100) / total).toFixed(1);[0m
[0m[33m-                            return context.label + ': ' + context.parsed + ' (' + percentage + '%)';[0m
[0m[33m-                        }[0m
[0m[33m-                    }[0m
[0m[32m+          responsive: true,[0m
[0m[32m+          maintainAspectRatio: false,[0m
[0m[32m+          plugins: {[0m
[0m[32m+            legend: {[0m
[0m[32m+              position: 'right',[0m
[0m[32m+              labels: {[0m
[0m[32m+                padding: 20,[0m
[0m[32m+                usePointStyle: true[0m
[0m[32m+              }[0m
[0m[32m+            },[0m
[0m[32m+            tooltip: {[0m
[0m[32m+              backgroundColor: 'rgba(0, 0, 0, 0.8)',[0m
[0m[32m+              titleColor: 'white',[0m
[0m[32m+              bodyColor: 'white',[0m
[0m[32m+              borderWidth: 1,[0m
[0m[32m+              callbacks: {[0m
[0m[32m+                label: function(context) {[0m
[0m[32m+                  const total = context.dataset.data.reduce((a, b) => a + b, 0);[0m
[0m[32m+                  const percentage = ((context.parsed * 100) / total).toFixed(1);[0m
[0m[32m+                  return context.label + ': ' + context.parsed + ' (' + percentage + '%)';[0m
[0m[0m                 }[0m
[0m[33m-            }[0m
[0m[32m+              }[0m
[0m[32m+            }[0m
[0m[32m+          }[0m
[0m[0m         }[0m
[0m[32m+      });[0m
[0m[0m     });[0m
[0m[33m-});[0m
[0m[33m-</script>[0m
[0m[32m+  </script>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/core/search/search_results_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,113 +1,122 @@
[0m
[0m[0m {% if query %}[0m
[0m[33m-    {% if results %}[0m
[0m[33m-        <div class="absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-96 overflow-y-auto z-50">[0m
[0m[33m-            <!-- Results Header -->[0m
[0m[33m-            <div class="px-3 py-2 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700/50">[0m
[0m[33m-                <div class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[33m-                    {{ total_count }} result{{ total_count|pluralize }}[0m
[0m[33m-                    {% if query_time_ms %}({{ query_time_ms|floatformat:0 }}ms){% endif %}[0m
[0m[32m+  {% if results %}[0m
[0m[32m+    <div class="absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-96 overflow-y-auto z-50">[0m
[0m[32m+      <!-- Results Header -->[0m
[0m[32m+      <div class="px-3 py-2 border-b border-gray-200 dark:border-gray-700 bg-gray-50 dark:bg-gray-700/50">[0m
[0m[32m+        <div class="text-sm text-gray-600 dark:text-gray-400">[0m
[0m[32m+          {{ total_count }} result{{ total_count|pluralize }}[0m
[0m[32m+          {% if query_time_ms %}({{ query_time_ms|floatformat:0 }}ms){% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Results List -->[0m
[0m[32m+      <div class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[32m+        {% for result in results %}[0m
[0m[32m+          <a href="{{ result.url }}"[0m
[0m[32m+             class="flex items-start gap-3 px-3 py-3 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors">[0m
[0m[32m+            <!-- Icon/Image -->[0m
[0m[32m+            {% if result.image_url %}[0m
[0m[32m+              <img src="{{ result.image_url }}"[0m
[0m[32m+                   alt="{{ result.title }}"[0m
[0m[32m+                   class="w-8 h-8 rounded object-cover flex-shrink-0" />[0m
[0m[32m+            {% else %}[0m
[0m[32m+              <div class="w-8 h-8 rounded bg-gray-200 dark:bg-gray-600 flex items-center justify-center flex-shrink-0">[0m
[0m[32m+                {% if result.type == 'user' %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% elif result.type == 'event' %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% elif result.type == 'team' %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% elif result.type == 'car' %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% elif result.type == 'track' %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  <svg class="w-4 h-4 text-gray-500"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <!-- Content -->[0m
[0m[32m+            <div class="flex-1 min-w-0">[0m
[0m[32m+              <div class="flex items-center gap-2">[0m
[0m[32m+                <span class="font-medium text-gray-900 dark:text-white truncate">{{ result.title }}</span>[0m
[0m[32m+                <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 flex-shrink-0">[0m
[0m[32m+                  {{ result.type|title }}[0m
[0m[32m+                </span>[0m
[0m[32m+              </div>[0m
[0m[32m+              <p class="text-sm text-gray-500 dark:text-gray-400 truncate">{{ result.description|truncatechars:80 }}</p>[0m
[0m[32m+              <!-- Quick metadata -->[0m
[0m[32m+              {% if result.metadata.simulator or result.metadata.country %}[0m
[0m[32m+                <div class="flex gap-2 mt-1">[0m
[0m[32m+                  {% if result.metadata.simulator %}[0m
[0m[32m+                    <span class="text-xs text-gray-400">{{ result.metadata.simulator }}</span>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                  {% if result.metadata.country %}<span class="text-xs text-gray-400">{{ result.metadata.country }}</span>{% endif %}[0m
[0m[0m                 </div>[0m
[0m[32m+              {% endif %}[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Results List -->[0m
[0m[33m-            <div class="divide-y divide-gray-200 dark:divide-gray-700">[0m
[0m[33m-                {% for result in results %}[0m
[0m[33m-                    <a[0m
[0m[33m-                        href="{{ result.url }}"[0m
[0m[33m-                        class="flex items-start gap-3 px-3 py-3 hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors"[0m
[0m[33m-                    >[0m
[0m[33m-                        <!-- Icon/Image -->[0m
[0m[33m-                        {% if result.image_url %}[0m
[0m[33m-                            <img[0m
[0m[33m-                                src="{{ result.image_url }}"[0m
[0m[33m-                                alt="{{ result.title }}"[0m
[0m[33m-                                class="w-8 h-8 rounded object-cover flex-shrink-0"[0m
[0m[33m-                            >[0m
[0m[33m-                        {% else %}[0m
[0m[33m-                            <div class="w-8 h-8 rounded bg-gray-200 dark:bg-gray-600 flex items-center justify-center flex-shrink-0">[0m
[0m[33m-                                {% if result.type == 'user' %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% elif result.type == 'event' %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% elif result.type == 'team' %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% elif result.type == 'car' %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% elif result.type == 'track' %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% else %}[0m
[0m[33m-                                    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        <!-- Content -->[0m
[0m[33m-                        <div class="flex-1 min-w-0">[0m
[0m[33m-                            <div class="flex items-center gap-2">[0m
[0m[33m-                                <span class="font-medium text-gray-900 dark:text-white truncate">[0m
[0m[33m-                                    {{ result.title }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                                <span class="inline-flex items-center px-1.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 flex-shrink-0">[0m
[0m[33m-                                    {{ result.type|title }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            </div>[0m
[0m[33m-[0m
[0m[33m-                            <p class="text-sm text-gray-500 dark:text-gray-400 truncate">[0m
[0m[33m-                                {{ result.description|truncatechars:80 }}[0m
[0m[33m-                            </p>[0m
[0m[33m-[0m
[0m[33m-                            <!-- Quick metadata -->[0m
[0m[33m-                            {% if result.metadata.simulator or result.metadata.country %}[0m
[0m[33m-                                <div class="flex gap-2 mt-1">[0m
[0m[33m-                                    {% if result.metadata.simulator %}[0m
[0m[33m-                                        <span class="text-xs text-gray-400">{{ result.metadata.simulator }}</span>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                    {% if result.metadata.country %}[0m
[0m[33m-                                        <span class="text-xs text-gray-400">{{ result.metadata.country }}</span>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Show More Link -->[0m
[0m[33m-            {% if show_more_url %}[0m
[0m[33m-                <div class="border-t border-gray-200 dark:border-gray-700 p-3">[0m
[0m[33m-                    <a[0m
[0m[33m-                        href="{{ show_more_url }}"[0m
[0m[33m-                        class="text-sm text-blue-600 dark:text-blue-400 hover:underline font-medium"[0m
[0m[33m-                    >[0m
[0m[33m-                        See all {{ total_count }} results →[0m
[0m[33m-                    </a>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[32m+          </a>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Show More Link -->[0m
[0m[32m+      {% if show_more_url %}[0m
[0m[32m+        <div class="border-t border-gray-200 dark:border-gray-700 p-3">[0m
[0m[32m+          <a href="{{ show_more_url }}"[0m
[0m[32m+             class="text-sm text-blue-600 dark:text-blue-400 hover:underline font-medium">[0m
[0m[32m+            See all {{ total_count }} results →[0m
[0m[32m+          </a>[0m
[0m[0m         </div>[0m
[0m[33m-    {% else %}[0m
[0m[33m-        <!-- No results -->[0m
[0m[33m-        <div class="absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50">[0m
[0m[33m-            <div class="px-3 py-4 text-center">[0m
[0m[33m-                <svg class="mx-auto h-6 w-6 text-gray-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-                <p class="text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-                    No results found for "{{ query }}"[0m
[0m[33m-                </p>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-    {% endif %}[0m
[0m[32m+      {% endif %}[0m
[0m[32m+    </div>[0m
[0m[32m+  {% else %}[0m
[0m[32m+    <!-- No results -->[0m
[0m[32m+    <div class="absolute top-full left-0 right-0 mt-1 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg z-50">[0m
[0m[32m+      <div class="px-3 py-4 text-center">[0m
[0m[32m+        <svg class="mx-auto h-6 w-6 text-gray-400 mb-2"[0m
[0m[32m+             fill="none"[0m
[0m[32m+             stroke="currentColor"[0m
[0m[32m+             viewBox="0 0 24 24">[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+          </path>[0m
[0m[32m+        </svg>[0m
[0m[32m+        <p class="text-sm text-gray-500 dark:text-gray-400">No results found for "{{ query }}"</p>[0m
[0m[32m+      </div>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% endif %}[0m
[0m[0m {% endif %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/search_to_link.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,76 +1,80 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}Link Sim Profile - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="flex items-center justify-between">[0m
[0m[33m-        <div>[0m
[0m[33m-            <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Link Sim Profile</h1>[0m
[0m[33m-            <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-                Search for your sim racing profile to link it to your account[0m
[0m[33m-            </p>[0m
[0m[33m-        </div>[0m
[0m[33m-        <a href="{% url 'users:profile_sim_profiles' %}"[0m
[0m[33m-           class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[33m-            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-            </svg>[0m
[0m[33m-            Manage Profiles[0m
[0m[33m-        </a>[0m
[0m[32m+      <div>[0m
[0m[32m+        <h1 class="text-2xl font-bold text-gray-900 dark:text-white">Link Sim Profile</h1>[0m
[0m[32m+        <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[32m+          Search for your sim racing profile to link it to your account[0m
[0m[32m+        </p>[0m
[0m[32m+      </div>[0m
[0m[32m+      <a href="{% url 'users:profile_sim_profiles' %}"[0m
[0m[32m+         class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700">[0m
[0m[32m+        <svg class="w-4 h-4 mr-2"[0m
[0m[32m+             fill="none"[0m
[0m[32m+             stroke="currentColor"[0m
[0m[32m+             viewBox="0 0 24 24">[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">[0m
[0m[32m+          </path>[0m
[0m[32m+          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+        </svg>[0m
[0m[32m+        Manage Profiles[0m
[0m[32m+      </a>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Search and Filters -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4">[0m
[0m[33m-        <form method="get"[0m
[0m[33m-              hx-get="{% url 'drivers:profile_search_to_link' %}"[0m
[0m[33m-              hx-target="#search-results"[0m
[0m[33m-              hx-trigger="submit, keyup delay:500ms from:input[name='q']"[0m
[0m[33m-              class="flex flex-col sm:flex-row gap-4">[0m
[0m[33m-            <input type="text"[0m
[0m[33m-                   name="q"[0m
[0m[33m-                   placeholder="Search by profile name or ID..."[0m
[0m[33m-                   value="{{ query }}"[0m
[0m[33m-                   class="flex-1 rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-primary-500 focus:ring-primary-500">[0m
[0m[33m-            <select name="simulator"[0m
[0m[33m-                    class="rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-primary-500 focus:ring-primary-500">[0m
[0m[33m-                <option value="">All Simulators</option>[0m
[0m[33m-                {% for simulator in simulators %}[0m
[0m[33m-                    <option value="{{ simulator.slug }}" {% if selected_simulator == simulator.slug %}selected{% endif %}>[0m
[0m[33m-                        {{ simulator.name }}[0m
[0m[33m-                    </option>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </select>[0m
[0m[33m-            <button type="submit"[0m
[0m[33m-                    class="px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[33m-                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>[0m
[0m[33m-                </svg>[0m
[0m[33m-            </button>[0m
[0m[33m-        </form>[0m
[0m[32m+      <form method="get"[0m
[0m[32m+            hx-get="{% url 'drivers:profile_search_to_link' %}"[0m
[0m[32m+            hx-target="#search-results"[0m
[0m[32m+            hx-trigger="submit, keyup delay:500ms from:input[name='q']"[0m
[0m[32m+            class="flex flex-col sm:flex-row gap-4">[0m
[0m[32m+        <input type="text"[0m
[0m[32m+               name="q"[0m
[0m[32m+               placeholder="Search by profile name or ID..."[0m
[0m[32m+               value="{{ query }}"[0m
[0m[32m+               class="flex-1 rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-primary-500 focus:ring-primary-500" />[0m
[0m[32m+        <select name="simulator"[0m
[0m[32m+                class="rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 dark:text-white focus:border-primary-500 focus:ring-primary-500">[0m
[0m[32m+          <option value="">All Simulators</option>[0m
[0m[32m+          {% for simulator in simulators %}[0m
[0m[32m+            <option value="{{ simulator.slug }}"[0m
[0m[32m+                    {% if selected_simulator == simulator.slug %}selected{% endif %}>{{ simulator.name }}</option>[0m
[0m[32m+          {% endfor %}[0m
[0m[32m+        </select>[0m
[0m[32m+        <button type="submit"[0m
[0m[32m+                class="px-4 py-2 border border-transparent rounded-md text-sm font-medium text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500">[0m
[0m[32m+          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z">[0m
[0m[32m+            </path>[0m
[0m[32m+          </svg>[0m
[0m[32m+        </button>[0m
[0m[32m+      </form>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Info Card -->[0m
[0m[0m     <div class="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">[0m
[0m[33m-        <div class="flex">[0m
[0m[33m-            <svg class="w-5 h-5 text-blue-400 mt-0.5" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"></path>[0m
[0m[33m-            </svg>[0m
[0m[33m-            <div class="ml-3">[0m
[0m[33m-                <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">Looking for your profile?</h3>[0m
[0m[33m-                <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[33m-                    <p>Search for your exact profile name or ID as it appears in the simulator. Only unlinked profiles are shown.</p>[0m
[0m[33m-                    <p class="mt-1">If you can't find your profile, you can <a href="{% url 'users:sim_profile_add' %}" class="font-medium underline">create a new one manually</a>.</p>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="flex">[0m
[0m[32m+        <svg class="w-5 h-5 text-blue-400 mt-0.5"[0m
[0m[32m+             fill="currentColor"[0m
[0m[32m+             viewBox="0 0 20 20">[0m
[0m[32m+          <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd">[0m
[0m[32m+          </path>[0m
[0m[32m+        </svg>[0m
[0m[32m+        <div class="ml-3">[0m
[0m[32m+          <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">Looking for your profile?</h3>[0m
[0m[32m+          <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[32m+            <p>Search for your exact profile name or ID as it appears in the simulator. Only unlinked profiles are shown.</p>[0m
[0m[32m+            <p class="mt-1">[0m
[0m[32m+              If you can't find your profile, you can <a href="{% url 'users:sim_profile_add' %}"[0m
[0m[32m+    class="font-medium underline">create a new one manually</a>.[0m
[0m[32m+            </p>[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Search Results -->[0m
[0m[33m-    <div id="search-results">[0m
[0m[33m-        {% include 'sim/profiles/search_results.html' %}[0m
[0m[33m-    </div>[0m
[0m[33m-</div>[0m
[0m[32m+    <div id="search-results">{% include 'sim/profiles/search_results.html' %}</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock content %}[0m
[0m[32m[1m
simlane/templates/teams/club_event_signup_edit.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,31 +1,30 @@
[0m
[0m[0m {% extends 'base.html' %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}Edit Signup - {{ signup_sheet.title }}{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="mx-auto max-w-4xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[33m-  <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Edit Signup Sheet</h1>[0m
[0m[33m-[0m
[0m[33m-  <form method="post" class="space-y-6">[0m
[0m[33m-    {% csrf_token %}[0m
[0m[33m-[0m
[0m[33m-    <!-- Signup Details (reuse create form fields) -->[0m
[0m[33m-    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 space-y-4">[0m
[0m[33m-      {% for field in form.visible_fields %}[0m
[0m[33m-        <div>[0m
[0m[33m-          <label for="{{ field.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{{ field.label }}</label>[0m
[0m[33m-          {{ field }}[0m
[0m[33m-          {% if field.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ field.help_text }}</p>{% endif %}[0m
[0m[33m-          {% if field.errors %}<p class="mt-1 text-xs text-red-600 dark:text-red-400">{{ field.errors|first }}</p>{% endif %}[0m
[0m[33m-        </div>[0m
[0m[33m-      {% endfor %}[0m
[0m[33m-    </div>[0m
[0m[33m-[0m
[0m[33m-    <div class="flex justify-end space-x-3">[0m
[0m[33m-      <a href="{% url 'teams:club_event_signup_detail' club.slug signup_sheet.id %}" class="btn btn-secondary">Cancel</a>[0m
[0m[33m-      <button type="submit" class="btn btn-primary">Save Changes</button>[0m
[0m[33m-    </div>[0m
[0m[33m-  </form>[0m
[0m[33m-</div>[0m
[0m[32m+  <div class="mx-auto max-w-4xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[32m+    <h1 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">Edit Signup Sheet</h1>[0m
[0m[32m+    <form method="post" class="space-y-6">[0m
[0m[32m+      {% csrf_token %}[0m
[0m[32m+      <!-- Signup Details (reuse create form fields) -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 space-y-4">[0m
[0m[32m+        {% for field in form.visible_fields %}[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ field.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">{{ field.label }}</label>[0m
[0m[32m+            {{ field }}[0m
[0m[32m+            {% if field.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ field.help_text }}</p>{% endif %}[0m
[0m[32m+            {% if field.errors %}<p class="mt-1 text-xs text-red-600 dark:text-red-400">{{ field.errors|first }}</p>{% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[32m+      <div class="flex justify-end space-x-3">[0m
[0m[32m+        <a href="{% url 'teams:club_event_signup_detail' club.slug signup_sheet.id %}"[0m
[0m[32m+           class="btn btn-secondary">Cancel</a>[0m
[0m[32m+        <button type="submit" class="btn btn-primary">Save Changes</button>[0m
[0m[32m+      </div>[0m
[0m[32m+    </form>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m
[0m[31m[1m4 files were updated.[0m
[0m
[0m[0m[0m[0m
[0m  0% 0/11 [00:00<?, ?it/s][0m  9% 1/11 [00:00<00:03,  3.15it/s][0m 18% 2/11 [00:00<00:02,  4.05it/s][0m 36% 4/11 [00:00<00:01,  4.39it/s][0m 55% 6/11 [00:01<00:00,  5.69it/s][0m 82% 9/11 [00:01<00:00,  8.03it/s][0m100% 11/11 [00:01<00:00,  7.78it/s][0m[0m                                   [0m[0m100% 11/11 [00:00<?, ?it/s][0m[0m100% 11/11 [00:00<?, ?it/s][0m

[0m[32m[1m
simlane/templates/sim/cars/detail.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,125 +1,125 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ car.manufacturer }} {{ car.name }} - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="space-y-6">[0m
[0m[32m+  <div class="space-y-6">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="flex text-sm text-gray-500 dark:text-gray-400">[0m
[0m[33m-        <a href="{% url 'cars_list' %}" class="hover:text-primary-600 dark:hover:text-primary-400">Cars</a>[0m
[0m[33m-        <span class="mx-2">/</span>[0m
[0m[33m-        <span class="text-gray-900 dark:text-white">{{ car.manufacturer }} {{ car.name }}</span>[0m
[0m[32m+      <a href="{% url 'cars_list' %}"[0m
[0m[32m+         class="hover:text-primary-600 dark:hover:text-primary-400">Cars</a>[0m
[0m[32m+      <span class="mx-2">/</span>[0m
[0m[32m+      <span class="text-gray-900 dark:text-white">{{ car.manufacturer }} {{ car.name }}</span>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Car Header -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 overflow-hidden">[0m
[0m[33m-        <div class="md:flex">[0m
[0m[33m-            <!-- Car Image -->[0m
[0m[33m-            <div class="md:w-1/2">[0m
[0m[33m-                {% if car.default_image_url %}[0m
[0m[33m-                    <img src="{{ car.default_image_url }}" alt="{{ car.manufacturer }} {{ car.name }}" class="w-full h-96 object-cover">[0m
[0m[33m-                {% else %}[0m
[0m[33m-                    <div class="w-full h-96 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">[0m
[0m[33m-                        <svg class="w-24 h-24 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z"></path>[0m
[0m[33m-                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0"></path>[0m
[0m[33m-                        </svg>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[32m+      <div class="md:flex">[0m
[0m[32m+        <!-- Car Image -->[0m
[0m[32m+        <div class="md:w-1/2">[0m
[0m[32m+          {% if car.default_image_url %}[0m
[0m[32m+            <img src="{{ car.default_image_url }}"[0m
[0m[32m+                 alt="{{ car.manufacturer }} {{ car.name }}"[0m
[0m[32m+                 class="w-full h-96 object-cover" />[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <div class="w-full h-96 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">[0m
[0m[32m+              <svg class="w-24 h-24 text-gray-400"[0m
[0m[32m+                   fill="none"[0m
[0m[32m+                   stroke="currentColor"[0m
[0m[32m+                   viewBox="0 0 24 24">[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17a2 2 0 11-4 0 2 2 0 014 0zM19 17a2 2 0 11-4 0 2 2 0 014 0z">[0m
[0m[32m+                </path>[0m
[0m[32m+                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16V6a1 1 0 00-1-1H4a1 1 0 00-1 1v10a1 1 0 001 1h1m8-1a1 1 0 01-1 1H9m4-1V8a1 1 0 011-1h2.586a1 1 0 01.707.293l3.414 3.414a1 1 0 01.293.707V16a1 1 0 01-1 1h-1m-6-1a1 1 0 001 1h1M5 17a2 2 0 104 0m-4 0a2 2 0 114 0m6 0a2 2 0 104 0m-4 0a2 2 0 114 0">[0m
[0m[32m+                </path>[0m
[0m[32m+              </svg>[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Car Info -->[0m
[0m[33m-            <div class="md:w-1/2 p-6">[0m
[0m[33m-                <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">[0m
[0m[33m-                    {{ car.manufacturer }} {{ car.name }}[0m
[0m[33m-                </h1>[0m
[0m[33m-[0m
[0m[33m-                <div class="flex items-center gap-4 mb-6">[0m
[0m[33m-                    <c-car-category-badge category="{{ car.category }}" size="md" />[0m
[0m[33m-                    {% if car.release_year %}[0m
[0m[33m-                        <span class="text-gray-500 dark:text-gray-400">{{ car.release_year }}</span>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                {# No per-category description #}[0m
[0m[33m-[0m
[0m[33m-                {% if car.base_specs %}[0m
[0m[33m-                    <div class="border-t border-gray-200 dark:border-gray-700 pt-4">[0m
[0m[33m-                        <h3 class="font-semibold text-gray-900 dark:text-white mb-3">Specifications</h3>[0m
[0m[33m-                        <dl class="grid grid-cols-2 gap-2 text-sm">[0m
[0m[33m-                            {% for key, value in car.base_specs.items %}[0m
[0m[33m-                                <dt class="text-gray-500 dark:text-gray-400">{{ key|title|cut:"_" }}:</dt>[0m
[0m[33m-                                <dd class="text-gray-900 dark:text-white">{{ value }}</dd>[0m
[0m[33m-                            {% endfor %}[0m
[0m[33m-                        </dl>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Car Info -->[0m
[0m[32m+        <div class="md:w-1/2 p-6">[0m
[0m[32m+          <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">{{ car.manufacturer }} {{ car.name }}</h1>[0m
[0m[32m+          <div class="flex items-center gap-4 mb-6">[0m
[0m[32m+            <c-car-category-badge category="{{ car.category }}" size="md" />[0m
[0m[32m+            {% if car.release_year %}<span class="text-gray-500 dark:text-gray-400">{{ car.release_year }}</span>{% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          {# No per-category description #}[0m
[0m[32m+          {% if car.base_specs %}[0m
[0m[32m+            <div class="border-t border-gray-200 dark:border-gray-700 pt-4">[0m
[0m[32m+              <h3 class="font-semibold text-gray-900 dark:text-white mb-3">Specifications</h3>[0m
[0m[32m+              <dl class="grid grid-cols-2 gap-2 text-sm">[0m
[0m[32m+                {% for key, value in car.base_specs.items %}[0m
[0m[32m+                  <dt class="text-gray-500 dark:text-gray-400">{{ key|title|cut:"_" }}:</dt>[0m
[0m[32m+                  <dd class="text-gray-900 dark:text-white">[0m
[0m[32m+                    {{ value }}[0m
[0m[32m+                  </dd>[0m
[0m[32m+                {% endfor %}[0m
[0m[32m+              </dl>[0m
[0m[0m             </div>[0m
[0m[32m+          {% endif %}[0m
[0m[0m         </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Simulator Availability -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Available in Simulators</h2>[0m
[0m[33m-[0m
[0m[33m-        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[33m-            {% for sim_car in car.sim_cars.all %}[0m
[0m[33m-                <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[33m-                    <div class="flex items-center gap-3 mb-3">[0m
[0m[33m-                        {% if sim_car.simulator.icon %}[0m
[0m[33m-                            <img src="{{ sim_car.simulator.icon.url }}" alt="{{ sim_car.simulator.name }}" class="w-10 h-10 rounded">[0m
[0m[33m-                        {% else %}[0m
[0m[33m-                            <div class="w-10 h-10 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                                <span class="text-lg font-bold text-white">{{ sim_car.simulator.name|first }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h3 class="font-medium text-gray-900 dark:text-white">{{ sim_car.simulator.name }}</h3>[0m
[0m[33m-                            {% if sim_car.bop_version %}[0m
[0m[33m-                                <p class="text-sm text-gray-500 dark:text-gray-400">BOP: {{ sim_car.bop_version }}</p>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    {% if sim_car.pit_data %}[0m
[0m[33m-                        <div class="text-sm text-gray-600 dark:text-gray-400 space-y-1">[0m
[0m[33m-                            <p>Fuel: {{ sim_car.pit_data.fuel_unit }}</p>[0m
[0m[33m-                            <p>Tire change: {{ sim_car.pit_data.tire_change_all_four_sec }}s</p>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    <div class="mt-3 flex items-center justify-between">[0m
[0m[33m-                        <span class="text-sm {% if sim_car.is_active %}text-green-600 dark:text-green-400{% else %}text-red-600 dark:text-red-400{% endif %}">[0m
[0m[33m-                            {% if sim_car.is_active %}Active{% else %}Inactive{% endif %}[0m
[0m[33m-                        </span>[0m
[0m[33m-                    </div>[0m
[0m[32m+      <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Available in Simulators</h2>[0m
[0m[32m+      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">[0m
[0m[32m+        {% for sim_car in car.sim_cars.all %}[0m
[0m[32m+          <div class="border border-gray-200 dark:border-gray-700 rounded-lg p-4">[0m
[0m[32m+            <div class="flex items-center gap-3 mb-3">[0m
[0m[32m+              {% if sim_car.simulator.icon %}[0m
[0m[32m+                <img src="{{ sim_car.simulator.icon.url }}"[0m
[0m[32m+                     alt="{{ sim_car.simulator.name }}"[0m
[0m[32m+                     class="w-10 h-10 rounded" />[0m
[0m[32m+              {% else %}[0m
[0m[32m+                <div class="w-10 h-10 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+                  <span class="text-lg font-bold text-white">{{ sim_car.simulator.name|first }}</span>[0m
[0m[0m                 </div>[0m
[0m[33m-            {% empty %}[0m
[0m[33m-                <p class="text-gray-500 dark:text-gray-400 col-span-full">No simulator data available.</p>[0m
[0m[33m-            {% endfor %}[0m
[0m[33m-        </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              <div>[0m
[0m[32m+                <h3 class="font-medium text-gray-900 dark:text-white">{{ sim_car.simulator.name }}</h3>[0m
[0m[32m+                {% if sim_car.bop_version %}[0m
[0m[32m+                  <p class="text-sm text-gray-500 dark:text-gray-400">BOP: {{ sim_car.bop_version }}</p>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            {% if sim_car.pit_data %}[0m
[0m[32m+              <div class="text-sm text-gray-600 dark:text-gray-400 space-y-1">[0m
[0m[32m+                <p>Fuel: {{ sim_car.pit_data.fuel_unit }}</p>[0m
[0m[32m+                <p>Tire change: {{ sim_car.pit_data.tire_change_all_four_sec }}s</p>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            <div class="mt-3 flex items-center justify-between">[0m
[0m[32m+              <span class="text-sm {% if sim_car.is_active %}text-green-600 dark:text-green-400{% else %}text-red-600 dark:text-red-400{% endif %}">[0m
[0m[32m+                {% if sim_car.is_active %}[0m
[0m[32m+                  Active[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  Inactive[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </span>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% empty %}[0m
[0m[32m+          <p class="text-gray-500 dark:text-gray-400 col-span-full">No simulator data available.</p>[0m
[0m[32m+        {% endfor %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Related Cars -->[0m
[0m[0m     {% if related_cars %}[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[33m-            <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Related Cars</h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">[0m
[0m[33m-                {% for related_car in related_cars|slice:":8" %}[0m
[0m[33m-                    <a href="{% url 'car_detail' related_car.slug %}"[0m
[0m[33m-                       class="block p-3 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition">[0m
[0m[33m-                        <h4 class="font-medium text-gray-900 dark:text-white text-sm mb-1">[0m
[0m[33m-                            {{ related_car.manufacturer }} {{ related_car.name }}[0m
[0m[33m-                        </h4>[0m
[0m[33m-                        <c-car-category-badge category="{{ related_car.category }}" size="sm" />[0m
[0m[33m-                        <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[33m-                            {{ related_car.simulator_count }} simulator{{ related_car.simulator_count|pluralize }}[0m
[0m[33m-                        </p>[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endfor %}[0m
[0m[33m-            </div>[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">[0m
[0m[32m+        <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Related Cars</h2>[0m
[0m[32m+        <div class="grid grid-cols-2 md:grid-cols-4 gap-4">[0m
[0m[32m+          {% for related_car in related_cars|slice:":8" %}[0m
[0m[32m+            <a href="{% url 'car_detail' related_car.slug %}"[0m
[0m[32m+               class="block p-3 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition">[0m
[0m[32m+              <h4 class="font-medium text-gray-900 dark:text-white text-sm mb-1">[0m
[0m[32m+                {{ related_car.manufacturer }} {{ related_car.name }}[0m
[0m[32m+              </h4>[0m
[0m[32m+              <c-car-category-badge category="{{ related_car.category }}" size="sm" />[0m
[0m[32m+              <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">[0m
[0m[32m+                {{ related_car.simulator_count }} simulator{{ related_car.simulator_count|pluralize }}[0m
[0m[32m+              </p>[0m
[0m[32m+            </a>[0m
[0m[32m+          {% endfor %}[0m
[0m[0m         </div>[0m
[0m[32m+      </div>[0m
[0m[0m     {% endif %}[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/events/detail.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,395 +1,367 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ event.name }} - SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="container mx-auto px-4 py-8">[0m
[0m[32m+  <div class="container mx-auto px-4 py-8">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="flex items-center space-x-2 text-sm text-gray-600 mb-6">[0m
[0m[33m-        <a href="{% url 'events:events_list' %}" class="hover:text-blue-600">Events</a>[0m
[0m[33m-        <span>›</span>[0m
[0m[33m-        <span class="text-gray-900">{{ event.name|truncatewords:5 }}</span>[0m
[0m[32m+      <a href="{% url 'events:events_list' %}" class="hover:text-blue-600">Events</a>[0m
[0m[32m+      <span>›</span>[0m
[0m[32m+      <span class="text-gray-900">{{ event.name|truncatewords:5 }}</span>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">[0m
[0m[33m-        <!-- Main Content -->[0m
[0m[33m-        <div class="lg:col-span-2">[0m
[0m[33m-            <!-- Event Header -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                <div class="flex items-start justify-between mb-4">[0m
[0m[33m-                    <div class="flex-1">[0m
[0m[33m-                        <h1 class="text-3xl font-bold text-gray-900 mb-2">{{ event.name }}</h1>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Event Badges -->[0m
[0m[33m-                        <div class="flex items-center space-x-2 mb-4">[0m
[0m[33m-                            {% if event.event_source == 'SERIES' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">[0m
[0m[33m-                                    Official Series[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% elif event.event_source == 'SPECIAL' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">[0m
[0m[33m-                                    Special Event[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% elif event.event_source == 'CLUB' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">[0m
[0m[33m-                                    Club Event[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% else %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[33m-                                    Community[0m
[0m[33m-                                </span>[0m
[0m[32m+      <!-- Main Content -->[0m
[0m[32m+      <div class="lg:col-span-2">[0m
[0m[32m+        <!-- Event Header -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+          <div class="flex items-start justify-between mb-4">[0m
[0m[32m+            <div class="flex-1">[0m
[0m[32m+              <h1 class="text-3xl font-bold text-gray-900 mb-2">{{ event.name }}</h1>[0m
[0m[32m+              <!-- Event Badges -->[0m
[0m[32m+              <div class="flex items-center space-x-2 mb-4">[0m
[0m[32m+                {% if event.event_source == 'SERIES' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">[0m
[0m[32m+                    Official Series[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% elif event.event_source == 'SPECIAL' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">[0m
[0m[32m+                    Special Event[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% elif event.event_source == 'CLUB' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">[0m
[0m[32m+                    Club Event[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[32m+                    Community[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+                {% if event.status == 'SCHEDULED' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">[0m
[0m[32m+                    {{ event.get_status_display }}[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% elif event.status == 'ONGOING' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800">[0m
[0m[32m+                    {{ event.get_status_display }}[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% elif event.status == 'COMPLETED' %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[32m+                    {{ event.get_status_display }}[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[32m+                    {{ event.get_status_display }}[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+                {% if event.is_team_event %}[0m
[0m[32m+                  <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">[0m
[0m[32m+                    Team Event[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Simulator Info -->[0m
[0m[32m+            <div class="flex-shrink-0 ml-6 text-center">[0m
[0m[32m+              {% if event.simulator.icon %}[0m
[0m[32m+                <img src="{{ event.simulator.icon.url }}"[0m
[0m[32m+                     alt="{{ event.simulator.name }}"[0m
[0m[32m+                     class="w-16 h-16 rounded-lg mx-auto mb-2" />[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              <div class="text-sm font-medium text-gray-900">{{ event.simulator.name }}</div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Event Description -->[0m
[0m[32m+          {% if event.description %}[0m
[0m[32m+            <div class="prose max-w-none mb-6">[0m
[0m[32m+              <p class="text-gray-600">{{ event.description|linebreaks }}</p>[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <!-- Action Buttons -->[0m
[0m[32m+          {% if can_join %}[0m
[0m[32m+            <div class="mb-4">[0m
[0m[32m+              <button class="bg-blue-600 text-white px-6 py-2 rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">[0m
[0m[32m+                Join Event[0m
[0m[32m+              </button>[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Track & Series Information -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+          <h2 class="text-xl font-semibold text-gray-900 mb-4">Event Details</h2>[0m
[0m[32m+          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">[0m
[0m[32m+            <!-- Track Information -->[0m
[0m[32m+            <div>[0m
[0m[32m+              <h3 class="text-lg font-medium text-gray-900 mb-3">Track</h3>[0m
[0m[32m+              <div class="space-y-2">[0m
[0m[32m+                <div class="flex items-center">[0m
[0m[32m+                  <svg class="w-5 h-5 mr-2 text-gray-400"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  <span class="font-medium">{{ event.sim_layout.sim_track.track_model.name }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+                {% if event.sim_layout.name != event.sim_layout.sim_track.track_model.name %}[0m
[0m[32m+                  <div class="text-sm text-gray-600 ml-7">Layout: {{ event.sim_layout.name }}</div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+                {% if event.sim_layout.sim_track.track_model.country %}[0m
[0m[32m+                  <div class="text-sm text-gray-600 ml-7">{{ event.sim_layout.sim_track.track_model.country }}</div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+                {% if event.sim_layout.length_km %}[0m
[0m[32m+                  <div class="text-sm text-gray-600 ml-7">Length: {{ event.sim_layout.length_km|floatformat:2 }} km</div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+                {% if event.sim_layout.layout_type %}[0m
[0m[32m+                  <div class="text-sm text-gray-600 ml-7">Type: {{ event.sim_layout.get_layout_type_display }}</div>[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Series Information -->[0m
[0m[32m+            {% if series_context %}[0m
[0m[32m+              <div>[0m
[0m[32m+                <h3 class="text-lg font-medium text-gray-900 mb-3">Series</h3>[0m
[0m[32m+                <div class="space-y-2">[0m
[0m[32m+                  <div class="flex items-center">[0m
[0m[32m+                    <svg class="w-5 h-5 mr-2 text-gray-400"[0m
[0m[32m+                         fill="none"[0m
[0m[32m+                         stroke="currentColor"[0m
[0m[32m+                         viewBox="0 0 24 24">[0m
[0m[32m+                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10">[0m
[0m[32m+                      </path>[0m
[0m[32m+                    </svg>[0m
[0m[32m+                    <span class="font-medium">{{ series_context.name }}</span>[0m
[0m[32m+                  </div>[0m
[0m[32m+                  {% if season_context %}[0m
[0m[32m+                    <div class="text-sm text-gray-600 ml-7">Season: {{ season_context.name }}</div>[0m
[0m[32m+                    {% if event.round_number %}<div class="text-sm text-gray-600 ml-7">Round {{ event.round_number }}</div>{% endif %}[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                  {% if series_context.category %}[0m
[0m[32m+                    <div class="text-sm text-gray-600 ml-7">Category: {{ series_context.category|title }}</div>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Organizer Information -->[0m
[0m[32m+          {% if event.organizing_club or event.organizing_user %}[0m
[0m[32m+            <div class="mt-6 pt-6 border-t border-gray-200">[0m
[0m[32m+              <h3 class="text-lg font-medium text-gray-900 mb-3">Organizer</h3>[0m
[0m[32m+              {% if event.organizing_club %}[0m
[0m[32m+                <div class="flex items-center">[0m
[0m[32m+                  <svg class="w-5 h-5 mr-2 text-gray-400"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  <span class="font-medium">{{ event.organizing_club.name }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% elif event.organizing_user %}[0m
[0m[32m+                <div class="flex items-center">[0m
[0m[32m+                  <svg class="w-5 h-5 mr-2 text-gray-400"[0m
[0m[32m+                       fill="none"[0m
[0m[32m+                       stroke="currentColor"[0m
[0m[32m+                       viewBox="0 0 24 24">[0m
[0m[32m+                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z">[0m
[0m[32m+                    </path>[0m
[0m[32m+                  </svg>[0m
[0m[32m+                  <span class="font-medium">{{ event.organizing_user.get_full_name|default:event.organizing_user.username }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          {# Allowed / Event Classes #}[0m
[0m[32m+          {% if event.classes.all %}[0m
[0m[32m+            <div class="mt-6 pt-6 border-t border-gray-200">[0m
[0m[32m+              <h3 class="text-lg font-medium text-gray-900 mb-4">Eligible Cars by Class</h3>[0m
[0m[32m+              {% for block in class_car_data %}[0m
[0m[32m+                <h4 class="text-md font-semibold text-gray-800 mt-4 mb-2">{{ block.event_class.name }}</h4>[0m
[0m[32m+                <div class="overflow-x-auto">[0m
[0m[32m+                  <table class="min-w-full text-sm text-left border border-gray-200 mb-6">[0m
[0m[32m+                    <thead class="bg-gray-50">[0m
[0m[32m+                      <tr>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Car</th>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Fuel %</th>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Power %</th>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Weight kg</th>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Tire sets</th>[0m
[0m[32m+                        <th class="px-4 py-2 border-b">Fixed Setup</th>[0m
[0m[32m+                      </tr>[0m
[0m[32m+                    </thead>[0m
[0m[32m+                    <tbody>[0m
[0m[32m+                      {% for entry in block.entries %}[0m
[0m[32m+                        {% with car=entry.car res=entry.restrictions %}[0m
[0m[32m+                          <tr class="border-t">[0m
[0m[32m+                            <td class="px-4 py-2 flex items-center space-x-2">[0m
[0m[32m+                              {% if car.logo %}<img src="{{ car.logo.url }}" class="w-6 h-6 rounded" />{% endif %}[0m
[0m[32m+                              <span>{{ car.display_name|default:car.car_model.full_name }}</span>[0m
[0m[32m+                            </td>[0m
[0m[32m+                            <td class="px-4 py-2 text-center">{{ res.max_pct_fuel_fill|default:'—' }}</td>[0m
[0m[32m+                            <td class="px-4 py-2 text-center">{{ res.power_adjust_pct|default:'—' }}</td>[0m
[0m[32m+                            <td class="px-4 py-2 text-center">{{ res.weight_penalty_kg|default:'—' }}</td>[0m
[0m[32m+                            <td class="px-4 py-2 text-center">{{ res.max_dry_tire_sets|default:'—' }}</td>[0m
[0m[32m+                            <td class="px-4 py-2 text-center">[0m
[0m[32m+                              {% if res.is_fixed_setup %}✔️{% endif %}[0m
[0m[32m+                            </td>[0m
[0m[32m+                          </tr>[0m
[0m[32m+                        {% endwith %}[0m
[0m[32m+                      {% endfor %}[0m
[0m[32m+                    </tbody>[0m
[0m[32m+                  </table>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Upcoming Time Slots -->[0m
[0m[32m+        {% if upcoming_time_slots %}[0m
[0m[32m+          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+            <h2 class="text-xl font-semibold text-gray-900 mb-4">Upcoming Sessions</h2>[0m
[0m[32m+            <div class="space-y-4">[0m
[0m[32m+              {% for time_slot in upcoming_time_slots %}[0m
[0m[32m+                <div class="border border-gray-200 rounded-lg p-4">[0m
[0m[32m+                  <div class="flex items-center justify-between mb-2">[0m
[0m[32m+                    <div class="text-lg font-medium text-gray-900">{{ time_slot.start_time|date:"l, F j, Y" }}</div>[0m
[0m[32m+                    <div class="text-sm text-gray-600">{{ time_slot.start_time|date:"H:i" }} - {{ time_slot.end_time|date:"H:i" }}</div>[0m
[0m[32m+                  </div>[0m
[0m[32m+                  <div class="text-sm text-gray-600 mb-2">[0m
[0m[32m+                    Registration: {{ time_slot.registration_open|date:"M j, H:i" }} - {{ time_slot.registration_ends|date:"M j, H:i" }}[0m
[0m[32m+                  </div>[0m
[0m[32m+                  {% if time_slot == next_instance and weather_forecasts %}[0m
[0m[32m+                    <div class="mt-3 pt-3 border-t border-gray-100">[0m
[0m[32m+                      <div class="text-sm font-medium text-gray-700 mb-2">Weather Forecast</div>[0m
[0m[32m+                      <div class="grid grid-cols-4 gap-2 text-xs">[0m
[0m[32m+                        {% for forecast in weather_forecasts|slice:":8" %}[0m
[0m[32m+                          <div class="text-center">[0m
[0m[32m+                            <div class="text-gray-600">{{ forecast.timestamp|date:"H:i" }}</div>[0m
[0m[32m+                            <div class="font-medium">{{ forecast.air_temperature|floatformat:0 }}°C</div>[0m
[0m[32m+                            {% if forecast.precipitation_chance > 20 %}[0m
[0m[32m+                              <div class="text-blue-600">{{ forecast.precipitation_chance }}%</div>[0m
[0m[0m                             {% endif %}[0m
[0m[33m-[0m
[0m[33m-                            {% if event.status == 'SCHEDULED' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-green-100 text-green-800">[0m
[0m[33m-                                    {{ event.get_status_display }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% elif event.status == 'ONGOING' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-yellow-100 text-yellow-800">[0m
[0m[33m-                                    {{ event.get_status_display }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% elif event.status == 'COMPLETED' %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[33m-                                    {{ event.get_status_display }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% else %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gray-100 text-gray-800">[0m
[0m[33m-                                    {{ event.get_status_display }}[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-[0m
[0m[33m-                            {% if event.is_team_event %}[0m
[0m[33m-                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-blue-100 text-blue-800">[0m
[0m[33m-                                    Team Event[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[32m+                          </div>[0m
[0m[32m+                        {% endfor %}[0m
[0m[32m+                      </div>[0m
[0m[0m                     </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Simulator Info -->[0m
[0m[33m-                    <div class="flex-shrink-0 ml-6 text-center">[0m
[0m[33m-                        {% if event.simulator.icon %}[0m
[0m[33m-                            <img src="{{ event.simulator.icon.url }}" alt="{{ event.simulator.name }}" class="w-16 h-16 rounded-lg mx-auto mb-2">[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                        <div class="text-sm font-medium text-gray-900">{{ event.simulator.name }}</div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Event Description -->[0m
[0m[33m-                {% if event.description %}[0m
[0m[33m-                    <div class="prose max-w-none mb-6">[0m
[0m[33m-                        <p class="text-gray-600">{{ event.description|linebreaks }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                <!-- Action Buttons -->[0m
[0m[33m-                {% if can_join %}[0m
[0m[33m-                    <div class="mb-4">[0m
[0m[33m-                        <button class="bg-blue-600 text-white px-6 py-2 rounded-md font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">[0m
[0m[33m-                            Join Event[0m
[0m[33m-                        </button>[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Track & Series Information -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                <h2 class="text-xl font-semibold text-gray-900 mb-4">Event Details</h2>[0m
[0m[33m-[0m
[0m[33m-                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">[0m
[0m[33m-                    <!-- Track Information -->[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <h3 class="text-lg font-medium text-gray-900 mb-3">Track</h3>[0m
[0m[33m-                        <div class="space-y-2">[0m
[0m[33m-                            <div class="flex items-center">[0m
[0m[33m-                                <svg class="w-5 h-5 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span class="font-medium">{{ event.sim_layout.sim_track.track_model.name }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-[0m
[0m[33m-                            {% if event.sim_layout.name != event.sim_layout.sim_track.track_model.name %}[0m
[0m[33m-                                <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                    Layout: {{ event.sim_layout.name }}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-[0m
[0m[33m-                            {% if event.sim_layout.sim_track.track_model.country %}[0m
[0m[33m-                                <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                    {{ event.sim_layout.sim_track.track_model.country }}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-[0m
[0m[33m-                            {% if event.sim_layout.length_km %}[0m
[0m[33m-                                <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                    Length: {{ event.sim_layout.length_km|floatformat:2 }} km[0m
[0m[33m-                                </div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-[0m
[0m[33m-                            {% if event.sim_layout.layout_type %}[0m
[0m[33m-                                <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                    Type: {{ event.sim_layout.get_layout_type_display }}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            {% endif %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Series Information -->[0m
[0m[33m-                    {% if series_context %}[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <h3 class="text-lg font-medium text-gray-900 mb-3">Series</h3>[0m
[0m[33m-                            <div class="space-y-2">[0m
[0m[33m-                                <div class="flex items-center">[0m
[0m[33m-                                    <svg class="w-5 h-5 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>[0m
[0m[33m-                                    </svg>[0m
[0m[33m-                                    <span class="font-medium">{{ series_context.name }}</span>[0m
[0m[33m-                                </div>[0m
[0m[33m-[0m
[0m[33m-                                {% if season_context %}[0m
[0m[33m-                                    <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                        Season: {{ season_context.name }}[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                    {% if event.round_number %}[0m
[0m[33m-                                        <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                            Round {{ event.round_number }}[0m
[0m[33m-                                        </div>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                                {% if series_context.category %}[0m
[0m[33m-                                    <div class="text-sm text-gray-600 ml-7">[0m
[0m[33m-                                        Category: {{ series_context.category|title }}[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <!-- Recent Time Slots -->[0m
[0m[32m+        {% if recent_time_slots %}[0m
[0m[32m+          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+            <h2 class="text-xl font-semibold text-gray-900 mb-4">Recent Results</h2>[0m
[0m[32m+            <div class="space-y-3">[0m
[0m[32m+              {% for time_slot in recent_time_slots %}[0m
[0m[32m+                <div class="flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0">[0m
[0m[32m+                  <div>[0m
[0m[32m+                    <div class="font-medium text-gray-900">{{ time_slot.start_time|date:"M j, Y" }}</div>[0m
[0m[32m+                    {% if time_slot.result %}[0m
[0m[32m+                      <div class="text-sm text-gray-600">{{ time_slot.result.num_drivers }} drivers</div>[0m
[0m[0m                     {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Organizer Information -->[0m
[0m[33m-                {% if event.organizing_club or event.organizing_user %}[0m
[0m[33m-                    <div class="mt-6 pt-6 border-t border-gray-200">[0m
[0m[33m-                        <h3 class="text-lg font-medium text-gray-900 mb-3">Organizer</h3>[0m
[0m[33m-                        {% if event.organizing_club %}[0m
[0m[33m-                            <div class="flex items-center">[0m
[0m[33m-                                <svg class="w-5 h-5 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span class="font-medium">{{ event.organizing_club.name }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% elif event.organizing_user %}[0m
[0m[33m-                            <div class="flex items-center">[0m
[0m[33m-                                <svg class="w-5 h-5 mr-2 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span class="font-medium">{{ event.organizing_user.get_full_name|default:event.organizing_user.username }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-[0m
[0m[33m-                {# Allowed / Event Classes #}[0m
[0m[33m-                {% if event.classes.all %}[0m
[0m[33m-                    <div class="mt-6 pt-6 border-t border-gray-200">[0m
[0m[33m-                        <h3 class="text-lg font-medium text-gray-900 mb-4">Eligible Cars by Class</h3>[0m
[0m[33m-[0m
[0m[33m-                        {% for block in class_car_data %}[0m
[0m[33m-                            <h4 class="text-md font-semibold text-gray-800 mt-4 mb-2">{{ block.event_class.name }}</h4>[0m
[0m[33m-                            <div class="overflow-x-auto">[0m
[0m[33m-                                <table class="min-w-full text-sm text-left border border-gray-200 mb-6">[0m
[0m[33m-                                    <thead class="bg-gray-50">[0m
[0m[33m-                                        <tr>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Car</th>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Fuel %</th>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Power %</th>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Weight kg</th>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Tire sets</th>[0m
[0m[33m-                                            <th class="px-4 py-2 border-b">Fixed Setup</th>[0m
[0m[33m-                                        </tr>[0m
[0m[33m-                                    </thead>[0m
[0m[33m-                                    <tbody>[0m
[0m[33m-                                        {% for entry in block.entries %}[0m
[0m[33m-                                            {% with car=entry.car res=entry.restrictions %}[0m
[0m[33m-                                            <tr class="border-t">[0m
[0m[33m-                                                <td class="px-4 py-2 flex items-center space-x-2">[0m
[0m[33m-                                                    {% if car.logo %}<img src="{{ car.logo.url }}" class="w-6 h-6 rounded"/>{% endif %}[0m
[0m[33m-                                                    <span>{{ car.display_name|default:car.car_model.full_name }}</span>[0m
[0m[33m-                                                </td>[0m
[0m[33m-                                                <td class="px-4 py-2 text-center">{{ res.max_pct_fuel_fill|default:'—' }}</td>[0m
[0m[33m-                                                <td class="px-4 py-2 text-center">{{ res.power_adjust_pct|default:'—' }}</td>[0m
[0m[33m-                                                <td class="px-4 py-2 text-center">{{ res.weight_penalty_kg|default:'—' }}</td>[0m
[0m[33m-                                                <td class="px-4 py-2 text-center">{{ res.max_dry_tire_sets|default:'—' }}</td>[0m
[0m[33m-                                                <td class="px-4 py-2 text-center">{% if res.is_fixed_setup %}✔️{% endif %}</td>[0m
[0m[33m-                                            </tr>[0m
[0m[33m-                                            {% endwith %}[0m
[0m[33m-                                        {% endfor %}[0m
[0m[33m-                                    </tbody>[0m
[0m[33m-                                </table>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Upcoming Time Slots -->[0m
[0m[32m+                  </div>[0m
[0m[32m+                  <div class="text-sm text-gray-600">[0m
[0m[32m+                    {% if time_slot.result %}[0m
[0m[32m+                      <span class="text-green-600 font-medium">Complete</span>[0m
[0m[32m+                    {% else %}[0m
[0m[32m+                      <span class="text-gray-500">No results</span>[0m
[0m[32m+                    {% endif %}[0m
[0m[32m+                  </div>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Sidebar -->[0m
[0m[32m+      <div class="lg:col-span-1">[0m
[0m[32m+        <!-- Event Stats -->[0m
[0m[32m+        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+          <h3 class="text-lg font-semibold text-gray-900 mb-4">Event Statistics</h3>[0m
[0m[32m+          <div class="space-y-3">[0m
[0m[32m+            <div class="flex justify-between">[0m
[0m[32m+              <span class="text-gray-600">Total Time Slots</span>[0m
[0m[32m+              <span class="font-medium">{{ upcoming_time_slots|length|add:recent_time_slots|length }}</span>[0m
[0m[32m+            </div>[0m
[0m[0m             {% if upcoming_time_slots %}[0m
[0m[33m-                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Upcoming Sessions</h2>[0m
[0m[33m-                    <div class="space-y-4">[0m
[0m[33m-                        {% for time_slot in upcoming_time_slots %}[0m
[0m[33m-                            <div class="border border-gray-200 rounded-lg p-4">[0m
[0m[33m-                                <div class="flex items-center justify-between mb-2">[0m
[0m[33m-                                    <div class="text-lg font-medium text-gray-900">[0m
[0m[33m-                                        {{ time_slot.start_time|date:"l, F j, Y" }}[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                    <div class="text-sm text-gray-600">[0m
[0m[33m-                                        {{ time_slot.start_time|date:"H:i" }} - {{ time_slot.end_time|date:"H:i" }}[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                </div>[0m
[0m[33m-[0m
[0m[33m-                                <div class="text-sm text-gray-600 mb-2">[0m
[0m[33m-                                    Registration: {{ time_slot.registration_open|date:"M j, H:i" }} - {{ time_slot.registration_ends|date:"M j, H:i" }}[0m
[0m[33m-                                </div>[0m
[0m[33m-[0m
[0m[33m-                                {% if time_slot == next_instance and weather_forecasts %}[0m
[0m[33m-                                    <div class="mt-3 pt-3 border-t border-gray-100">[0m
[0m[33m-                                        <div class="text-sm font-medium text-gray-700 mb-2">Weather Forecast</div>[0m
[0m[33m-                                        <div class="grid grid-cols-4 gap-2 text-xs">[0m
[0m[33m-                                            {% for forecast in weather_forecasts|slice:":8" %}[0m
[0m[33m-                                                <div class="text-center">[0m
[0m[33m-                                                    <div class="text-gray-600">{{ forecast.timestamp|date:"H:i" }}</div>[0m
[0m[33m-                                                    <div class="font-medium">{{ forecast.air_temperature|floatformat:0 }}°C</div>[0m
[0m[33m-                                                    {% if forecast.precipitation_chance > 20 %}[0m
[0m[33m-                                                        <div class="text-blue-600">{{ forecast.precipitation_chance }}%</div>[0m
[0m[33m-                                                    {% endif %}[0m
[0m[33m-                                                </div>[0m
[0m[33m-                                            {% endfor %}[0m
[0m[33m-                                        </div>[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                {% endif %}[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Recent Time Slots -->[0m
[0m[32m+              <div class="flex justify-between">[0m
[0m[32m+                <span class="text-gray-600">Upcoming</span>[0m
[0m[32m+                <span class="font-medium text-green-600">{{ upcoming_time_slots|length }}</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[0m             {% if recent_time_slots %}[0m
[0m[33m-                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                    <h2 class="text-xl font-semibold text-gray-900 mb-4">Recent Results</h2>[0m
[0m[33m-                    <div class="space-y-3">[0m
[0m[33m-                        {% for time_slot in recent_time_slots %}[0m
[0m[33m-                            <div class="flex items-center justify-between py-2 border-b border-gray-100 last:border-b-0">[0m
[0m[33m-                                <div>[0m
[0m[33m-                                    <div class="font-medium text-gray-900">{{ time_slot.start_time|date:"M j, Y" }}</div>[0m
[0m[33m-                                    {% if time_slot.result %}[0m
[0m[33m-                                        <div class="text-sm text-gray-600">{{ time_slot.result.num_drivers }} drivers</div>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                </div>[0m
[0m[33m-                                <div class="text-sm text-gray-600">[0m
[0m[33m-                                    {% if time_slot.result %}[0m
[0m[33m-                                        <span class="text-green-600 font-medium">Complete</span>[0m
[0m[33m-                                    {% else %}[0m
[0m[33m-                                        <span class="text-gray-500">No results</span>[0m
[0m[33m-                                    {% endif %}[0m
[0m[33m-                                </div>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[32m+              <div class="flex justify-between">[0m
[0m[32m+                <span class="text-gray-600">Completed</span>[0m
[0m[32m+                <span class="font-medium">{{ recent_time_slots|length }}</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if event.max_entries %}[0m
[0m[32m+              <div class="flex justify-between">[0m
[0m[32m+                <span class="text-gray-600">Max Entries</span>[0m
[0m[32m+                <span class="font-medium">{{ event.max_entries }}</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if event.is_team_event and event.min_drivers_per_entry %}[0m
[0m[32m+              <div class="flex justify-between">[0m
[0m[32m+                <span class="text-gray-600">Team Size</span>[0m
[0m[32m+                <span class="font-medium">[0m
[0m[32m+                  {{ event.min_drivers_per_entry }}[0m
[0m[32m+                  {% if event.max_drivers_per_entry and event.max_drivers_per_entry != event.min_drivers_per_entry %}[0m
[0m[32m+                    -{{ event.max_drivers_per_entry }}[0m
[0m[32m+                  {% endif %}[0m
[0m[32m+                  drivers[0m
[0m[32m+                </span>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[0m         </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Sidebar -->[0m
[0m[33m-        <div class="lg:col-span-1">[0m
[0m[33m-            <!-- Event Stats -->[0m
[0m[33m-            <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                <h3 class="text-lg font-semibold text-gray-900 mb-4">Event Statistics</h3>[0m
[0m[33m-                <div class="space-y-3">[0m
[0m[33m-                    <div class="flex justify-between">[0m
[0m[33m-                        <span class="text-gray-600">Total Time Slots</span>[0m
[0m[33m-                        <span class="font-medium">{{ upcoming_time_slots|length|add:recent_time_slots|length }}</span>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    {% if upcoming_time_slots %}[0m
[0m[33m-                        <div class="flex justify-between">[0m
[0m[33m-                            <span class="text-gray-600">Upcoming</span>[0m
[0m[33m-                            <span class="font-medium text-green-600">{{ upcoming_time_slots|length }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    {% if recent_time_slots %}[0m
[0m[33m-                        <div class="flex justify-between">[0m
[0m[33m-                            <span class="text-gray-600">Completed</span>[0m
[0m[33m-                            <span class="font-medium">{{ recent_time_slots|length }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    {% if event.max_entries %}[0m
[0m[33m-                        <div class="flex justify-between">[0m
[0m[33m-                            <span class="text-gray-600">Max Entries</span>[0m
[0m[33m-                            <span class="font-medium">{{ event.max_entries }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-[0m
[0m[33m-                    {% if event.is_team_event and event.min_drivers_per_entry %}[0m
[0m[33m-                        <div class="flex justify-between">[0m
[0m[33m-                            <span class="text-gray-600">Team Size</span>[0m
[0m[33m-                            <span class="font-medium">[0m
[0m[33m-                                {{ event.min_drivers_per_entry }}{% if event.max_drivers_per_entry and event.max_drivers_per_entry != event.min_drivers_per_entry %}-{{ event.max_drivers_per_entry }}{% endif %} drivers[0m
[0m[33m-                            </span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[33m-            <!-- Requirements -->[0m
[0m[33m-            {% if event.min_license_level or event.min_safety_rating or event.min_skill_rating %}[0m
[0m[33m-                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[33m-                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Requirements</h3>[0m
[0m[33m-                    <div class="space-y-3">[0m
[0m[33m-                        {% if event.min_license_level %}[0m
[0m[33m-                            <div class="flex justify-between">[0m
[0m[33m-                                <span class="text-gray-600">Min License</span>[0m
[0m[33m-                                <span class="font-medium">{{ event.min_license_level }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        {% if event.min_safety_rating %}[0m
[0m[33m-                            <div class="flex justify-between">[0m
[0m[33m-                                <span class="text-gray-600">Min Safety Rating</span>[0m
[0m[33m-                                <span class="font-medium">{{ event.min_safety_rating|floatformat:2 }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-[0m
[0m[33m-                        {% if event.min_skill_rating %}[0m
[0m[33m-                            <div class="flex justify-between">[0m
[0m[33m-                                <span class="text-gray-600">Min Skill Rating</span>[0m
[0m[33m-                                <span class="font-medium">{{ event.min_skill_rating|floatformat:0 }}</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-[0m
[0m[33m-            <!-- Event Sessions -->[0m
[0m[33m-            {% if event.sessions.all %}[0m
[0m[33m-                <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">[0m
[0m[33m-                    <h3 class="text-lg font-semibold text-gray-900 mb-4">Session Format</h3>[0m
[0m[33m-                    <div class="space-y-2">[0m
[0m[33m-                        {% for session in event.sessions.all %}[0m
[0m[33m-                            <div class="flex justify-between items-center">[0m
[0m[33m-                                <span class="text-gray-600">{{ session.get_session_type_display }}</span>[0m
[0m[33m-                                <span class="text-sm font-medium">{{ session.duration }} min</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-            {% endif %}[0m
[0m[33m-        </div>[0m
[0m[32m+        <!-- Requirements -->[0m
[0m[32m+        {% if event.min_license_level or event.min_safety_rating or event.min_skill_rating %}[0m
[0m[32m+          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6">[0m
[0m[32m+            <h3 class="text-lg font-semibold text-gray-900 mb-4">Requirements</h3>[0m
[0m[32m+            <div class="space-y-3">[0m
[0m[32m+              {% if event.min_license_level %}[0m
[0m[32m+                <div class="flex justify-between">[0m
[0m[32m+                  <span class="text-gray-600">Min License</span>[0m
[0m[32m+                  <span class="font-medium">{{ event.min_license_level }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if event.min_safety_rating %}[0m
[0m[32m+                <div class="flex justify-between">[0m
[0m[32m+                  <span class="text-gray-600">Min Safety Rating</span>[0m
[0m[32m+                  <span class="font-medium">{{ event.min_safety_rating|floatformat:2 }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if event.min_skill_rating %}[0m
[0m[32m+                <div class="flex justify-between">[0m
[0m[32m+                  <span class="text-gray-600">Min Skill Rating</span>[0m
[0m[32m+                  <span class="font-medium">{{ event.min_skill_rating|floatformat:0 }}</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <!-- Event Sessions -->[0m
[0m[32m+        {% if event.sessions.all %}[0m
[0m[32m+          <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">[0m
[0m[32m+            <h3 class="text-lg font-semibold text-gray-900 mb-4">Session Format</h3>[0m
[0m[32m+            <div class="space-y-2">[0m
[0m[32m+              {% for session in event.sessions.all %}[0m
[0m[32m+                <div class="flex justify-between items-center">[0m
[0m[32m+                  <span class="text-gray-600">{{ session.get_session_type_display }}</span>[0m
[0m[32m+                  <span class="text-sm font-medium">{{ session.duration }} min</span>[0m
[0m[32m+                </div>[0m
[0m[32m+              {% endfor %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-</div>[0m
[0m[32m+  </div>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/sim/profiles/profiles_results_partial.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,61 +1,59 @@
[0m
[0m[0m {% comment %}Profiles results partial - grid and pagination only for HTMX updates{% endcomment %}[0m
[0m[33m-[0m
[0m[0m <div id="profiles-container">[0m
[0m[33m-    <c-skeleton-grid count="4" class="htmx-indicator" id="loading-indicator"></c-skeleton-grid>[0m
[0m[33m-[0m
[0m[33m-    <!-- Profiles Grid -->[0m
[0m[33m-    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8">[0m
[0m[33m-        {% for profile in page_obj %}[0m
[0m[33m-            <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[33m-                <div class="flex items-center space-x-3 mb-3">[0m
[0m[33m-                    {% if profile.simulator.icon %}[0m
[0m[33m-                        <img src="{{ profile.simulator.icon.url }}" alt="{{ profile.simulator.name }}" class="w-8 h-8 rounded" />[0m
[0m[33m-                    {% else %}[0m
[0m[33m-                        <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[33m-                            <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                    <div class="flex-1">[0m
[0m[33m-                        <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[33m-                        <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-                {% if profile.linked_user %}[0m
[0m[33m-                    <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">{{ profile.linked_user.get_full_name|default:profile.linked_user.username }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-                <a href="{{ profile.get_absolute_url }}" class="btn-primary btn-sm w-full">View Profile</a>[0m
[0m[32m+  <c-skeleton-grid count="4" class="htmx-indicator" id="loading-indicator"></c-skeleton-grid>[0m
[0m[32m+  <!-- Profiles Grid -->[0m
[0m[32m+  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 mb-8">[0m
[0m[32m+    {% for profile in page_obj %}[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-4 hover:shadow-lg transition-shadow">[0m
[0m[32m+        <div class="flex items-center space-x-3 mb-3">[0m
[0m[32m+          {% if profile.simulator.icon %}[0m
[0m[32m+            <img src="{{ profile.simulator.icon.url }}"[0m
[0m[32m+                 alt="{{ profile.simulator.name }}"[0m
[0m[32m+                 class="w-8 h-8 rounded" />[0m
[0m[32m+          {% else %}[0m
[0m[32m+            <div class="w-8 h-8 bg-primary-500 rounded flex items-center justify-center">[0m
[0m[32m+              <span class="text-sm font-bold text-white">{{ profile.simulator.name|first }}</span>[0m
[0m[0m             </div>[0m
[0m[33m-        {% empty %}[0m
[0m[33m-            <div class="col-span-full text-center py-12">[0m
[0m[33m-                <p class="text-gray-500 dark:text-gray-400">No drivers found.</p>[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          <div class="flex-1">[0m
[0m[32m+            <h3 class="font-medium text-gray-900 dark:text-white">{{ profile.profile_name }}</h3>[0m
[0m[32m+            <p class="text-sm text-gray-500 dark:text-gray-400">{{ profile.simulator.name }}</p>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        {% if profile.linked_user %}[0m
[0m[32m+          <p class="text-sm text-gray-600 dark:text-gray-400 mb-3">[0m
[0m[32m+            {{ profile.linked_user.get_full_name|default:profile.linked_user.username }}[0m
[0m[32m+          </p>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <a href="{{ profile.get_absolute_url }}"[0m
[0m[32m+           class="btn-primary btn-sm w-full">View Profile</a>[0m
[0m[32m+      </div>[0m
[0m[32m+    {% empty %}[0m
[0m[32m+      <div class="col-span-full text-center py-12">[0m
[0m[32m+        <p class="text-gray-500 dark:text-gray-400">No drivers found.</p>[0m
[0m[32m+      </div>[0m
[0m[32m+    {% endfor %}[0m
[0m[32m+  </div>[0m
[0m[32m+  <!-- Pagination -->[0m
[0m[32m+  {% if page_obj.has_other_pages %}[0m
[0m[32m+    <div class="flex justify-center">[0m
[0m[32m+      <nav class="flex space-x-2">[0m
[0m[32m+        {% if page_obj.has_previous %}[0m
[0m[32m+          <a href="?page={{ page_obj.previous_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[32m+             hx-get="?page={{ page_obj.previous_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[32m+             hx-target="#profiles-container"[0m
[0m[32m+             hx-push-url="true"[0m
[0m[32m+             class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">Previous</a>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+        <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}</span>[0m
[0m[32m+        {% if page_obj.has_next %}[0m
[0m[32m+          <a href="?page={{ page_obj.next_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[32m+             hx-get="?page={{ page_obj.next_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[32m+             hx-target="#profiles-container"[0m
[0m[32m+             hx-push-url="true"[0m
[0m[32m+             class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">Next</a>[0m
[0m[32m+        {% endif %}[0m
[0m[32m+      </nav>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[33m-    <!-- Pagination -->[0m
[0m[33m-    {% if page_obj.has_other_pages %}[0m
[0m[33m-        <div class="flex justify-center">[0m
[0m[33m-            <nav class="flex space-x-2">[0m
[0m[33m-                {% if page_obj.has_previous %}[0m
[0m[33m-                    <a href="?page={{ page_obj.previous_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[33m-                       hx-get="?page={{ page_obj.previous_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[33m-                       hx-target="#profiles-container"[0m
[0m[33m-                       hx-push-url="true"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">[0m
[0m[33m-                        Previous[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-                <span class="px-3 py-2 rounded-md bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200">Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}</span>[0m
[0m[33m-                {% if page_obj.has_next %}[0m
[0m[33m-                    <a href="?page={{ page_obj.next_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[33m-                       hx-get="?page={{ page_obj.next_page_number }}{% if request.GET.q %}&q={{ request.GET.q }}{% endif %}{% if request.GET.simulator %}&simulator={{ request.GET.simulator }}{% endif %}"[0m
[0m[33m-                       hx-target="#profiles-container"[0m
[0m[33m-                       hx-push-url="true"[0m
[0m[33m-                       class="px-3 py-2 rounded-md bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300">[0m
[0m[33m-                        Next[0m
[0m[33m-                    </a>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </nav>[0m
[0m[33m-        </div>[0m
[0m[33m-    {% endif %}[0m
[0m[32m+  {% endif %}[0m
[0m[0m </div>[0m
[0m[32m[1m
simlane/templates/teams/club_create.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -35,7 +35,6 @@
[0m
[0m[0m         </li>[0m
[0m[0m       </ol>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="mb-8">[0m
[0m[0m       <h1 class="text-3xl font-bold text-gray-900 dark:text-white">{{ title }}</h1>[0m
[0m[1m[34m@@ -43,12 +42,10 @@
[0m
[0m[0m         {% trans "Create your own racing club and invite members to join you in organized events." %}[0m
[0m[0m       </p>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Form Card -->[0m
[0m[0m     <div class="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6 max-w-4xl">[0m
[0m[0m       <form method="post" enctype="multipart/form-data" class="space-y-6">[0m
[0m[0m         {% csrf_token %}[0m
[0m[33m-[0m
[0m[0m         <!-- Basic Information Section -->[0m
[0m[0m         <div class="border-b border-gray-200 dark:border-gray-700 pb-6">[0m
[0m[0m           <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">{% trans "Basic Information" %}</h2>[0m
[0m[1m[34m@@ -61,14 +58,19 @@
[0m
[0m[0m                 <span class="text-red-500">*</span>[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.name }}[0m
[0m[33m-              {% if form.name.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.name.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.name.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.name.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.name.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.name.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.name.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.name.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Description -->[0m
[0m[0m             <div class="md:col-span-2">[0m
[0m[0m               <label for="{{ form.description.id_for_label }}"[0m
[0m[33m-                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">{{ form.description.label }}</label>[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[32m+                {{ form.description.label }}[0m
[0m[32m+              </label>[0m
[0m[0m               {{ form.description }}[0m
[0m[0m               {% if form.description.errors %}[0m
[0m[0m                 <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.description.errors|first }}</div>[0m
[0m[1m[34m@@ -77,126 +79,151 @@
[0m
[0m[0m                 <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.description.help_text }}</p>[0m
[0m[0m               {% endif %}[0m
[0m[0m             </div>[0m
[0m[33m-[0m
[0m[0m             <!-- Logo Upload -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.logo.id_for_label }}"[0m
[0m[33m-                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">{{ form.logo.label }}</label>[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[32m+                {{ form.logo.label }}[0m
[0m[32m+              </label>[0m
[0m[0m               {{ form.logo }}[0m
[0m[33m-              {% if form.logo.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.logo.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.logo.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.logo.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.logo.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.logo.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.logo.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.logo.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Website -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.website.id_for_label }}"[0m
[0m[33m-                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">{{ form.website.label }}</label>[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[32m+                {{ form.website.label }}[0m
[0m[32m+              </label>[0m
[0m[0m               {{ form.website }}[0m
[0m[33m-              {% if form.website.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.website.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.website.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.website.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-          </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.website.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.website.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.website.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.website.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[0m         <!-- Social Links Section -->[0m
[0m[0m         <div class="pb-6">[0m
[0m[0m           <h2 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">{% trans "Social Links" %}</h2>[0m
[0m[33m-          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">{% trans "Add your social media links to help members connect with your club community." %}</p>[0m
[0m[32m+          <p class="text-sm text-gray-600 dark:text-gray-400 mb-4">[0m
[0m[32m+            {% trans "Add your social media links to help members connect with your club community." %}[0m
[0m[32m+          </p>[0m
[0m[0m           <div class="grid grid-cols-1 md:grid-cols-2 gap-6">[0m
[0m[0m             <!-- Discord -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.discord_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.010c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z"/>[0m
[0m[32m+                  <path d="M20.317 4.37a19.791 19.791 0 0 0-4.885-1.515.074.074 0 0 0-.079.037c-.21.375-.444.864-.608 1.25a18.27 18.27 0 0 0-5.487 0 12.64 12.64 0 0 0-.617-1.25.077.077 0 0 0-.079-.037A19.736 19.736 0 0 0 3.677 4.37a.07.07 0 0 0-.032.027C.533 9.046-.32 13.58.099 18.057a.082.082 0 0 0 .031.057 19.9 19.9 0 0 0 5.993 3.03.078.078 0 0 0 .084-.028 14.09 14.09 0 0 0 1.226-1.994.076.076 0 0 0-.041-.106 13.107 13.107 0 0 1-1.872-.892.077.077 0 0 1-.008-.128 10.2 10.2 0 0 0 .372-.292.074.074 0 0 1 .077-.010c3.928 1.793 8.18 1.793 12.062 0a.074.074 0 0 1 .078.01c.12.098.246.198.373.292a.077.077 0 0 1-.006.127 12.299 12.299 0 0 1-1.873.892.077.077 0 0 0-.041.107c.36.698.772 1.362 1.225 1.993a.076.076 0 0 0 .084.028 19.839 19.839 0 0 0 6.002-3.03.077.077 0 0 0 .032-.054c.5-5.177-.838-9.674-3.549-13.66a.061.061 0 0 0-.031-.03zM8.02 15.33c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.956-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.956 2.418-2.157 2.418zm7.975 0c-1.183 0-2.157-1.085-2.157-2.419 0-1.333.955-2.419 2.157-2.419 1.21 0 2.176 1.096 2.157 2.42 0 1.333-.946 2.418-2.157 2.418z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.discord_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.discord_url }}[0m
[0m[33m-              {% if form.discord_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.discord_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.discord_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.discord_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.discord_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.discord_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.discord_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.discord_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Twitter -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.twitter_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>[0m
[0m[32m+                  <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.twitter_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.twitter_url }}[0m
[0m[33m-              {% if form.twitter_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.twitter_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.twitter_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.twitter_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.twitter_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.twitter_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.twitter_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.twitter_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- YouTube -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.youtube_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>[0m
[0m[32m+                  <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.youtube_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.youtube_url }}[0m
[0m[33m-              {% if form.youtube_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.youtube_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.youtube_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.youtube_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.youtube_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.youtube_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.youtube_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.youtube_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Twitch -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.twitch_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M11.571 4.714h1.715v5.143H11.57zm4.715 0H18v5.143h-1.714zM6 0L1.714 4.286v15.428h5.143V24l4.286-4.286h3.428L22.286 12V0zm14.571 11.143l-3.428 3.428h-3.429l-3 3v-3H6.857V1.714h13.714Z"/>[0m
[0m[32m+                  <path d="M11.571 4.714h1.715v5.143H11.57zm4.715 0H18v5.143h-1.714zM6 0L1.714 4.286v15.428h5.143V24l4.286-4.286h3.428L22.286 12V0zm14.571 11.143l-3.428 3.428h-3.429l-3 3v-3H6.857V1.714h13.714Z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.twitch_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.twitch_url }}[0m
[0m[33m-              {% if form.twitch_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.twitch_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.twitch_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.twitch_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.twitch_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.twitch_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.twitch_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.twitch_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Facebook -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.facebook_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>[0m
[0m[32m+                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.facebook_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.facebook_url }}[0m
[0m[33m-              {% if form.facebook_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.facebook_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.facebook_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.facebook_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.facebook_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.facebook_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.facebook_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.facebook_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[0m             <!-- Instagram -->[0m
[0m[0m             <div>[0m
[0m[0m               <label for="{{ form.instagram_url.id_for_label }}"[0m
[0m[0m                      class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[0m                 <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                  <path d="M12.017 0C8.396 0 7.989.013 7.041.072 6.094.131 5.431.244 4.861.416a6.427 6.427 0 0 0-2.322 1.511A6.427 6.427 0 0 0 1.028 4.25C.85 4.82.738 5.483.68 6.43.621 7.378.608 7.785.608 11.406v1.188c0 3.621.013 4.028.072 4.976.058.947.17 1.61.342 2.18a6.427 6.427 0 0 0 1.511 2.322 6.427 6.427 0 0 0 2.321 1.511c.571.172 1.234.284 2.181.343.948.058 1.355.072 4.976.072h1.188c3.621 0 4.028-.013 4.976-.072.947-.058 1.61-.17 2.18-.343a6.427 6.427 0 0 0 2.322-1.511 6.427 6.427 0 0 0 1.511-2.322c.172-.57.284-1.233.343-2.18.058-.948.072-1.355.072-4.976V11.406c0-3.621-.013-4.028-.072-4.976-.058-.947-.17-1.61-.343-2.18a6.427 6.427 0 0 0-1.511-2.322A6.427 6.427 0 0 0 19.394.416c-.57-.172-1.233-.284-2.18-.343C16.266.013 15.859 0 12.238 0h-.221zm-.132 2.203h.176c3.543 0 3.96.014 5.36.08.926.042 1.43.196 1.764.326.444.173.76.379 1.093.712.333.333.539.65.712 1.093.13.333.284.838.326 1.764.066 1.4.08 1.817.08 5.36 0 3.543-.014 3.96-.08 5.36-.042.926-.196 1.43-.326 1.764a2.942 2.942 0 0 1-.712 1.093 2.942 2.942 0 0 1-1.093.712c-.333.13-.838.284-1.764.326-1.4.066-1.817.08-5.36.08-3.543 0-3.96-.014-5.36-.08-.926-.042-1.43-.196-1.764-.326a2.942 2.942 0 0 1-1.093-.712 2.942 2.942 0 0 1-.712-1.093c-.13-.333-.284-.838-.326-1.764-.066-1.4-.08-1.817-.08-5.36 0-3.543.014-3.96.08-5.36.042-.926.196-1.43.326-1.764.173-.444.379-.76.712-1.093.333-.333.65-.539 1.093-.712.333-.13.838-.284 1.764-.326 1.225-.056 1.7-.072 4.4-.072zm0 3.555a5.686 5.686 0 1 0 0 11.372 5.686 5.686 0 0 0 0-11.372zm0 9.373a3.687 3.687 0 1 1 0-7.374 3.687 3.687 0 0 1 0 7.374zm7.238-9.616a1.33 1.33 0 1 1-2.66 0 1.33 1.33 0 0 1 2.66 0z"/>[0m
[0m[32m+                  <path d="M12.017 0C8.396 0 7.989.013 7.041.072 6.094.131 5.431.244 4.861.416a6.427 6.427 0 0 0-2.322 1.511A6.427 6.427 0 0 0 1.028 4.25C.85 4.82.738 5.483.68 6.43.621 7.378.608 7.785.608 11.406v1.188c0 3.621.013 4.028.072 4.976.058.947.17 1.61.342 2.18a6.427 6.427 0 0 0 1.511 2.322 6.427 6.427 0 0 0 2.321 1.511c.571.172 1.234.284 2.181.343.948.058 1.355.072 4.976.072h1.188c3.621 0 4.028-.013 4.976-.072.947-.058 1.61-.17 2.18-.343a6.427 6.427 0 0 0 2.322-1.511 6.427 6.427 0 0 0 1.511-2.322c.172-.57.284-1.233.343-2.18.058-.948.072-1.355.072-4.976V11.406c0-3.621-.013-4.028-.072-4.976-.058-.947-.17-1.61-.343-2.18a6.427 6.427 0 0 0-1.511-2.322A6.427 6.427 0 0 0 19.394.416c-.57-.172-1.233-.284-2.18-.343C16.266.013 15.859 0 12.238 0h-.221zm-.132 2.203h.176c3.543 0 3.96.014 5.36.08.926.042 1.43.196 1.764.326.444.173.76.379 1.093.712.333.333.539.65.712 1.093.13.333.284.838.326 1.764.066 1.4.08 1.817.08 5.36 0 3.543-.014 3.96-.08 5.36-.042.926-.196 1.43-.326 1.764a2.942 2.942 0 0 1-.712 1.093 2.942 2.942 0 0 1-1.093.712c-.333.13-.838.284-1.764.326-1.4.066-1.817.08-5.36.08-3.543 0-3.96-.014-5.36-.08-.926-.042-1.43-.196-1.764-.326a2.942 2.942 0 0 1-1.093-.712 2.942 2.942 0 0 1-.712-1.093c-.13-.333-.284-.838-.326-1.764-.066-1.4-.08-1.817-.08-5.36 0-3.543.014-3.96.08-5.36.042-.926.196-1.43.326-1.764.173-.444.379-.76.712-1.093.333-.333.65-.539 1.093-.712.333-.13.838-.284 1.764-.326 1.225-.056 1.7-.072 4.4-.072zm0 3.555a5.686 5.686 0 1 0 0 11.372 5.686 5.686 0 0 0 0-11.372zm0 9.373a3.687 3.687 0 1 1 0-7.374 3.687 3.687 0 0 1 0 7.374zm7.238-9.616a1.33 1.33 0 1 1-2.66 0 1.33 1.33 0 0 1 2.66 0z" />[0m
[0m[0m                 </svg>[0m
[0m[0m                 {{ form.instagram_url.label }}[0m
[0m[0m               </label>[0m
[0m[0m               {{ form.instagram_url }}[0m
[0m[33m-              {% if form.instagram_url.errors %}<div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.instagram_url.errors|first }}</div>{% endif %}[0m
[0m[33m-              {% if form.instagram_url.help_text %}<p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.instagram_url.help_text }}</p>{% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-          </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[32m+              {% if form.instagram_url.errors %}[0m
[0m[32m+                <div class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.instagram_url.errors|first }}</div>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+              {% if form.instagram_url.help_text %}[0m
[0m[32m+                <p class="mt-1 text-xs text-gray-500 dark:text-gray-400">{{ form.instagram_url.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[0m         <!-- Action Buttons -->[0m
[0m[0m         <div class="flex items-center justify-between pt-6 border-t border-gray-200 dark:border-gray-700">[0m
[0m[33m-          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[33m-             class="btn-secondary">[0m
[0m[33m-            {% trans "Cancel" %}[0m
[0m[33m-          </a>[0m
[0m[33m-          <button type="submit"[0m
[0m[33m-                  class="btn-primary">[0m
[0m[32m+          <a href="{% url 'teams:clubs_dashboard' %}" class="btn-secondary">{% trans "Cancel" %}</a>[0m
[0m[32m+          <button type="submit" class="btn-primary">[0m
[0m[0m             <svg class="w-4 h-4 mr-2"[0m
[0m[0m                  fill="none"[0m
[0m[0m                  stroke="currentColor"[0m
[0m[1m[34m@@ -208,19 +235,19 @@
[0m
[0m[0m         </div>[0m
[0m[0m       </form>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Info Box -->[0m
[0m[0m     <div class="mt-8 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-6 max-w-4xl">[0m
[0m[0m       <div class="flex">[0m
[0m[0m         <div class="flex-shrink-0">[0m
[0m[33m-          <svg class="h-5 w-5 text-blue-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">[0m
[0m[32m+          <svg class="h-5 w-5 text-blue-400"[0m
[0m[32m+               xmlns="http://www.w3.org/2000/svg"[0m
[0m[32m+               viewBox="0 0 20 20"[0m
[0m[32m+               fill="currentColor">[0m
[0m[0m             <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />[0m
[0m[0m           </svg>[0m
[0m[0m         </div>[0m
[0m[0m         <div class="ml-3">[0m
[0m[33m-          <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">[0m
[0m[33m-            {% trans "Getting Started" %}[0m
[0m[33m-          </h3>[0m
[0m[32m+          <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">{% trans "Getting Started" %}</h3>[0m
[0m[0m           <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[0m             <p>[0m
[0m[0m               {% trans "After creating your club, you'll be able to invite members, organize events, and manage team allocations. All social links are optional but help build your club community." %}[0m
[0m[32m[1m
simlane/templates/teams/club_event_signup_bulk_create.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,338 +1,312 @@
[0m
[0m[0m {% extends "base.html" %}[0m
[0m[32m+[0m
[0m[0m {% load static %}[0m
[0m[0m [0m
[0m[0m {% block title %}{{ title }} | SimLane{% endblock %}[0m
[0m[33m-[0m
[0m[0m {% block content %}[0m
[0m[33m-<div class="mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[32m+  <div class="mx-auto max-w-6xl px-4 py-8 sm:px-6 lg:px-8">[0m
[0m[0m     <!-- Breadcrumb -->[0m
[0m[0m     <nav class="mb-6">[0m
[0m[33m-        <ol class="flex items-center space-x-2 text-sm">[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:clubs_dashboard' %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">[0m
[0m[33m-                    Clubs[0m
[0m[33m-                </a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <a href="{% url 'teams:club_dashboard' club.slug %}" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">[0m
[0m[33m-                    {{ club.name }}[0m
[0m[33m-                </a>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li>[0m
[0m[33m-                <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[33m-            </li>[0m
[0m[33m-            <li class="text-gray-900 dark:text-gray-100">Bulk Create Signups</li>[0m
[0m[33m-        </ol>[0m
[0m[32m+      <ol class="flex items-center space-x-2 text-sm">[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:clubs_dashboard' %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">Clubs</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <a href="{% url 'teams:club_dashboard' club.slug %}"[0m
[0m[32m+             class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200">{{ club.name }}</a>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li>[0m
[0m[32m+          <span class="text-gray-400 dark:text-gray-600">/</span>[0m
[0m[32m+        </li>[0m
[0m[32m+        <li class="text-gray-900 dark:text-gray-100">Bulk Create Signups</li>[0m
[0m[32m+      </ol>[0m
[0m[0m     </nav>[0m
[0m[33m-[0m
[0m[0m     <!-- Header -->[0m
[0m[0m     <div class="mb-8">[0m
[0m[33m-        <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Bulk Create Event Signups</h1>[0m
[0m[33m-        <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[33m-            Create signup sheets for multiple events at once with shared settings.[0m
[0m[33m-        </p>[0m
[0m[32m+      <h1 class="text-3xl font-bold text-gray-900 dark:text-gray-100">Bulk Create Event Signups</h1>[0m
[0m[32m+      <p class="mt-2 text-gray-600 dark:text-gray-400">[0m
[0m[32m+        Create signup sheets for multiple events at once with shared settings.[0m
[0m[32m+      </p>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Quick Info Card -->[0m
[0m[0m     <div class="mb-6 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">[0m
[0m[33m-        <div class="flex">[0m
[0m[33m-            <div class="flex-shrink-0">[0m
[0m[33m-                <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[33m-                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-            </div>[0m
[0m[33m-            <div class="ml-3">[0m
[0m[33m-                <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">[0m
[0m[33m-                    Bulk Creation Benefits[0m
[0m[33m-                </h3>[0m
[0m[33m-                <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[33m-                    <ul class="list-disc list-inside space-y-1">[0m
[0m[33m-                        <li>Set shared team formation settings across all events</li>[0m
[0m[33m-                        <li>Use templates for consistent naming and descriptions</li>[0m
[0m[33m-                        <li>Automatically calculate signup windows relative to event dates</li>[0m
[0m[33m-                        <li>Save configurations as templates for future use</li>[0m
[0m[33m-                    </ul>[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[32m+      <div class="flex">[0m
[0m[32m+        <div class="flex-shrink-0">[0m
[0m[32m+          <svg class="h-5 w-5 text-blue-400" fill="currentColor" viewBox="0 0 20 20">[0m
[0m[32m+            <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />[0m
[0m[32m+          </svg>[0m
[0m[32m+        </div>[0m
[0m[32m+        <div class="ml-3">[0m
[0m[32m+          <h3 class="text-sm font-medium text-blue-800 dark:text-blue-200">Bulk Creation Benefits</h3>[0m
[0m[32m+          <div class="mt-2 text-sm text-blue-700 dark:text-blue-300">[0m
[0m[32m+            <ul class="list-disc list-inside space-y-1">[0m
[0m[32m+              <li>Set shared team formation settings across all events</li>[0m
[0m[32m+              <li>Use templates for consistent naming and descriptions</li>[0m
[0m[32m+              <li>Automatically calculate signup windows relative to event dates</li>[0m
[0m[32m+              <li>Save configurations as templates for future use</li>[0m
[0m[32m+            </ul>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[0m     </div>[0m
[0m[33m-[0m
[0m[0m     <!-- Form -->[0m
[0m[0m     <form method="post" class="space-y-8">[0m
[0m[33m-        {% csrf_token %}[0m
[0m[33m-[0m
[0m[33m-        <!-- Event Selection -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[33m-                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Select Events[0m
[0m[33m-            </h2>[0m
[0m[33m-[0m
[0m[32m+      {% csrf_token %}[0m
[0m[32m+      <!-- Event Selection -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[32m+          <svg class="w-5 h-5 inline mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />[0m
[0m[32m+          </svg>[0m
[0m[32m+          Select Events[0m
[0m[32m+        </h2>[0m
[0m[32m+        <div>[0m
[0m[32m+          <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">[0m
[0m[32m+            Choose events to create signup sheets for:[0m
[0m[32m+          </label>[0m
[0m[32m+          <div class="grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3">{{ form.events }}</div>[0m
[0m[32m+          {% if form.events.help_text %}[0m
[0m[32m+            <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">{{ form.events.help_text }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+          {% if form.events.errors %}[0m
[0m[32m+            <p class="mt-2 text-sm text-red-600 dark:text-red-400">{{ form.events.errors|first }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Shared Settings -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[32m+          <svg class="w-5 h-5 inline mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />[0m
[0m[32m+          </svg>[0m
[0m[32m+          Shared Settings[0m
[0m[32m+        </h2>[0m
[0m[32m+        <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">[0m
[0m[32m+          <!-- Title Template -->[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.title_template.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Title Template</label>[0m
[0m[32m+            {{ form.title_template }}[0m
[0m[32m+            {% if form.title_template.help_text %}[0m
[0m[32m+              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.title_template.help_text }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if form.title_template.errors %}[0m
[0m[32m+              <p class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.title_template.errors|first }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Description Template -->[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.description_template.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[32m+              Description Template[0m
[0m[32m+            </label>[0m
[0m[32m+            {{ form.description_template }}[0m
[0m[32m+            {% if form.description_template.help_text %}[0m
[0m[32m+              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.description_template.help_text }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+            {% if form.description_template.errors %}[0m
[0m[32m+              <p class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.description_template.errors|first }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Signup Timing -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[32m+          <svg class="w-5 h-5 inline mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />[0m
[0m[32m+          </svg>[0m
[0m[32m+          Signup Timing[0m
[0m[32m+        </h2>[0m
[0m[32m+        <div class="space-y-4">[0m
[0m[32m+          <!-- Timing Method -->[0m
[0m[32m+          <div>[0m
[0m[32m+            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">How to set signup windows:</label>[0m
[0m[32m+            <div class="space-y-2">{{ form.signup_timing }}</div>[0m
[0m[32m+            {% if form.signup_timing.help_text %}[0m
[0m[32m+              <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">{{ form.signup_timing.help_text }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Relative Timing Options -->[0m
[0m[32m+          <div id="relative-timing" class="grid grid-cols-1 gap-4 sm:grid-cols-2">[0m
[0m[0m             <div>[0m
[0m[33m-                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">[0m
[0m[33m-                    Choose events to create signup sheets for:[0m
[0m[33m-                </label>[0m
[0m[33m-                <div class="grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3">[0m
[0m[33m-                    {{ form.events }}[0m
[0m[33m-                </div>[0m
[0m[33m-                {% if form.events.help_text %}[0m
[0m[33m-                    <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">{{ form.events.help_text }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-                {% if form.events.errors %}[0m
[0m[33m-                    <p class="mt-2 text-sm text-red-600 dark:text-red-400">{{ form.events.errors|first }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[32m+              <label for="{{ form.days_before_open.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[32m+                Days Before Event to Open[0m
[0m[32m+              </label>[0m
[0m[32m+              {{ form.days_before_open }}[0m
[0m[32m+              {% if form.days_before_open.help_text %}[0m
[0m[32m+                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.days_before_open.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[0m             </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Shared Settings -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[33m-                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Shared Settings[0m
[0m[33m-            </h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="grid grid-cols-1 gap-6 lg:grid-cols-2">[0m
[0m[33m-                <!-- Title Template -->[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.title_template.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Title Template[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.title_template }}[0m
[0m[33m-                    {% if form.title_template.help_text %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.title_template.help_text }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                    {% if form.title_template.errors %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.title_template.errors|first }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Description Template -->[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.description_template.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Description Template[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.description_template }}[0m
[0m[33m-                    {% if form.description_template.help_text %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.description_template.help_text }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                    {% if form.description_template.errors %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-red-600 dark:text-red-400">{{ form.description_template.errors|first }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <label for="{{ form.days_before_close.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[32m+                Days Before Event to Close[0m
[0m[32m+              </label>[0m
[0m[32m+              {{ form.days_before_close }}[0m
[0m[32m+              {% if form.days_before_close.help_text %}[0m
[0m[32m+                <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.days_before_close.help_text }}</p>[0m
[0m[32m+              {% endif %}[0m
[0m[0m             </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Signup Timing -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[33m-                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Signup Timing[0m
[0m[33m-            </h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="space-y-4">[0m
[0m[33m-                <!-- Timing Method -->[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">[0m
[0m[33m-                        How to set signup windows:[0m
[0m[33m-                    </label>[0m
[0m[33m-                    <div class="space-y-2">[0m
[0m[33m-                        {{ form.signup_timing }}[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% if form.signup_timing.help_text %}[0m
[0m[33m-                        <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">{{ form.signup_timing.help_text }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Relative Timing Options -->[0m
[0m[33m-                <div id="relative-timing" class="grid grid-cols-1 gap-4 sm:grid-cols-2">[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.days_before_open.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                            Days Before Event to Open[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.days_before_open }}[0m
[0m[33m-                        {% if form.days_before_open.help_text %}[0m
[0m[33m-                            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.days_before_open.help_text }}</p>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.days_before_close.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                            Days Before Event to Close[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.days_before_close }}[0m
[0m[33m-                        {% if form.days_before_close.help_text %}[0m
[0m[33m-                            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.days_before_close.help_text }}</p>[0m
[0m[33m-                        {% endif %}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Fixed Timing Options -->[0m
[0m[33m-                <div id="fixed-timing" class="grid grid-cols-1 gap-4 sm:grid-cols-2" style="display: none;">[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.fixed_signup_opens.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                            Fixed Open Time[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.fixed_signup_opens }}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <div>[0m
[0m[33m-                        <label for="{{ form.fixed_signup_closes.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                            Fixed Close Time[0m
[0m[33m-                        </label>[0m
[0m[33m-                        {{ form.fixed_signup_closes }}[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Fixed Timing Options -->[0m
[0m[32m+          <div id="fixed-timing"[0m
[0m[32m+               class="grid grid-cols-1 gap-4 sm:grid-cols-2"[0m
[0m[32m+               style="display: none">[0m
[0m[32m+            <div>[0m
[0m[32m+              <label for="{{ form.fixed_signup_opens.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Fixed Open Time</label>[0m
[0m[32m+              {{ form.fixed_signup_opens }}[0m
[0m[0m             </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Team Formation Settings -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[33m-                <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Team Formation Settings[0m
[0m[33m-            </h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4">[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.max_teams.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Max Teams[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.max_teams }}[0m
[0m[33m-                    {% if form.max_teams.help_text %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.max_teams.help_text }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.target_team_size.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Target Team Size[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.target_team_size }}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.min_drivers_per_team.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Min Drivers[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.min_drivers_per_team }}[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div>[0m
[0m[33m-                    <label for="{{ form.max_drivers_per_team.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Max Drivers[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.max_drivers_per_team }}[0m
[0m[33m-                </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <label for="{{ form.fixed_signup_closes.id_for_label }}"[0m
[0m[32m+                     class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Fixed Close Time</label>[0m
[0m[32m+              {{ form.fixed_signup_closes }}[0m
[0m[0m             </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Requirements -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Requirements (Optional)</h2>[0m
[0m[33m-[0m
[0m[33m-            <div>[0m
[0m[33m-                <label for="{{ form.min_license_level.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                    Minimum License Level[0m
[0m[33m-                </label>[0m
[0m[33m-                {{ form.min_license_level }}[0m
[0m[33m-                {% if form.min_license_level.help_text %}[0m
[0m[33m-                    <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.min_license_level.help_text }}</p>[0m
[0m[33m-                {% endif %}[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Template Saving -->[0m
[0m[33m-        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[33m-            <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Save as Template</h2>[0m
[0m[33m-[0m
[0m[33m-            <div class="space-y-4">[0m
[0m[33m-                <div class="flex items-center">[0m
[0m[33m-                    {{ form.save_as_template }}[0m
[0m[33m-                    <label for="{{ form.save_as_template.id_for_label }}" class="ml-2 text-sm text-gray-700 dark:text-gray-300">[0m
[0m[33m-                        Save these settings as a template for future use[0m
[0m[33m-                    </label>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <div id="template-name-field" style="display: none;">[0m
[0m[33m-                    <label for="{{ form.template_name.id_for_label }}" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">[0m
[0m[33m-                        Template Name[0m
[0m[33m-                    </label>[0m
[0m[33m-                    {{ form.template_name }}[0m
[0m[33m-                    {% if form.template_name.help_text %}[0m
[0m[33m-                        <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.template_name.help_text }}</p>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-        <!-- Form Actions -->[0m
[0m[33m-        <div class="flex justify-end space-x-3">[0m
[0m[33m-            <a href="{% url 'teams:club_event_signups' club.slug %}"[0m
[0m[33m-               class="btn btn-secondary">[0m
[0m[33m-                Cancel[0m
[0m[33m-            </a>[0m
[0m[33m-            <button type="submit" class="btn btn-primary">[0m
[0m[33m-                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>[0m
[0m[33m-                </svg>[0m
[0m[33m-                Create Signup Sheets[0m
[0m[33m-            </button>[0m
[0m[33m-        </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Team Formation Settings -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">[0m
[0m[32m+          <svg class="w-5 h-5 inline mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />[0m
[0m[32m+          </svg>[0m
[0m[32m+          Team Formation Settings[0m
[0m[32m+        </h2>[0m
[0m[32m+        <div class="grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-4">[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.max_teams.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Max Teams</label>[0m
[0m[32m+            {{ form.max_teams }}[0m
[0m[32m+            {% if form.max_teams.help_text %}[0m
[0m[32m+              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.max_teams.help_text }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.target_team_size.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Target Team Size</label>[0m
[0m[32m+            {{ form.target_team_size }}[0m
[0m[32m+          </div>[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.min_drivers_per_team.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Min Drivers</label>[0m
[0m[32m+            {{ form.min_drivers_per_team }}[0m
[0m[32m+          </div>[0m
[0m[32m+          <div>[0m
[0m[32m+            <label for="{{ form.max_drivers_per_team.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Max Drivers</label>[0m
[0m[32m+            {{ form.max_drivers_per_team }}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Requirements -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Requirements (Optional)</h2>[0m
[0m[32m+        <div>[0m
[0m[32m+          <label for="{{ form.min_license_level.id_for_label }}"[0m
[0m[32m+                 class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Minimum License Level</label>[0m
[0m[32m+          {{ form.min_license_level }}[0m
[0m[32m+          {% if form.min_license_level.help_text %}[0m
[0m[32m+            <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.min_license_level.help_text }}</p>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Template Saving -->[0m
[0m[32m+      <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6">[0m
[0m[32m+        <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4">Save as Template</h2>[0m
[0m[32m+        <div class="space-y-4">[0m
[0m[32m+          <div class="flex items-center">[0m
[0m[32m+            {{ form.save_as_template }}[0m
[0m[32m+            <label for="{{ form.save_as_template.id_for_label }}"[0m
[0m[32m+                   class="ml-2 text-sm text-gray-700 dark:text-gray-300">[0m
[0m[32m+              Save these settings as a template for future use[0m
[0m[32m+            </label>[0m
[0m[32m+          </div>[0m
[0m[32m+          <div id="template-name-field" style="display: none;">[0m
[0m[32m+            <label for="{{ form.template_name.id_for_label }}"[0m
[0m[32m+                   class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Template Name</label>[0m
[0m[32m+            {{ form.template_name }}[0m
[0m[32m+            {% if form.template_name.help_text %}[0m
[0m[32m+              <p class="mt-1 text-sm text-gray-500 dark:text-gray-400">{{ form.template_name.help_text }}</p>[0m
[0m[32m+            {% endif %}[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+      <!-- Form Actions -->[0m
[0m[32m+      <div class="flex justify-end space-x-3">[0m
[0m[32m+        <a href="{% url 'teams:club_event_signups' club.slug %}"[0m
[0m[32m+           class="btn btn-secondary">Cancel</a>[0m
[0m[32m+        <button type="submit" class="btn btn-primary">[0m
[0m[32m+          <svg class="w-4 h-4 mr-2"[0m
[0m[32m+               fill="none"[0m
[0m[32m+               stroke="currentColor"[0m
[0m[32m+               viewBox="0 0 24 24">[0m
[0m[32m+            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />[0m
[0m[32m+          </svg>[0m
[0m[32m+          Create Signup Sheets[0m
[0m[32m+        </button>[0m
[0m[32m+      </div>[0m
[0m[0m     </form>[0m
[0m[33m-</div>[0m
[0m[33m-[0m
[0m[33m-<script>[0m
[0m[33m-// Show/hide timing options based on selection[0m
[0m[33m-document.addEventListener('DOMContentLoaded', function() {[0m
[0m[33m-    const timingRadios = document.querySelectorAll('input[name="signup_timing"]');[0m
[0m[33m-    const relativeDiv = document.getElementById('relative-timing');[0m
[0m[33m-    const fixedDiv = document.getElementById('fixed-timing');[0m
[0m[33m-[0m
[0m[33m-    function updateTimingDisplay() {[0m
[0m[32m+  </div>[0m
[0m[32m+  <script>[0m
[0m[32m+    // Show/hide timing options based on selection[0m
[0m[32m+    document.addEventListener('DOMContentLoaded', function() {[0m
[0m[32m+      const timingRadios = document.querySelectorAll('input[name="signup_timing"]');[0m
[0m[32m+      const relativeDiv = document.getElementById('relative-timing');[0m
[0m[32m+      const fixedDiv = document.getElementById('fixed-timing');[0m
[0m[32m+[0m
[0m[32m+      function updateTimingDisplay() {[0m
[0m[0m         const selected = document.querySelector('input[name="signup_timing"]:checked');[0m
[0m[0m         if (!selected) return;[0m
[0m[0m [0m
[0m[0m         const value = selected.value;[0m
[0m[0m [0m
[0m[0m         if (value === 'relative') {[0m
[0m[33m-            relativeDiv.style.display = 'grid';[0m
[0m[33m-            fixedDiv.style.display = 'none';[0m
[0m[32m+          relativeDiv.style.display = 'grid';[0m
[0m[32m+          fixedDiv.style.display = 'none';[0m
[0m[0m         } else if (value === 'fixed') {[0m
[0m[33m-            relativeDiv.style.display = 'none';[0m
[0m[33m-            fixedDiv.style.display = 'grid';[0m
[0m[32m+          relativeDiv.style.display = 'none';[0m
[0m[32m+          fixedDiv.style.display = 'grid';[0m
[0m[0m         } else { // immediate[0m
[0m[33m-            relativeDiv.style.display = 'none';[0m
[0m[33m-            fixedDiv.style.display = 'none';[0m
[0m[32m+          relativeDiv.style.display = 'none';[0m
[0m[32m+          fixedDiv.style.display = 'none';[0m
[0m[0m         }[0m
[0m[33m-    }[0m
[0m[33m-[0m
[0m[33m-    timingRadios.forEach(radio => {[0m
[0m[32m+      }[0m
[0m[32m+[0m
[0m[32m+      timingRadios.forEach(radio => {[0m
[0m[0m         radio.addEventListener('change', updateTimingDisplay);[0m
[0m[32m+      });[0m
[0m[32m+[0m
[0m[32m+      updateTimingDisplay(); // Initial state[0m
[0m[32m+[0m
[0m[32m+      // Template name field visibility[0m
[0m[32m+      const saveTemplateCheckbox = document.querySelector('input[name="save_as_template"]');[0m
[0m[32m+      const templateNameField = document.getElementById('template-name-field');[0m
[0m[32m+[0m
[0m[32m+      if (saveTemplateCheckbox && templateNameField) {[0m
[0m[32m+        saveTemplateCheckbox.addEventListener('change', function() {[0m
[0m[32m+          templateNameField.style.display = this.checked ? 'block' : 'none';[0m
[0m[32m+        });[0m
[0m[32m+      }[0m
[0m[0m     });[0m
[0m[33m-[0m
[0m[33m-    updateTimingDisplay(); // Initial state[0m
[0m[33m-[0m
[0m[33m-    // Template name field visibility[0m
[0m[33m-    const saveTemplateCheckbox = document.querySelector('input[name="save_as_template"]');[0m
[0m[33m-    const templateNameField = document.getElementById('template-name-field');[0m
[0m[33m-[0m
[0m[33m-    if (saveTemplateCheckbox && templateNameField) {[0m
[0m[33m-        saveTemplateCheckbox.addEventListener('change', function() {[0m
[0m[33m-            templateNameField.style.display = this.checked ? 'block' : 'none';[0m
[0m[33m-        });[0m
[0m[33m-    }[0m
[0m[33m-});[0m
[0m[33m-</script>[0m
[0m[32m+  </script>[0m
[0m[0m {% endblock %}[0m
[0m[32m[1m
simlane/templates/teams/partials/team_suggestions.html
[2m───────────────────────────────────────────────────────────────────────────────[0m
[0m[1m[34m@@ -1,163 +1,160 @@
[0m
[0m[0m <!-- HTMX Partial: Team Suggestions -->[0m
[0m[0m <div id="team-suggestions-content" class="space-y-4">[0m
[0m[33m-    {% if suggestions %}[0m
[0m[33m-        {% for suggestion in suggestions %}[0m
[0m[33m-            <div class="border border-gray-200 rounded-lg hover:border-blue-300 transition-colors"[0m
[0m[33m-                 x-data="{ selected: false }"[0m
[0m[33m-                 :class="selected && 'border-blue-500 bg-blue-50'">[0m
[0m[32m+  {% if suggestions %}[0m
[0m[32m+    {% for suggestion in suggestions %}[0m
[0m[32m+      <div class="border border-gray-200 rounded-lg hover:border-blue-300 transition-colors"[0m
[0m[32m+           x-data="{ selected: false }"[0m
[0m[32m+           :class="selected && 'border-blue-500 bg-blue-50'">[0m
[0m[32m+        <!-- Team Header -->[0m
[0m[32m+        <div class="px-4 py-3 border-b border-gray-200 bg-gray-50 rounded-t-lg">[0m
[0m[32m+          <div class="flex items-center justify-between">[0m
[0m[32m+            <div class="flex items-center space-x-3">[0m
[0m[32m+              <input type="checkbox"[0m
[0m[32m+                     x-model="selected"[0m
[0m[32m+                     class="h-4 w-4 text-blue-600 rounded border-gray-300" />[0m
[0m[32m+              <h4 class="font-medium text-gray-900">Team {{ forloop.counter|add:64|chr }}</h4>[0m
[0m[32m+              <span class="text-sm text-gray-500">({{ suggestion.members|length }} members)</span>[0m
[0m[32m+            </div>[0m
[0m[32m+            <!-- Metrics -->[0m
[0m[32m+            <div class="flex items-center space-x-4 text-sm">[0m
[0m[32m+              <div class="flex items-center space-x-1">[0m
[0m[32m+                <svg class="w-4 h-4 text-green-500"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />[0m
[0m[32m+                </svg>[0m
[0m[32m+                <span class="text-gray-700">{{ suggestion.total_overlap_hours|floatformat:1 }}h overlap</span>[0m
[0m[32m+              </div>[0m
[0m[32m+              <div class="flex items-center space-x-1">[0m
[0m[32m+                <svg class="w-4 h-4 text-blue-500"[0m
[0m[32m+                     fill="none"[0m
[0m[32m+                     stroke="currentColor"[0m
[0m[32m+                     viewBox="0 0 24 24">[0m
[0m[32m+                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />[0m
[0m[32m+                </svg>[0m
[0m[32m+                <span class="text-gray-700">{{ suggestion.balance_score|floatformat:0 }}% balanced</span>[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+        </div>[0m
[0m[32m+        <!-- Team Members -->[0m
[0m[32m+        <div class="p-4">[0m
[0m[32m+          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">[0m
[0m[32m+            {% for member in suggestion.members %}[0m
[0m[32m+              <div class="flex items-center space-x-3 p-2 rounded-lg bg-gray-50">[0m
[0m[32m+                <div class="flex-shrink-0">[0m
[0m[32m+                  <div class="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center">[0m
[0m[32m+                    <span class="text-xs font-medium text-white">[0m
[0m[32m+                      {{ member.first_name|slice:":1" }}{{ member.last_name|slice:":1" }}[0m
[0m[32m+                    </span>[0m
[0m[32m+                  </div>[0m
[0m[32m+                </div>[0m
[0m[32m+                <div class="flex-1 min-w-0">[0m
[0m[32m+                  <p class="text-sm font-medium text-gray-900 truncate">{{ member.first_name }} {{ member.last_name }}</p>[0m
[0m[32m+                  <p class="text-xs text-gray-500">{{ member.username }}</p>[0m
[0m[32m+                </div>[0m
[0m[32m+              </div>[0m
[0m[32m+            {% endfor %}[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Team Details -->[0m
[0m[32m+          <div class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">[0m
[0m[32m+            <div>[0m
[0m[32m+              <dt class="text-gray-500">Recommended Car</dt>[0m
[0m[32m+              <dd class="font-medium text-gray-900">[0m
[0m[32m+                {{ suggestion.recommended_car|default:"Any" }}[0m
[0m[32m+              </dd>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <dt class="text-gray-500">Avg Experience</dt>[0m
[0m[32m+              <dd class="font-medium text-gray-900">[0m
[0m[32m+                {% if suggestion.average_experience <= 1.5 %}[0m
[0m[32m+                  Beginner[0m
[0m[32m+                {% elif suggestion.average_experience <= 2.5 %}[0m
[0m[32m+                  Intermediate[0m
[0m[32m+                {% elif suggestion.average_experience <= 3.5 %}[0m
[0m[32m+                  Advanced[0m
[0m[32m+                {% else %}[0m
[0m[32m+                  Professional[0m
[0m[32m+                {% endif %}[0m
[0m[32m+              </dd>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <dt class="text-gray-500">Total Availability</dt>[0m
[0m[32m+              <dd class="font-medium text-gray-900">[0m
[0m[32m+                {{ suggestion.total_availability_hours|floatformat:0 }}h[0m
[0m[32m+              </dd>[0m
[0m[32m+            </div>[0m
[0m[32m+            <div>[0m
[0m[32m+              <dt class="text-gray-500">Compatibility</dt>[0m
[0m[32m+              <dd class="font-medium text-gray-900">[0m
[0m[32m+                {{ suggestion.compatibility_score|floatformat:1 }}[0m
[0m[32m+              </dd>[0m
[0m[32m+            </div>[0m
[0m[32m+          </div>[0m
[0m[32m+          <!-- Car Preferences -->[0m
[0m[32m+          {% if suggestion.car_preferences %}[0m
[0m[32m+            <div class="mt-3 pt-3 border-t border-gray-100">[0m
[0m[32m+              <h5 class="text-xs font-medium text-gray-500 mb-2">Car Preferences</h5>[0m
[0m[32m+              <div class="flex flex-wrap gap-2">[0m
[0m[32m+                {% for car, count in suggestion.car_preferences.items %}[0m
[0m[32m+                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">[0m
[0m[32m+                    {{ car }} ({{ count }})[0m
[0m[32m+                  </span>[0m
[0m[32m+                {% endfor %}[0m
[0m[32m+              </div>[0m
[0m[32m+            </div>[0m
[0m[32m+          {% endif %}[0m
[0m[32m+        </div>[0m
[0m[32m+      </div>[0m
[0m[32m+    {% endfor %}[0m
[0m[32m+    <!-- Actions -->[0m
[0m[32m+    <div class="mt-6 flex justify-end space-x-3">[0m
[0m[32m+      <button type="button"[0m
[0m[32m+              class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"[0m
[0m[32m+              onclick="regenerateSuggestions()">Regenerate Suggestions</button>[0m
[0m[32m+      <button type="button"[0m
[0m[32m+              class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"[0m
[0m[32m+              onclick="createSelectedTeams()">Create Selected Teams</button>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% else %}[0m
[0m[32m+    <!-- No Suggestions -->[0m
[0m[32m+    <div class="text-center py-12">[0m
[0m[32m+      <svg class="mx-auto h-12 w-12 text-gray-400"[0m
[0m[32m+           fill="none"[0m
[0m[32m+           stroke="currentColor"[0m
[0m[32m+           viewBox="0 0 24 24">[0m
[0m[32m+        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />[0m
[0m[32m+      </svg>[0m
[0m[32m+      <h3 class="mt-2 text-sm font-medium text-gray-900">No Team Suggestions</h3>[0m
[0m[32m+      <p class="mt-1 text-sm text-gray-500">[0m
[0m[32m+        Click "Generate Teams" to create team suggestions based on availability overlap.[0m
[0m[32m+      </p>[0m
[0m[32m+    </div>[0m
[0m[32m+  {% endif %}[0m
[0m[32m+</div>[0m
[0m[32m+<script>[0m
[0m[32m+  function regenerateSuggestions() {[0m
[0m[32m+    if (window.teamFormationDashboard) {[0m
[0m[32m+      window.teamFormationDashboard.generateTeamSuggestions();[0m
[0m[32m+    }[0m
[0m[32m+  }[0m
[0m[0m [0m
[0m[33m-                <!-- Team Header -->[0m
[0m[33m-                <div class="px-4 py-3 border-b border-gray-200 bg-gray-50 rounded-t-lg">[0m
[0m[33m-                    <div class="flex items-center justify-between">[0m
[0m[33m-                        <div class="flex items-center space-x-3">[0m
[0m[33m-                            <input type="checkbox"[0m
[0m[33m-                                   x-model="selected"[0m
[0m[33m-                                   class="h-4 w-4 text-blue-600 rounded border-gray-300">[0m
[0m[33m-                            <h4 class="font-medium text-gray-900">[0m
[0m[33m-                                Team {{ forloop.counter|add:64|chr }}[0m
[0m[33m-                            </h4>[0m
[0m[33m-                            <span class="text-sm text-gray-500">[0m
[0m[33m-                                ({{ suggestion.members|length }} members)[0m
[0m[33m-                            </span>[0m
[0m[33m-                        </div>[0m
[0m[33m-[0m
[0m[33m-                        <!-- Metrics -->[0m
[0m[33m-                        <div class="flex items-center space-x-4 text-sm">[0m
[0m[33m-                            <div class="flex items-center space-x-1">[0m
[0m[33m-                                <svg class="w-4 h-4 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"[0m
[0m[33m-                                          d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span class="text-gray-700">{{ suggestion.total_overlap_hours|floatformat:1 }}h overlap</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                            <div class="flex items-center space-x-1">[0m
[0m[33m-                                <svg class="w-4 h-4 text-blue-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"[0m
[0m[33m-                                          d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />[0m
[0m[33m-                                </svg>[0m
[0m[33m-                                <span class="text-gray-700">{{ suggestion.balance_score|floatformat:0 }}% balanced</span>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                </div>[0m
[0m[33m-[0m
[0m[33m-                <!-- Team Members -->[0m
[0m[33m-                <div class="p-4">[0m
[0m[33m-                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">[0m
[0m[33m-                        {% for member in suggestion.members %}[0m
[0m[33m-                            <div class="flex items-center space-x-3 p-2 rounded-lg bg-gray-50">[0m
[0m[33m-                                <div class="flex-shrink-0">[0m
[0m[33m-                                    <div class="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center">[0m
[0m[33m-                                        <span class="text-xs font-medium text-white">[0m
[0m[33m-                                            {{ member.first_name|slice:":1" }}{{ member.last_name|slice:":1" }}[0m
[0m[33m-                                        </span>[0m
[0m[33m-                                    </div>[0m
[0m[33m-                                </div>[0m
[0m[33m-                                <div class="flex-1 min-w-0">[0m
[0m[33m-                                    <p class="text-sm font-medium text-gray-900 truncate">[0m
[0m[33m-                                        {{ member.first_name }} {{ member.last_name }}[0m
[0m[33m-                                    </p>[0m
[0m[33m-                                    <p class="text-xs text-gray-500">[0m
[0m[33m-                                        {{ member.username }}[0m
[0m[33m-                                    </p>[0m
[0m[33m-                                </div>[0m
[0m[33m-                            </div>[0m
[0m[33m-                        {% endfor %}[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Team Details -->[0m
[0m[33m-                    <div class="mt-4 grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <dt class="text-gray-500">Recommended Car</dt>[0m
[0m[33m-                            <dd class="font-medium text-gray-900">{{ suggestion.recommended_car|default:"Any" }}</dd>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <dt class="text-gray-500">Avg Experience</dt>[0m
[0m[33m-                            <dd class="font-medium text-gray-900">[0m
[0m[33m-                                {% if suggestion.average_experience <= 1.5 %}Beginner[0m
[0m[33m-                                {% elif suggestion.average_experience <= 2.5 %}Intermediate[0m
[0m[33m-                                {% elif suggestion.average_experience <= 3.5 %}Advanced[0m
[0m[33m-                                {% else %}Professional{% endif %}[0m
[0m[33m-                            </dd>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <dt class="text-gray-500">Total Availability</dt>[0m
[0m[33m-                            <dd class="font-medium text-gray-900">{{ suggestion.total_availability_hours|floatformat:0 }}h</dd>[0m
[0m[33m-                        </div>[0m
[0m[33m-                        <div>[0m
[0m[33m-                            <dt class="text-gray-500">Compatibility</dt>[0m
[0m[33m-                            <dd class="font-medium text-gray-900">{{ suggestion.compatibility_score|floatformat:1 }}</dd>[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-[0m
[0m[33m-                    <!-- Car Preferences -->[0m
[0m[33m-                    {% if suggestion.car_preferences %}[0m
[0m[33m-                    <div class="mt-3 pt-3 border-t border-gray-100">[0m
[0m[33m-                        <h5 class="text-xs font-medium text-gray-500 mb-2">Car Preferences</h5>[0m
[0m[33m-                        <div class="flex flex-wrap gap-2">[0m
[0m[33m-                            {% for car, count in suggestion.car_preferences.items %}[0m
[0m[33m-                                <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">[0m
[0m[33m-                                    {{ car }} ({{ count }})[0m
[0m[33m-                                </span>[0m
[0m[33m-                            {% endfor %}[0m
[0m[33m-                        </div>[0m
[0m[33m-                    </div>[0m
[0m[33m-                    {% endif %}[0m
[0m[33m-                </div>[0m
[0m[33m-            </div>[0m
[0m[33m-        {% endfor %}[0m
[0m[33m-[0m
[0m[33m-        <!-- Actions -->[0m
[0m[33m-        <div class="mt-6 flex justify-end space-x-3">[0m
[0m[33m-            <button type="button"[0m
[0m[33m-                    class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"[0m
[0m[33m-                    onclick="regenerateSuggestions()">[0m
[0m[33m-                Regenerate Suggestions[0m
[0m[33m-            </button>[0m
[0m[33m-            <button type="button"[0m
[0m[33m-                    class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700"[0m
[0m[33m-                    onclick="createSelectedTeams()">[0m
[0m[33m-                Create Selected Teams[0m
[0m[33m-            </button>[0m
[0m[33m-        </div>[0m
[0m[33m-[0m
[0m[33m-    {% else %}[0m
[0m[33m-        <!-- No Suggestions -->[0m
[0m[33m-        <div class="text-center py-12">[0m
[0m[33m-            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">[0m
[0m[33m-                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"[0m
[0m[33m-                      d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />[
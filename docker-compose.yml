# Default docker-compose.yml - Web-only configuration for everyday development
# For full services including Celery, use: docker-compose -f docker-compose.full.yml

volumes:
  simlane_local_postgres_data: {}
  simlane_local_postgres_data_backups: {}
  simlane_local_redis_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
      target: python-run-stage
    image: simlane_local_django
    container_name: simlane_local_django
    depends_on:
      - postgres
      - redis
      - mailpit
    volumes:
      - .:/app:z
    env_file:
      - ./.env
    ports:
      - '8000:8000'
    command: /start
    environment:
      - DOCKER_BUILDKIT=1

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: simlane_production_postgres
    container_name: simlane_local_postgres
    volumes:
      - simlane_local_postgres_data:/var/lib/postgresql/data
      - simlane_local_postgres_data_backups:/backups
    env_file:
      - ./.env

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: simlane_local_mailpit
    ports:
      - '8025:8025'

  redis:
    image: docker.io/redis:6
    container_name: simlane_local_redis
    volumes:
      - simlane_local_redis_data:/data

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: simlane_local_node
    container_name: simlane_local_node
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
    environment:
      - DOCKER_BUILDKIT=1

# Generated by Django 5.1.11 on 2025-06-18 11:58

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sim', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('social_links', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('discord_guild_id', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['discord_guild_id'], name='teams_club_discord_02e26e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('logo_url', models.URLField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='teams.club')),
            ],
        ),
        migrations.CreateModel(
            name='EventEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='sim.event')),
                ('event_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entries', to='sim.eventclass')),
                ('sim_car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='sim.simcar')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_entries', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entries', to='teams.team')),
            ],
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='teams.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ClubMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('club', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='teams.club')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='teams_clubm_user_id_bd1813_idx'), models.Index(fields=['club'], name='teams_clubm_club_id_38c596_idx')],
                'unique_together': {('user', 'club')},
            },
        ),
        migrations.CreateModel(
            name='DriverAvailability',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('available', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='sim.eventinstance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_availabilities', to=settings.AUTH_USER_MODEL)),
                ('event_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='teams.evententry')),
            ],
            options={
                'indexes': [models.Index(fields=['event_entry'], name='teams_drive_event_e_2e958f_idx'), models.Index(fields=['user'], name='teams_drive_user_id_dc8c28_idx'), models.Index(fields=['instance'], name='teams_drive_instanc_3ada2b_idx')],
                'unique_together': {('event_entry', 'user', 'instance')},
            },
        ),
        migrations.CreateModel(
            name='PredictedStint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stint_order', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_stints', to='teams.evententry')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_stints', to='sim.eventinstance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_stints', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['event_entry'], name='teams_predi_event_e_f225f6_idx'), models.Index(fields=['user'], name='teams_predi_user_id_a0d560_idx'), models.Index(fields=['instance'], name='teams_predi_instanc_1277d8_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['club'], name='teams_team_club_id_cd1513_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('club', 'name')},
        ),
        migrations.AddIndex(
            model_name='evententry',
            index=models.Index(fields=['event'], name='teams_event_event_i_78743b_idx'),
        ),
        migrations.AddIndex(
            model_name='evententry',
            index=models.Index(fields=['sim_car'], name='teams_event_sim_car_0db07f_idx'),
        ),
        migrations.AddIndex(
            model_name='evententry',
            index=models.Index(fields=['team'], name='teams_event_team_id_28ea8b_idx'),
        ),
        migrations.AddIndex(
            model_name='evententry',
            index=models.Index(fields=['user'], name='teams_event_user_id_6d307f_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['user'], name='teams_teamm_user_id_08f226_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['team'], name='teams_teamm_team_id_015042_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('user', 'team')},
        ),
    ]

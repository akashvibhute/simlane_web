# Generated by Django 5.1.11 on 2025-06-28 16:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sim', '0003_initial'),
        ('teams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='club',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_clubs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clubeventsignupsheet',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_signup_sheets', to='teams.club'),
        ),
        migrations.AddField(
            model_name='clubeventsignupsheet',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_signup_sheets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clubeventsignupsheet',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_signup_sheets', to='sim.event'),
        ),
        migrations.AddField(
            model_name='clubinvitation',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='teams.club'),
        ),
        migrations.AddField(
            model_name='clubinvitation',
            name='invited_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='clubmember',
            name='club',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='teams.club'),
        ),
        migrations.AddField(
            model_name='clubmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clubs', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='assigned_car',
            field=models.ForeignKey(blank=True, help_text='Final car assignment after team formation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_participations', to='sim.simcar'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='assigned_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_participations', to='sim.eventclass'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='assigned_time_slot',
            field=models.ForeignKey(blank=True, help_text='Final time slot assignment after team formation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_participations', to='sim.timeslot'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='backup_car',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='backup_participations', to='sim.simcar'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='sim.event'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='preferred_car',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='preferred_participations', to='sim.simcar'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='preferred_classes',
            field=models.ManyToManyField(blank=True, related_name='preferred_participations', to='sim.eventclass'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='preferred_time_slots',
            field=models.ManyToManyField(blank=True, related_name='preferred_participations', to='sim.timeslot'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='signup_context_club',
            field=models.ForeignKey(blank=True, help_text='Which club this signup is associated with (for club-organized signups)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_signups', to='teams.club'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='availabilitywindow',
            name='participation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability_windows', to='teams.eventparticipation'),
        ),
        migrations.AddField(
            model_name='eventsignupinvitation',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signup_invitations', to='sim.event'),
        ),
        migrations.AddField(
            model_name='eventsignupinvitation',
            name='invitee_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_signup_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventsignupinvitation',
            name='organizer_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_signup_invitations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='signup_invitation',
            field=models.ForeignKey(blank=True, help_text='Invitation that led to this signup (for individual-organized events)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='teams.eventsignupinvitation'),
        ),
        migrations.AddField(
            model_name='racestrategy',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_strategies', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='racestrategy',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='race_strategies', to='sim.event'),
        ),
        migrations.AddField(
            model_name='racestrategy',
            name='time_slot',
            field=models.ForeignKey(help_text='Specific time slot/session this strategy is for', on_delete=django.db.models.deletion.CASCADE, related_name='race_strategies', to='sim.timeslot'),
        ),
        migrations.AddField(
            model_name='stintplan',
            name='driver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stint_plans', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='stintplan',
            name='strategy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stint_plans', to='teams.racestrategy'),
        ),
        migrations.AddField(
            model_name='team',
            name='club',
            field=models.ForeignKey(blank=True, help_text='Club this team is associated with (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teams', to='teams.club'),
        ),
        migrations.AddField(
            model_name='team',
            name='owner_sim_profile',
            field=models.ForeignKey(blank=True, help_text='SimProfile that owns this team (for imported teams)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owned_teams', to='sim.simprofile'),
        ),
        migrations.AddField(
            model_name='team',
            name='owner_user',
            field=models.ForeignKey(blank=True, help_text='User who created this team (for user-created teams)', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='owned_teams', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='team',
            name='source_simulator',
            field=models.ForeignKey(blank=True, help_text='Simulator this team was imported from', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imported_teams', to='sim.simulator'),
        ),
        migrations.AddField(
            model_name='racestrategy',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='race_strategies', to='teams.team'),
        ),
        migrations.AddField(
            model_name='eventparticipation',
            name='team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_participations', to='teams.team'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='teams.team'),
        ),
        migrations.AddField(
            model_name='teammember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_members', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='club',
            index=models.Index(fields=['discord_guild_id'], name='teams_club_discord_02e26e_idx'),
        ),
        migrations.AddIndex(
            model_name='clubeventsignupsheet',
            index=models.Index(fields=['club', 'status'], name='teams_clube_club_id_213dee_idx'),
        ),
        migrations.AddIndex(
            model_name='clubeventsignupsheet',
            index=models.Index(fields=['event', 'status'], name='teams_clube_event_i_90f8f1_idx'),
        ),
        migrations.AddIndex(
            model_name='clubeventsignupsheet',
            index=models.Index(fields=['signup_opens', 'signup_closes'], name='teams_clube_signup__94e2d5_idx'),
        ),
        migrations.AddIndex(
            model_name='clubeventsignupsheet',
            index=models.Index(fields=['status'], name='teams_clube_status_69362a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clubeventsignupsheet',
            unique_together={('club', 'event')},
        ),
        migrations.AddIndex(
            model_name='clubinvitation',
            index=models.Index(fields=['token'], name='teams_clubi_token_02b257_idx'),
        ),
        migrations.AddIndex(
            model_name='clubinvitation',
            index=models.Index(fields=['expires_at'], name='teams_clubi_expires_4c26c6_idx'),
        ),
        migrations.AddIndex(
            model_name='clubinvitation',
            index=models.Index(fields=['club', 'email'], name='teams_clubi_club_id_98c7cf_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clubinvitation',
            unique_together={('club', 'email')},
        ),
        migrations.AddIndex(
            model_name='clubmember',
            index=models.Index(fields=['user'], name='teams_clubm_user_id_bd1813_idx'),
        ),
        migrations.AddIndex(
            model_name='clubmember',
            index=models.Index(fields=['club'], name='teams_clubm_club_id_38c596_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clubmember',
            unique_together={('user', 'club')},
        ),
        migrations.AddIndex(
            model_name='availabilitywindow',
            index=models.Index(fields=['participation'], name='teams_avail_partici_ff4801_idx'),
        ),
        migrations.AddIndex(
            model_name='availabilitywindow',
            index=models.Index(fields=['start_time', 'end_time'], name='teams_avail_start_t_4b8159_idx'),
        ),
        migrations.AddIndex(
            model_name='availabilitywindow',
            index=models.Index(fields=['can_drive', 'can_spot'], name='teams_avail_can_dri_e95c7e_idx'),
        ),
        migrations.AddIndex(
            model_name='availabilitywindow',
            index=models.Index(fields=['preference_level'], name='teams_avail_prefere_982844_idx'),
        ),
        migrations.AddIndex(
            model_name='availabilitywindow',
            index=models.Index(fields=['participation', 'start_time', 'end_time'], name='teams_avail_partici_d45915_idx'),
        ),
        migrations.AddConstraint(
            model_name='availabilitywindow',
            constraint=models.CheckConstraint(condition=models.Q(('start_time__lt', models.F('end_time'))), name='availability_window_valid_time_range'),
        ),
        migrations.AddConstraint(
            model_name='availabilitywindow',
            constraint=models.CheckConstraint(condition=models.Q(('can_drive', True), ('can_spot', True), ('can_strategize', True), _connector='OR'), name='availability_window_has_role'),
        ),
        migrations.AddIndex(
            model_name='eventsignupinvitation',
            index=models.Index(fields=['token'], name='teams_event_token_725e92_idx'),
        ),
        migrations.AddIndex(
            model_name='eventsignupinvitation',
            index=models.Index(fields=['event', 'status'], name='teams_event_event_i_001490_idx'),
        ),
        migrations.AddIndex(
            model_name='eventsignupinvitation',
            index=models.Index(fields=['expires_at'], name='teams_event_expires_615e16_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventsignupinvitation',
            unique_together={('event', 'organizer_user', 'invitee_email')},
        ),
        migrations.AddIndex(
            model_name='stintplan',
            index=models.Index(fields=['strategy', 'stint_number'], name='teams_stint_strateg_00c651_idx'),
        ),
        migrations.AddIndex(
            model_name='stintplan',
            index=models.Index(fields=['driver', 'status'], name='teams_stint_driver__6faec5_idx'),
        ),
        migrations.AddIndex(
            model_name='stintplan',
            index=models.Index(fields=['status'], name='teams_stint_status_ff03c3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stintplan',
            unique_together={('strategy', 'stint_number')},
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['owner_user'], name='teams_team_owner_u_9c6757_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['owner_sim_profile'], name='teams_team_owner_s_a3ae27_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['club'], name='teams_team_club_id_cd1513_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['slug'], name='teams_team_slug_1ce39f_idx'),
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['sim_api_id', 'source_simulator'], name='teams_team_sim_api_d3aaaf_idx'),
        ),
        migrations.AddConstraint(
            model_name='team',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('owner_sim_profile__isnull', True), ('owner_user__isnull', False)), models.Q(('owner_sim_profile__isnull', False), ('owner_user__isnull', True)), _connector='OR'), name='team_has_single_owner_type'),
        ),
        migrations.AlterUniqueTogether(
            name='team',
            unique_together={('club', 'slug'), ('owner_sim_profile', 'slug'), ('owner_user', 'slug')},
        ),
        migrations.AddIndex(
            model_name='racestrategy',
            index=models.Index(fields=['team', 'event'], name='teams_races_team_id_05199a_idx'),
        ),
        migrations.AddIndex(
            model_name='racestrategy',
            index=models.Index(fields=['is_active'], name='teams_races_is_acti_0ea433_idx'),
        ),
        migrations.AddIndex(
            model_name='racestrategy',
            index=models.Index(fields=['time_slot'], name='teams_races_time_sl_2982ba_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='racestrategy',
            unique_together={('team', 'event', 'time_slot', 'name')},
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['event', 'status'], name='teams_event_event_i_26330a_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['user', 'status'], name='teams_event_user_id_83f8ea_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['team', 'status'], name='teams_event_team_id_6d1337_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['participation_type', 'status'], name='teams_event_partici_883462_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['event', 'participation_type'], name='teams_event_event_i_56d4c9_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['signup_context_club', 'event'], name='teams_event_signup__d95781_idx'),
        ),
        migrations.AddIndex(
            model_name='eventparticipation',
            index=models.Index(fields=['assigned_time_slot', 'status'], name='teams_event_assigne_569c3e_idx'),
        ),
        migrations.AddConstraint(
            model_name='eventparticipation',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('team__isnull', True), ('user__isnull', False)), models.Q(('team__isnull', False), ('user__isnull', True)), _connector='OR'), name='participation_has_single_participant_type'),
        ),
        migrations.AddConstraint(
            model_name='eventparticipation',
            constraint=models.CheckConstraint(condition=models.Q(('participation_type', 'team_entry'), ('team__isnull', True), _negated=True), name='team_entry_requires_team'),
        ),
        migrations.AddConstraint(
            model_name='eventparticipation',
            constraint=models.UniqueConstraint(condition=models.Q(('assigned_time_slot__isnull', False), ('user__isnull', False)), fields=('assigned_time_slot', 'user'), name='unique_user_event_time_slot_participation'),
        ),
        migrations.AddConstraint(
            model_name='eventparticipation',
            constraint=models.UniqueConstraint(condition=models.Q(('assigned_time_slot__isnull', False), ('team__isnull', False)), fields=('assigned_time_slot', 'team'), name='unique_team_event_time_slot_participation'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['user'], name='teams_teamm_user_id_08f226_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['team'], name='teams_teamm_team_id_015042_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['role'], name='teams_teamm_role_bd3941_idx'),
        ),
        migrations.AddIndex(
            model_name='teammember',
            index=models.Index(fields=['status'], name='teams_teamm_status_4af802_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='teammember',
            unique_together={('user', 'team')},
        ),
    ]
